package Libraries.Data.Formats.ScalableVectorGraphics

use Libraries.Game.Graphics.Color
/*
    The ScalableVectorGraphicsObject class represents all of the global attributes
    that SVG objects can have. Note that because this class
    contains blueprint actions, it can't be used directly. Users should use
    classes that inherit from ScalableVectorGraphicsObject, such as Circle, Rectangle, or Line.

    Attribute: Author Gabriel Contreras

*/
class ScalableVectorGraphicsObject
    //Units for length (including percentage)
    public constant text EM = "em"
    public constant text EX = "ex"
    public constant text PX = "px"
    public constant text IN = "in"
    public constant text CM = "cm"
    public constant text MM = "mm"
    public constant text PT = "pt"
    public constant text PC = "pc"
    public constant text PERCENT = "%"

    //Global Attritbutes of SVG objects
    
    //core attributes
    private text id = ""
    private integer tabIndex = 0

    //styling attributes
    private text styleClass = ""
    private text style = ""

    //presentation attributes
    private text color = ""
    private text fill = ""
    private text fillOpacity = ""
    private text stroke = ""
    private text strokeWidth = ""

    //aria-related attributes
    private text role = ""
    private text ariaActiveDescendant = ""
    private text ariaLabel = ""
    private text ariaDescription = ""
    private text ariaRoleDescription = ""
    private text ariaLabelledBy = ""
    private text ariaDescribedBy = ""
    private text ariaHidden = ""

    //event handlers
    private text onFocus = ""
    private text onBlur = ""
    

    //helper attributes
    private boolean isContainer = false
    private boolean isOneLine = false

    //title and description of svg graphics element or container
    private text title = ""
    private text desc = ""

   
    blueprint action ToText() returns text

    /*
        This is an interal action that allows the ScalableVectorGraphicsObject to write out its global attributes.
    */
    action GlobalAttributesToText() returns text
        result = ""
        dq = result:GetDoubleQuote()
        if id not= ""
            result = result + " id="+dq+id+dq
        end
        result = result + " tabindex="+dq+tabIndex+dq
        if styleClass not= ""
            result = result + " class="+dq+styleClass+dq
        end
        if style not= ""
            result = result + " style="+dq+style+dq
        end
        if color not= ""
            result = result + " color="+dq+color+dq
        end
        if fill not= ""
            result = result + " fill="+dq+fill+dq
        end
        if fillOpacity not= ""
            result = result + " fill-opacity="+dq+fillOpacity+dq
        end
        if stroke not= ""
            result = result + " stroke="+dq+stroke+dq
        end
        if strokeWidth not= ""
            result = result + " stroke-width="+dq+strokeWidth+dq
        end
        if role not= ""
            result = result + " role="+dq+role+dq
        end
        if ariaActiveDescendant not= ""
            result = result + " aria-activedescendant="+dq+ariaActiveDescendant+dq
        end
        if ariaLabel not= ""
            result = result + " aria-label="+dq+ariaLabel+dq
        end
        if ariaDescription not= ""
            result = result + " aria-description="+dq+ariaDescription+dq
        end
        if ariaRoleDescription not= ""
            result = result + " aria-roledescription="+dq+ariaRoleDescription+dq
        end
        if ariaLabelledBy not= ""
            result = result + " aria-labelledby="+dq+ariaLabelledBy+dq
        end
        if ariaDescribedBy not= ""
            result = result + " aria-describedby="+dq+ariaDescribedBy+dq
        end
        if ariaHidden not= ""
            result = result + " aria-hidden="+dq+ariaHidden+dq
        end
        if onFocus not= ""
            result = result + " onfocus="+dq+onFocus+dq
        end
        if onBlur not= ""
            result = result + " onblur="+dq+onBlur+dq
        end
        return result
    end

    /*
        This is an interal action that allows the ScalableVectorGraphicsObject generate the correct closing tag.
    */
    action GetCloseTag(text name, boolean container) returns text
        result = ""
        if container
            result = "</" + name + ">"
        else
            result = " />"
        end
        return result
    end

    /*
        This action will give a title to a ScalableVectorGraphicsObject.
        When an object has a non-empty title a title tag will be generated when the 
        whole object is written out which will show the title as a popup
        box when hovering over the object in the final SVG file.

        Attribute: Parameter title The text that will be the title of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetTitle("My Circle")
    */
    action SetTitle(text title)
        me:title = title
        me:isContainer = true
    end

    /*
        This action will return the currently set title of the object.

        Attribute: Returns The current title of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetTitle("My Circle")
        text myTitle = circle:GetTitle()
    */
    action GetTitle returns text
        return title
    end

    /*
        This action will give a description to a ScalableVectorGraphicsObject.
        When an object has a non-empty description a description tag will be generated when the 
        whole object is written out. A description in SVG functions similarly to the description 
        of an image in HTML.

        Attribute: Parameter description The text that will be the description of the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetDescription("This is my circle and it will be blue")
    */
    action SetDescription(text description)
        me:desc = description
        me:isContainer = true
    end

    /*
        This action will return the currently set description to a ScalableVectorGraphicsObject.

        Attribute: Returns The current text description of the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetDescription("This is my circle and it will be blue")
        text myDescpription = circle:GetDescription()
    */
    action GetDescription returns text
        return desc
    end

    /*
        This action is used internally by the system to designate whether the SVG element is a single tag or
        contains more objects within it.

        Attribute: Parameter isContainer true if it will contain other objects, false if not
    */
    action SetIsContainer(boolean isContainer)
        me:isContainer = isContainer
    end

    /*
        This action is used internally by the system to designate whether the SVG element is a single tag or
        contains more objects within it.

        Attribute: Parameter isContainer true if it will contain other objects, false if not
    */
    action IsContainer returns boolean
        return isContainer
    end

    /*
        This action is used internally by the system to designate whether the SVG element should print with new lines.

        Attribute: Parameter isContainer true if it will contain other objects, false if not
    */
    action SetIsOneLine(boolean isOneLine)
        me:isOneLine = isOneLine
    end

    /*
        This action is used internally by the system to designate whether the SVG element should print with new lines.
    */
    action IsOneLine returns boolean
        return isOneLine
    end

    /*
        This action will give an ID attribute to the SVG element. This is useful in contexts where
        you need to reference an SVG element by a name such as when using a styling sheet with the
        SVG file.

        Attribute: Parameter id The id of the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetID("circle1")
    */
    action SetID(text id)
        me:id = id
    end

    /*
        This action returns the id of the object.

        Attribute: Returns the id of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetID("My Circle")
        output circle:GetID()
    */
    action GetID returns text
        return id
    end

    /*
        This action will give the ScalableVectorGraphicsObject a tab index. A non-negative tab index 
        attribute will allow the element to be focusable and it can define the relative order for 
        sequential navigation with the tab key. If two objects have the same tab index then whichever
        was added first is first in the naviagation. Default is 0 which means the item is focusable.

        Attribute: Parameter tabIndex The index of the object in the tab navigation.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle1
        Circle circle2
        Circle circle3
        circle1:SetTabIndex(1)
        circle2:SetTabIndex(2)
        circle3:SetTabIndex(3)
    */
    action SetTabIndex(integer tabIndex)
        me:tabIndex = tabIndex
    end

    /*
        This action returns the tab index of the object.

        Attribute: Returns the tab index of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetTabIndex(5)
        output circle:GetTabIndex()
    */

    action GetTabIndex returns integer
        return tabIndex
    end

    /*
        This action will give a class attribute to the SVG element. This class can be for gerneral use
        by a web browser or for when using a styling sheet on the SVG file.

        Attribute: Parameter class The class name or set of class names for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStyleClass("circleClass")
    */
    action SetStyleClass(text styleClass)
        me:styleClass = styleClass
    end

    action GetStyleClass returns text
        return styleClass
    end

    /*
        This action will give a style attribute to the SVG element. This attribute also for embedding
        CSS declarations inline with the SVG element. Use of this attribute requires knowledge of CSS.

        Attribute: Parameter style The style information that will be added to the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStyle("fill: skyblue; stroke: navy;")
    */
    action SetStyle(text style)
        me:style = style
    end

    /*
        This action returns the style information of the object.

        Attribute: Returns the style information of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStyle("fill: skyblue; stroke: navy;")
        output circle:GetStyle()
    */
    action GetStyle returns text
        return style
    end

    /*
        This action will give a color attribute to the SVG element. This attribute does not directly change
        an objects color. It provides a color for other attriubtes, such as fill and stroke that may not 
        have a defined color, to inherit a color. 

        Attribute: Parameter color The color for the object. Color in SVG is defined by the CSS data type so this
            could be defined a keyword, the RGB cubic-coordinate system, or the HSL cyclindrical-coordinate system.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetColor("green")
    */
    action SetColor(text color)
        me:color = color
    end

    /*
        This action returns the color of the object.

        Attribute: Returns the color of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetColor("navy")
        output circle:GetColor()
    */
    action GetColor returns text
        return color
    end

    /*
        This action will give a fill attribute to the SVG element. This attribute may do different things depending
        on the type of SVG element. For shapes and text it will define the color used to paint the object

        Attribute: Parameter fill The fill attribute for the object. For shapes and text this will be a color and 
            color in SVG is defined by the CSS data type so this could be defined a keyword, the RGB cubic-coordinate 
            system, or the HSL cyclindrical-coordinate system.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetFill("green")
    */
    action SetFill(text fill)
        me:fill = fill
    end

    
    /*
        This action will give a fill attribute to the SVG element. This attribute may do different things depending
        on the type of SVG element. For shapes and text it will define the color used to paint the object

        Attribute: Parameter fill The fill attribute for the object. For shapes and text this will be a color and 
            color in SVG is defined by the CSS data type so this could be defined a keyword, the RGB cubic-coordinate 
            system, or the HSL cyclindrical-coordinate system.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        use Libraries.Game.Graphics.Color

        Color blue
        blue:SetColor(0, 0, 1, 1)

        Circle circle
        circle:SetFill(blue)
    */
    action SetFill(Color fill)
        if (fill not= undefined)
            text rgba = "rgba(" + fill:GetRed()*255 + "," + fill:GetGreen()*255 + "," + fill:GetBlue()*255 + "," + fill:GetAlpha()*255 + ")"
            me:fill = rgba
        end
    end

    /*
        This action returns the fill of the object.

        Attribute: Returns the fill of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetFill("navy")
        output circle:GetFill()
    */
    action GetFill returns text
        return fill
    end

    /*
        This action will give a fill attribute to the SVG element. This attribute may do different things depending
        on the type of SVG element. For shapes and text it will define the color opaqueness used to paint the object

        Attribute: Parameter opacity The fill opacity attribute for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetFill("green")
        circle:SetFillOpacity("50%") // alternate: circle:SetFillOpacity("0.5")
    */
    action SetFillOpacity(text opacity)
        me:fillOpacity = opacity
    end

    /*
        This action will give a fill attribute to the SVG element. This attribute may do different things depending
        on the type of SVG element. For shapes and text it will define the color opaqueness used to paint the object

        Attribute: Parameter opacity. The fill opacity attribute for the object. Representing the alpha value of the Color.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        use Libraries.Game.Graphics.Color

        Color blue
        blue:SetColor(0, 0, 1, 1)

        Circle circle
        circle:SetFill(blue)
        circle:SetFillOpacity(0.7)
    */
    action SetFillOpacity(number opacity)
        if opacity >= 0 and opacity <= 1
            me:fillOpacity = cast(text, opacity)
        elseif opacity > 1 and opacity <= 100
            me:fillOpacity = cast(text, opacity) + "%"
        end
    end

    /*
        This action returns the fill opacity of the object.

        Attribute: Returns the fill opacity of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetFill("navy")
        circle:SetFillOpacity(0.7)
        output circle:GetFillOpacity()
    */
    action GetFillOpacity returns text
        return fillOpacity
    end

    /*
        This action will give a stroke attribute to the SVG element. This attribute defines the color used to paint 
        the outline of a shape. For shapes like lines that have no fill a stroke must be set so that the line will
        be visible. 

        Attribute: Parameter stroke The stroke attribute for the object. For shapes and text this will be a color and 
            color in SVG is defined by the CSS data type so this could be defined a keyword, the RGB cubic-coordinate 
            system, or the HSL cyclindrical-coordinate system.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStroke("navy")
    */
    action SetStroke(text stroke)
        me:stroke = stroke
    end

    /*
        This action will give a stroke attribute to the SVG element. This attribute defines the color used to paint 
        the outline of a shape. For shapes like lines that have no fill a stroke must be set so that the line will
        be visible. 

        Attribute: Parameter stroke The stroke attribute for the object. For shapes and text this will be a color and 
            color in SVG is defined by the CSS data type so this could be defined a keyword, the RGB cubic-coordinate 
            system, or the HSL cyclindrical-coordinate system.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all
        
        use Libraries.Game.Graphics.Color

        Color blue
        blue:SetColor(0, 0, 1, 1)

        Circle circle
        circle:SetStroke(blue)
    */
    action SetStroke(Color stroke)
        if (stroke not= undefined)
            text rgba = "rgba(" + stroke:GetRed()*255 + "," + stroke:GetGreen()*255 + "," + stroke:GetBlue()*255 + "," + stroke:GetAlpha()*255 + ")"
            me:stroke = rgba
        end
    end

    /*
        This action returns the stroke of the object.

        Attribute: Returns the stroke of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStroke("navy")
        output circle:GetStroke()
    */
    action GetStroke returns text
        return stroke
    end

    /*
        This action sets the width of the stroke of the SVG element. Shapes with an outline have a stroke width. 

        Attribute: Parameter strokeWidth The width of the stroke

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStrokeWidth(5)
    */
    action SetStrokeWidth(number strokeWidth)
        me:strokeWidth = "" + strokeWidth
    end

    /*
        This action sets the width of the stroke of the SVG element along with which unit to use. Shapes with an 
        outline have a stroke width. In SVG, units are defined by unit identifiers giving by the CSS specification 
        along with percentages. 

        Attribute: Parameter strokeWidth The width of the stroke
        Attribute: Parameter unit The unit of the length given.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStrokeWidth(5, "%")
    */
    action SetStrokeWidth(number strokeWidth, text unit)
        me:strokeWidth = "" + strokeWidth + unit
    end

    /*
        This action returns the stroke width of the object. Since lengths can have varying units in SVG the unit will be
        appended to the returned length 

        Attribute: Returns the stroke width with the unit appended if one was given. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetStrokeWidth(5, "%")
        text strokeWidth = circle:GetStrokeWidth()
    */
    action GetStrokeWidth returns text
        return strokeWidth
    end

    /*
        This action will give a role attribute to the SVG element. This role can be for general use
        by a web browser.

        Attribute: Parameter role The role name for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetRole("region")
    */
    action SetRole(text role)
        me:role = role
    end

    action GetRole returns text
        return role
    end

    /*
        This action will give a aria-label attribute to the SVG element. This aria-label can be for general use
        by a web browser.

        Attribute: Parameter ariaLabel The aria-label name for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaLabel("My Circle")
    */
    action SetAriaLabel(text ariaLabel)
        me:ariaLabel = ariaLabel
    end

    action GetAriaLabel returns text
        return ariaLabel
    end

    /*
        This action will give a aria-description attribute to the SVG element. This aria-description can be for general use
        by a web browser.

        Attribute: Parameter ariaDescription The aria-description for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaDescription("This is a blue circle with a radius of 5.0")
    */
    action SetAriaDescription(text ariaDescription)
        me:ariaDescription = ariaDescription
    end

    action GetAriaDescription returns text
        return ariaDescription
    end

    /*
        This action will give a aria-labelledby attribute to the SVG element. This aria-labelledby can be for general use
        by a web browser.

        Attribute: Parameter ariaLabelledBy The aria-labelledby name for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaLabelledBy("id")
    */
    action SetAriaLabelledBy(text ariaLabelledBy)
        me:ariaLabelledBy = ariaLabelledBy
    end

    action GetAriaLabelledBy returns text
        return ariaLabelledBy
    end

    /*
        This action will give a aria-describedby attribute to the SVG element. This aria-describedby can be for general use
        by a web browser.

        Attribute: Parameter ariaDescribedBy The aria-describedby for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaDescribedBy("This is a blue circle with a radius of 5.0")
    */
    action SetAriaDescribedBy(text ariaDescribedBy)
        me:ariaDescribedBy = ariaDescribedBy
    end

    action GetAriaDescribedBy returns text
        return ariaDescribedBy
    end

    /*
        This action will give a aria-hidden attribute to the SVG element. This aria-hideen can be for general use
        by a web browser.

        Attribute: Parameter ariaHidden The aria-hidden for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaHidden("true")
    */
    action SetAriaHidden(text ariaHidden)
        me:ariaHidden = ariaHidden
    end

    action GetAriaHidden returns text
        return ariaHidden
    end

    /*
        This action will give a focus event handler attribute to the SVG element. This focus can be for general use
        by a web browser.

        Attribute: Parameter onFocus The onfocus for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Group group
        group:SetOnFocus("console.log('hello world');")
    */
    action SetOnFocus(text onFocus)
        me:onFocus = onFocus
    end

    action GetOnFocus returns text
        return onFocus
    end

    /*
        This action will give a blur event handler attribute to the SVG element. This blur can be for general use
        by a web browser.

        Attribute: Parameter onBlur The onblur for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Group group
        group:SetOnBlur("console.log('hello world');")
    */
    action SetOnBlur(text onBlur)
        me:onBlur = onBlur
    end

    action GetOnBlur returns text
        return onBlur
    end

    /*
        This action will give a aria-roledescription attribute to the SVG element. This aria-roledescription can be for general use
        by a web browser.

        Attribute: Parameter ariaRoleDescription The aria-roledescription for the object.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        Circle circle
        circle:SetAriaRoleDescription("This is a blue circle with a radius of 5.0")
    */
    action SetAriaRoleDescription(text ariaRoleDescription)
        me:ariaRoleDescription = ariaRoleDescription
    end

    action GetAriaRoleDescription returns text
        return ariaRoleDescription
    end

end