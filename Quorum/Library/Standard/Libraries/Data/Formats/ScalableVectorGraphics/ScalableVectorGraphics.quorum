package Libraries.Data.Formats.ScalableVectorGraphics

use Libraries.Containers.Array

/*
    The ScalableVectorGraphics class is a ScalableVectorGraphicsObject that defines a
    coordinate system and viewport for which other elements can be added to. For an SVG
    file this class defines the outermost element but the SVG standard allows for another SVG 
    to be embedded into an SVG document.

    Attribute: Author Gabriel Contreras

    Attribute: Example

    Libraries.Data.Formats.ScalableVectorGraphics.all

    // make an svg with a circle
    ScalableVectorGraphics canvas
    canvas:SetSize(100,100)

    Circle circle
    circle:SetPosition(50, 50)
    circle:SetRadius(20)
    circle:SetFill("green")

    canvas:Add(circle)

    output canvas:ToText()
*/
class ScalableVectorGraphics is ScalableVectorGraphicsObject
    constant text objectName = "svg"
    private integer width = -1
    private integer height = -1
    private text viewBox = ""
    private integer x = 0
    private integer y = 0
    private boolean isTopLevel = true
    Array<ScalableVectorGraphicsObject> children

    on create
        SetIsContainer(true)
    end

    /*
        This action takes all of the ScalableVectorGraphicsObjects added to this object
        and writes out all of the necessary tags and attributes to a string and returns
        that string. That string can then be pushed to file 

        Attribute: Returns the formatted string of all tags and objects in the SVG 
        
        Attribute: Example
        
        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        output canvas:ToText()
    */
    action ToText returns text
        text result = ""
        text newLine = result:GetLineFeed()
        text tab = result:GetTab()
        text dq = result:GetDoubleQuote()
        result = "<" + objectName
        if width not= -1
            result = result + " width="+ dq + width + dq
        end
        if height not= -1
            result = result + " height=" + dq + height + dq
        end
        if viewBox not= ""
            result = result + viewBox
        end
        if isTopLevel = false
            result = result + " x=" +dq+ x +dq+" y=" +dq+ y +dq
        end
        if isTopLevel
            result = result + newLine
            result = result + tab + "xmlns="+ dq +"http://www.w3.org/2000/svg" + dq
        end
        result = result + ">" + newLine + newLine
        if GetTitle() not= "" or GetDescription() not= ""
            if GetTitle() not= ""
                Title title
                title:SetTitle(GetTitle())
                result = result + tab+ title:ToText() + newLine
            end
            if GetDescription() not= ""
                Description desc
                desc:SetDescription(GetDescription())
                result = result + tab + desc:ToText() + newLine
            end
        end
        integer i = 0
        repeat while i < children:GetSize()
            result = result + tab + children:Get(i):ToText() + newLine
            i = i + 1
        end
        result = result + GetCloseTag(objectName, IsContainer()) + newLine
        return result
    end

    /*
        This action sets whether or not this instance of ScalableVectorGraphics is outermost
        element of the SVG file. Setting this to false opens up the ability add the position
        attributes.

        Attribute: Parameter isTopLevel The text that will be the title of the object. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics innerCanvas
        innerCanvas:SetIsTopLevel(false)
    */
    action SetIsTopLevel(boolean isTopLevel)
        me:isTopLevel = isTopLevel
    end

    /*
        This action will return whether or not the current object is set to be the top
        level element.

        Attribute: Returns true if this ScalableVectorGraphics is set to be top level, false otherwise. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetIsTopLevel(false)
    */
    action IsTopLevel returns boolean
        return isTopLevel
    end

    /*
        This action sets the width and height of the ScalableVectorGraphics. This width and height affects
        the size of viewport of the SVG. ScalableVectorGraphics defines a coordinate system so elements
        that would be outside of this viewport are not visible. 

        Attribute: Parameter width The width of the viewport. 
        Attribute: Parameter height The height of the viewport.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetSize(500,500)
    */
    action SetSize(integer width, integer height)
        me:width = width
        me:height = height
    end

    /*
        This action sets the width of the ScalableVectorGraphics. This width and height affects
        the size of viewport of the SVG. ScalableVectorGraphics defines a coordinate system so elements
        that would be outside of this viewport are not visible. 

        Attribute: Parameter width The width of the viewport. 
        Attribute: Parameter height The height of the viewport.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetWidth(500)
    */
    action SetWidth(integer width)
        me:width = width
    end

    /*
        This action returns the width of the viewport. 

        Attribute: Returns the width of the viewport. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        output canvas:GetWidth()
    */
    action GetWidth returns integer
        return width
    end

    /*
        This action sets the height of the ScalableVectorGraphics. This width and height affects
        the size of viewport of the SVG. ScalableVectorGraphics defines a coordinate system so elements
        that would be outside of this viewport are not visible. 

        Attribute: Parameter height The height of the viewport.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetHeight(500)
    */
    action SetHeight(integer height)
        me:height = height
    end

    /*
        This action returns the height of the viewport. 

        Attribute: Returns the height of the viewport. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        output canvas:GetHeight()
    */
    action GetHeight returns integer
        return height
    end

    /*
        This action adds other ScalableVectorGraphicsObjects as children to this object. When ScalableVectorGraphics
        is written out it will also write out all of the content of its children. To add other elements such as shapes
        and text to an SVG document this action must be used. Note that the order at which objects are drawn on the
        document corresponds to the order they were added using this action.

        Attribute: Parameter object The ScalableVectorGraphicsObject to add as a child.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        Circle circle
        canvas:Add(circle)
    */
    action Add(ScalableVectorGraphicsObject object)
        children:Add(object)
    end

    /*
        This action removes all of the children that have been added. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        Circle circle
        canvas:Add(circle)

        canvas:Empty()
    */
    action Empty
        children:Empty()
    end

    /*
        This action sets the position of the ScalableVectorGraphics in the document. This has no effect
        if ScalableVectorGraphics is the top level element. Note that the x and y define the top left 
        corner of the element in SVG. 

        Attribute: Parameter x The x position of the container. 
        Attribute: Parameter y The y position of the container.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetPosition(50,50)
    */
    action SetPosition(integer x, integer y)
        me:x = x
        me:y = y
    end

    /*
        This action sets the x position of the ScalableVectorGraphics in the document. This has no effect
        if ScalableVectorGraphics is the top level element. Note that the x and y define the top left 
        corner of the element in SVG. 

        Attribute: Parameter x The x position of the container.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetPositionX(50)
    */
    action SetPositionX(integer x)
        me:x = x
    end

    /*
        This action sets the y position of the ScalableVectorGraphics in the document. This has no effect
        if ScalableVectorGraphics is the top level element. Note that the x and y define the top left 
        corner of the element in SVG. 

        Attribute: Parameter y The y position of the container.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetPositionY(50)
    */
    action SetPositionY(integer y)
        me:y = y
    end

    /*
        This action returns the x position of the viewport in the document. 

        Attribute: Returns the x position of the viewport. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        output canvas:GetPositionX()
    */
    action GetPositionX returns integer
        return x
    end

    /*
        This action returns the y position of the viewport in the document. 

        Attribute: Returns the y position of the viewport. 

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        output canvas:GetPositionY()
    */
    action GetPositionY returns integer
        return y
    end

    /*
        This action sets the view box of the ScalableVectorGraphics. ScalableVectorGraphics define
        a coordinate system and the view box defines the position and dimension of the user sapce 
        fills the viewport. The four parameters define the rectangle in user space that is then bound
        to the viewport of this SVG element. Note that the x and y define the top left corner of the element
        in SVG. 

        Attribute: Parameter minX The x position of the view box rectangle. 
        Attribute: Parameter minY The y position of the view box rectangle
        Attribute: Parameter width The width of the view box rectangle.
        Attribute: Parameter height The height of the view box rectangle.

        Attribute: Example

        Libraries.Data.Formats.ScalableVectorGraphics.all

        ScalableVectorGraphics canvas
        canvas:SetViewBox(0,0,1000,1000)
    */
    action SetViewBox(integer minX, integer minY, integer width, integer height)
        me:viewBox = minX + " " + minY + " " + width + " " + height
    end

end