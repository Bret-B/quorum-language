package Libraries.Data.Database.Support
use Libraries.Data.Database.Find

/*
    This is a support class not exposed to the user that holds information about a reference to table used in a query.
    This class holds the name of the table, the alias of the table if there is one, and whether or not the name is referencing
    another query. 
*/
class TableTarget is RemappableName

    text table = ""
    boolean isSubquery = false
    Find subquery = undefined

    /*
        Sets the name of this target. 
    */
    action SetTable(text table)
        me:table = table
    end

    /*
        Returns the name of this target. 
    */
    action GetTable returns text
        return table
    end

    /*
        Sets the Subquery that the given name will reference.
        Only Find queries are supported for sub queries.
    */
    action SetSubquery(Find subquery)
        me:subquery = subquery
        SetIsSubquery(true)
    end

    /*
        Returns the query object being used as a table.
    */
    action GetSubquery returns Find
        return subquery
    end

    /*
        Set to true if this is subquery. Query classes use this because how the query is written
        changes if a subquery is being used.
    */
    action SetIsSubquery(boolean isSubquery)
        me:isSubquery = isSubquery
    end

    /*
        Returns true if this table is a subquery.
    */
    action IsSubquery returns boolean
        return isSubquery
    end

    /* 
        FOR USE WHEN A SUBQUERY 
        Subqueries act as a table and this action is to check 
        the "columns" of the table this subquery mimics.
    */
    action HasColumn(text column) returns boolean
        if isSubquery and subquery not= undefined
            return subquery:HasColumn(column)
        end
        return false
    end

end