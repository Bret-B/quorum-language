package Libraries.Data.Database

/*
    The Connection class stores information needed to create a connection to 
    a database. The database class has actions where the information stored here
    will be used to establish a connection and make it possible to query the database. 

    Attribute: Example

    use Libraries.Data.Database.Database
    use Libraries.Data.Database.Connection

    Database db

    Connection connection
    connection:SetUsername("root")
    connection:SetPassword("secret")
    connection:SetLocation("localhost")
    connection:SetPort(3306)
    connection:SetDatabase("myDB")
    db:Connect(connection)

*/
class Connection
    text username = ""
    text password = ""
    text location = ""
    text database = ""
    integer port = 3306    

/*
    This action returns the username set for this connection

    Attribute: Returns Returns the set username for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetUsername("root")

    output connection:GetUsername()
*/
    action GetUsername returns text
        return username
    end

/*
    This action sets the username for this connection

    Attribute: Parameter username The username to set for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetUsername("root")
*/
    action SetUsername(text username)
        me:username = username
    end

/*
    This action returns the password set for this connection.

    Attribute: Returns Returns the set password for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetPassword("secret")

    output connection:GetPassword()
*/
    action GetPassword returns text
        return password
    end

/*
    This action sets the password for this connection. Remember that password that would be set will be in plain text
    so if the password is not meant to be seen on others make sure to not expose that if sharing code.

    Attribute: Parameter password The password to set for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetPassword("secret")
*/
    action SetPassword(text password)
        me:password = password
    end

/*
    This action returns the location set for this connection. The location would be the name of the server
    that is running the database. For example, "localhost" would be a common location when the database 
    server is running on the same machine that will be running the queries.

    Attribute: Returns Returns the set location for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetLocation("secret")

    output connection:GetLocation()
*/
    action GetLocation returns text
        return location
    end

/*
    This action sets the location for this connection. The location would be the name of the server
    that is running the database. For example, "localhost" would be a common location when the database 
    server is running on the same machine that will be running the queries.

    Attribute: Parameter location The location to set for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetLocation("localhost")
*/
    action SetLocation(text location)
        me:location = location
    end

/*
    This action returns the port used to make a connection. By default the port will be set to 3306.
 
    Attribute: Returns Returns the set port for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    output connection:GetPort()
*/
    action GetPort returns integer
        return port
    end

/*
    This action sets the port for the database connection. By default the port is set to 3306 since
    that is the default port for MySQL servers. 

    Attribute: Parameter port The port to set for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetPort(3306)
*/
    action SetPort(integer port)
        me:port = port
    end

/*
    This action returns the name of database set for this connection.

    Attribute: Returns Returns the set location for this connection

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetDatabase("myDB")

    output connection:GetDatabase()
*/
    action GetDatabase returns text
        return database
    end

/*
    This action sets name of the database to connect to.

    Attribute: Parameter database The name of the database to connect to

    Attribute: Example

    use Libraries.Data.Database.Connection

    Connection connection
    connection:SetDatabase("myDB")
*/
    action SetDatabase(text database)
        me:database = database
    end

end