package Libraries.Game.Scenes
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Array
use Libraries.Game.Graphics.AmbientLight
use Libraries.Game.Graphics.PointLight
use Libraries.Game.Graphics.DirectionalLight
use Libraries.Containers.Number32BitArray

class LightSceneProperty is SceneProperty
    constant text TYPE = "Type"
    constant text LOCATION = "Location"
    constant text DIRECTION = "Direction"
    constant text COLOR = "Color"
    constant text NAME = "Name"
    constant text DESCRIPTION = "Description"
    constant text INTENSITY = "Intensity"

    constant text POINT = "Point"
    constant text AMBIENT = "Ambient"
    constant text DIRECTIONAL = "Directional"
    AmbientLight currentAmbient = undefined
    DirectionalLight currentDirectional = undefined
    PointLight currentPoint = undefined
    
    Array<AmbientLight> ambientLights
    Array<DirectionalLight> directionalLights
    Array<PointLight> pointLights

    text currentType = undefined
    Number32BitArray currentLocationArray = undefined
    Number32BitArray currentDirectionArray = undefined
    Number32BitArray currentColorArray = undefined

    action GetAmbientLights returns Array<AmbientLight>
        return ambientLights
    end

    action GetDirectionalLights returns Array<DirectionalLight>
        return directionalLights
    end

    action GetPointLights returns Array<PointLight>
        return pointLights
    end

    action LoadLights(JavaScriptObjectNotation notation)
        Array<text> keys = notation:GetKeys()
        i = 0
        repeat while i < keys:GetSize()
            text key = keys:Get(i)
            JavaScriptObjectNotation light = notation:GetObject(key)
            Array<text> lightKeys = light:GetKeys()
            j = 0
            repeat while j < lightKeys:GetSize()
                text lightKey = lightKeys:Get(j)
                ProcessKey(lightKey, light)
                j = j + 1
            end
            i = i + 1
        end
    end

    private action ProcessKey(text key, JavaScriptObjectNotation notation)
        if key = TYPE
            currentType = notation:GetValue(TYPE)
            JavaScriptObjectNotation jsonType
            jsonType:SetKey(TYPE)
            jsonType:SetText(currentType)
            if currentType = POINT
                PointLight light
                currentPoint = light
                pointLights:Add(currentPoint)
            elseif currentType = AMBIENT
                AmbientLight light
                currentAmbient = light
                ambientLights:Add(currentAmbient)
            elseif currentType = DIRECTIONAL
                DirectionalLight light
                currentDirectional = light
                directionalLights:Add(currentDirectional)
            end
        elseif key = NAME
            if currentType = POINT
                text name = notation:GetValue(NAME)
                currentPoint:SetName(name)
           end
        elseif key = DESCRIPTION
            text description = notation:GetValue(DESCRIPTION)
            if currentType = POINT
                PointLight light
                currentPoint:SetDescription(description)
            end
        elseif key = INTENSITY
            if currentType = POINT
                number intensity = notation:GetNumber(INTENSITY)
                currentPoint:SetIntensity(intensity)
           end
        elseif key = LOCATION
            if currentType = POINT
                JavaScriptObjectNotation location = notation:GetObject(LOCATION)
                currentLocationArray = ConvertToNumber32BitArray(location)
                currentPoint:SetPosition(currentLocationArray:Get(0), currentLocationArray:Get(1), currentLocationArray:Get(2))
           end
        elseif key = DIRECTION
            if currentType = DIRECTIONAL
                JavaScriptObjectNotation location = notation:GetObject(DIRECTION)
                currentDirectionArray = ConvertToNumber32BitArray(location)
                currentDirectional:SetDirection(currentDirectionArray:Get(0), currentDirectionArray:Get(1), currentDirectionArray:Get(2))
           end
        elseif key = COLOR
            JavaScriptObjectNotation color = notation:GetObject(COLOR)
            currentColorArray = ConvertToNumber32BitArray(color)
            if currentType = POINT
                currentPoint:SetColor(currentColorArray:Get(0), currentColorArray:Get(1), currentColorArray:Get(2), currentColorArray:Get(3))
            elseif currentType = AMBIENT
                currentAmbient:SetColor(currentColorArray:Get(0), currentColorArray:Get(1), currentColorArray:Get(2), currentColorArray:Get(3))
            elseif currentType = DIRECTIONAL
                currentDirectional:SetColor(currentColorArray:Get(0), currentColorArray:Get(1), currentColorArray:Get(2), currentColorArray:Get(3))
            end
        end
    end
end