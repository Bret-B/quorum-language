package Libraries.Game.Scenes

use Libraries.Compute.Vector3
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Number32BitArray
use Libraries.Containers.Array

class PhysicsSceneProperty is SceneProperty
    constant text ENABLED = "Enabled"
    constant text GRAVITY = "Gravity"

    boolean physics3DEnabled = false
    Vector3 gravity3D = undefined

    action IsPhysics3DEnabled returns boolean
        return physics3DEnabled
    end

    action GetGravity3D returns Vector3
        return gravity3D
    end

    private action ProcessPhysics3DKey(text key, JavaScriptObjectNotation notation)
        if key = ENABLED
            boolean enabled = notation:GetBoolean(ENABLED)
            physics3DEnabled = enabled
        elseif key = GRAVITY
            JavaScriptObjectNotation physics = notation:GetObject(GRAVITY)
            Number32BitArray gravity = ConvertToNumber32BitArray(physics)
            Vector3 gravity3D
            me:gravity3D = gravity3D
            gravity3D:Set(gravity:Get(0),gravity:Get(1),gravity:Get(2))
        end
    end

    action LoadPhysics3D(JavaScriptObjectNotation notation)
        Array<text> keys = notation:GetKeys()
        i = 0
        repeat while i < keys:GetSize()
            text key = keys:Get(i)
            ProcessPhysics3DKey(key, notation)
            i = i + 1
        end
    end
end