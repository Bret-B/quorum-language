package Libraries.Game.Graphics

use Libraries.Containers.Array
use Libraries.Compute.BitwiseOperations

shared class AttributeManager

    Array<text> types
    integer materialCounter = 0

    BitwiseOperations bits

    action GetAlias(integer type) returns text
        integer index = 0
        if type = 0
            return undefined
        end

        repeat while index < types:GetSize() and (bits:And(bits:ShiftRight(type, index), 1) = 0)
            index = index + 1
        end

        if index < types:GetSize()
            return types:Get(index)
        else
            return undefined
        end
    end

    action GetType(text alias) returns integer
        integer counter = 0
        repeat while counter < types:GetSize()
            if types:Get(counter):EqualsIgnoringCase(alias)
                return bits:ShiftLeft(1, counter)
            end
            counter = counter + 1
        end

        return 0
    end

    action Register(text alias) returns integer
        integer result = GetType(alias)
        if result > 0
            return result
        end

        if types:GetSize() >= 32
            text dq = alias:GetDoubleQuote()
            alert("I couldn't register the new Attribute " + dq + alias + dq + " because the maximum number of attributes has already been registered (32).")
        end

        types:Add(alias)
        return bits:ShiftLeft(1, types:GetSize() - 1)
    end

    action GenerateMaterialID returns text
        materialCounter = materialCounter + 1
        return "Material " + materialCounter
    end

end