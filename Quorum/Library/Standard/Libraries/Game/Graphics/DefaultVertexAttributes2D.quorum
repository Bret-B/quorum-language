package Libraries.Game.Graphics

use Libraries.Containers.Array

class DefaultVertexAttributes2D is VertexAttributes

    on create
        SetAttributes(undefined)
    end

    action SetAttributes(Array<VertexAttribute> array)
        Array<VertexAttribute> attributes = parent:VertexAttributes:attributes
        
        if array not= undefined
            // At a minimum, the size will contain our three default vertex values.
            attributes:SetSize(3 + array:GetSize())
        else
            attributes:SetSize(3)
        end
        
        // Insert the 3 default vertex properties: position, color (RGBA packed into a single 32-bit integer), and texture coordinates
        VertexAttribute dummy
        attributes:Set(0, dummy:Position())
        attributes:Set(1, dummy:ColorPacked())
        attributes:Set(2, dummy:TextureCoordinates(0))

        if array not= undefined
            integer counter = 0
            integer customUsage = 512
            repeat while counter < array:GetSize()
                VertexAttribute attribute = array:Get(counter)
                if attribute:usage = -1
                    // Update the usage to have a custom value unique to this set of VertexAttributes.
                    attribute:SetAttribute(customUsage, attribute:componentCount, attribute:type, attribute:normalized, attribute:alias, attribute:unit)
                    customUsage = 512 * 2
                end
                attributes:Set(counter + 3, attribute)
                counter = counter + 1
            end
        end

        parent:VertexAttributes:vertexSize = CalculateOffsets()
    end

end