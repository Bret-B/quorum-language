package Libraries.Game.Graphics

use Libraries.Containers.Array
use Libraries.Game.Graphics.IndexData
use Libraries.Containers.Integer32BitArray

class IndexBufferObject is IndexData

    boolean isDirect = true
    boolean isDirty = true
    boolean isBound = false
    integer usage = 0
    private boolean empty = true

    system action Dispose

    action Load(integer maxIndices)
        Load(true, maxIndices)
    end

    system action Load(boolean isStatic, integer maxIndices)

    system action GetSize returns integer

    system action GetMaxSize returns integer

    action SetIndices(Integer32BitArray indices, integer offset, integer count)
        SendToBridgeArray(indices)
        SetIndices(offset, count)
    end

    private system action SetIndices(integer offset, integer count)

    system action Bind

    system action Unbind

    // Used to force OpenGL to create a new buffer handle. Used for context loss.
    system action Reload

    system action Clear

    action Put(Integer32BitArray values)
        //PrepareBridgeArray(values:GetSize())
        SendToBridgeArray(values)
        PutBridgeArray()
    end

    /* Sends an entire Quorum array to be stored in the bridge array within the plugins. */
    private system action SendToBridgeArray(Integer32BitArray array)

    private system action PutBridgeArray

    system action SetPosition(integer position)
end