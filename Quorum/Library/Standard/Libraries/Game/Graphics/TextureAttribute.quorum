package Libraries.Game.Graphics
use Libraries.Compute.BitwiseOperations

class TextureAttribute is Attribute
    
    public constant text DIFFUSE_ALIAS = "diffuseTexture"
    public constant text SPECULAR_ALIAS = "specularTexture"
    public constant text BUMP_ALIAS = "bumpTexture"
    public constant text NORMAL_ALIAS = "normalTexture"
    public constant text AMBIENT_ALIAS = "ambientTexture"
    public constant text EMISSIVE_ALIAS = "emissiveTexture"
    public constant text REFLECTION_ALIAS = "reflectionTexture"

    AttributeManager manager
    
    public constant integer DIFFUSE = manager:Register(DIFFUSE_ALIAS)
    public constant integer SPECULAR = manager:Register(SPECULAR_ALIAS)
    public constant integer BUMP = manager:Register(BUMP_ALIAS)
    public constant integer NORMAL = manager:Register(NORMAL_ALIAS)
    public constant integer AMBIENT = manager:Register(AMBIENT_ALIAS)
    public constant integer EMISSIVE = manager:Register(EMISSIVE_ALIAS)
    public constant integer REFLECTION = manager:Register(REFLECTION_ALIAS)

    BitwiseOperations bits
    public constant integer BITMASK = bits:Or(DIFFUSE, bits:Or(SPECULAR, bits:Or(BUMP, bits:Or(NORMAL, bits:Or(AMBIENT, bits:Or(EMISSIVE, REFLECTION))))))

    public TextureDescriptor descriptor
    public number offsetU = 0
    public number offsetV = 0
    public number scaleU = 1
    public number scaleV = 1



    /* The index of the texture coordinate vertex attribute to use for this 
    TextureAttribute. Whether this value is used, depends on the shader and 
    Attribute type value. For basic (model specific) types (e.g. Diffuse, Normal,
    etc.), this value is usually ignored and the first texture coordinate vertex
    attribute is used. */
    public integer uvIndex = 0

    action CreateDiffuse(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetDiffuseValue(), texture)
        return temp
    end

    action CreateDiffuse(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetDiffuseValue(), texture)
        return temp
    end

    action CreateSpecular(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetSpecularValue(), texture)
        return temp
    end

    action CreateSpecular(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetSpecularValue(), texture)
        return temp
    end

    action CreateBump(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetBumpValue(), texture)
        return temp
    end

    action CreateBump(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetBumpValue(), texture)
        return temp
    end

    action CreateNormal(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetNormalValue(), texture)
        return temp
    end

    action CreateNormal(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetNormalValue(), texture)
        return temp
    end

    action CreateAmbient(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetAmbientValue(), texture)
        return temp
    end

    action CreateAmbient(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetAmbientValue(), texture)
        return temp
    end

    action CreateEmissive(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetEmissiveValue(), texture)
        return temp
    end

    action CreateEmissive(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetEmissiveValue(), texture)
        return temp
    end

    action CreateReflection(Texture texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetReflectionValue(), texture)
        return temp
    end

    action CreateReflection(TextureDescriptor texture) returns TextureAttribute
        TextureAttribute temp
        temp:SetAttribute(GetReflectionValue(), texture)
        return temp
    end

    action SetAttribute(integer setType, TextureDescriptor description)
        parent:Attribute:SetAttribute(setType)
        if not SupportsAttribute(setType)
            alert("The given type with integer value " + setType + " is not supported by TextureAttribute.")
        end
        descriptor:SetDescriptor(description)
    end

    action SetAttribute(integer setType, Texture texture)
        parent:Attribute:SetAttribute(setType)
        if not SupportsAttribute(setType)
            alert("The given type with integer value " + setType + " is not supported by TextureAttribute.")
        end
        descriptor:texture = texture
    end

    action SetAttribute(integer setType, TextureDescriptor description, number offU, number offV, number sU, number sV)
        SetAttribute(setType, description)
        offsetU = offU
        offsetV = offV
        scaleU = sU
        scaleV = sV
    end

    action Copy returns Attribute
        TextureAttribute new
        new:SetAttribute(parent:Attribute:type, descriptor, offsetU, offsetV, scaleU, scaleV)
        return new
    end

    /*
    This aciton will test if the given integer value represents a supported 
    attribute type for a TextureAttribute.
    */
    action SupportsAttribute(integer type) returns boolean
        return bits:And(BITMASK, type) not= 0
    end

    /*
    This action returns the integer value representing a Diffuse TextureAttribute.
    */
    action GetDiffuseValue returns integer
        return DIFFUSE
    end

    /*
    This action returns the integer value representing a Specular TextureAttribute.
    */
    action GetSpecularValue returns integer
        return SPECULAR
    end

    /*
    This action returns the integer value representing a Bump TextureAttribute.
    */
    action GetBumpValue returns integer
        return BUMP
    end

    /*
    This action returns the integer value representing a Normal TextureAttribute.
    */
    action GetNormalValue returns integer
        return NORMAL
    end
    
    /*
    This action returns the integer value representing an Ambient TextureAttribute.
    */
    action GetAmbientValue returns integer
        return AMBIENT
    end
        
    /*
    This action returns the integer value representing an Emissive TextureAttribute.
    */
    action GetEmissiveValue returns integer
        return EMISSIVE
    end

    /*
    This action returns the integer value representing a reflection TextureAttribute.
    */
    action GetReflectionValue returns integer
        return REFLECTION
    end

    /*
    This action returns the sum of all supported value types for a TextureAttribute.
    */
    action GetAttributeMask returns integer
        return BITMASK
    end

end