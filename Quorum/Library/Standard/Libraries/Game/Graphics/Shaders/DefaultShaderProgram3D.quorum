package Libraries.Game.Graphics.Shaders

class DefaultShaderProgram3D is ShaderProgram

    on create
        DefaultVertexShader3D vertex
        DefaultFragmentShader3D fragment

        Add(vertex)
        Add(fragment)
    end

    action OnBegin
        // TO-DO: 
        /*
        this.camera = camera;
        this.context = context;
        program.Begin();
        currentMesh = null;

        for (int u, i = 0; i < globalUniforms.size; ++i)
            if (setters.get(u = globalUniforms.get(i)) != null)
                setters.get(u).Set(this, u, null, null);
        */

        /*
        for (final DirectionalLight dirLight : directionalLights)
        {
            dirLight.SetColor(0, 0, 0, 1);
            dirLight.SetDirection(0, -1, 0);
        }
        for (final PointLight_ pointLight : pointLights)
        {
            pointLight.SetColor(0, 0, 0, 0);
            pointLight.SetPosition(0, 0, 0);
            pointLight.SetIntensity(0);
        }
        /*
        for (final SpotLight spotLight : spotLights)
                spotLight.set(0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0);
        *
        lightsSet = false;

        if (Has(u_time))
            Set(u_time, time += (float)GameStateManager.display.GetSecondsBetweenFrames());
        */
        alert("DefaultShaderProgram3D OnBegin: NYI")
    end

    action OnEnd
        // TO-DO:
        alert("DefaultShaderProgram3D OnEnd: NYI")
    end

end