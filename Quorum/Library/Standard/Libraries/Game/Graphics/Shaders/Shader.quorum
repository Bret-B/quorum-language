package Libraries.Game.Graphics.Shaders
use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.GraphicsManager

class Shader

    // The constants listed below are equal to the OpenGL constants for shader types.

    // This type constant is used to indicate that the shader is a fragment shader.
    public constant integer FRAGMENT_SHADER = 35632

    // This type constant is used to indicate that the shader is a vertex shader.
    public constant integer VERTEX_SHADER = 35633
    
    GameStateManager manager

    integer type = 0
    text name = ""
    text code = ""

    integer shaderID = -1
    boolean compiled = false

    action GetType returns integer
        return type
    end

    action SetType(integer type)
        me:type = type
    end

    action GetCode returns text
        return code
    end

    action SetCode(text code)
        me:code = code
    end

    action Compile
        if IsCompiled()
            return now
        end

        if name = ""
            alert("I couldn't compile this shader because its name hasn't been set. Use the SetName action before compiling this shader.")
        end

        ShaderManager shaderManager
        shaderManager:Register(name, me)

        GraphicsManager graphics = manager:GetGameGraphics()
        shaderID = graphics:CreateShader(type, code)

        compiled = true
    end

    action IsCompiled returns boolean
        return compiled
    end

    action GetID returns integer
        return shaderID
    end

    action GetName returns text
        return name
    end

    action SetName(text name)
        if IsCompiled()
            alert("I can't rename the shader called " + GetName() + " because it has already been compiled. Names can only be changed before the shader is compiled.")
        end

        me:name = name
    end

end