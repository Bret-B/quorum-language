package Libraries.Game.Graphics.Shaders

class DefaultFragmentShader3D is Shader

    on create
        SetType(parent:Shader:FRAGMENT_SHADER)
        ShaderManager manager
        SetName(manager:DEFAULT_3D_VERTEX_SHADER)

        DefaultAttributeNames attributes
        SetCode(
"// Default values: u_diffuseColor = vec4(1.0), v_color = vec4(1.0), u_specularColor = vec4(1.0)

#ifdef GL_ES 
    #define LOWP lowp
    #define MED mediump
    #define HIGH highp
    precision mediump float;
#else
    #define MED
    #define LOWP
    #define HIGH
#endif


uniform bool enableBlending;
uniform bool enableAlphaTest;
uniform bool enableDiffuseTexture;
uniform bool enableSpecularTexture;
uniform bool enableLighting;
uniform bool enableSpecular;

uniform vec4 u_diffuseColor;
uniform sampler2D u_diffuseTexture;
uniform vec4 u_specularColor;
uniform sampler2D u_specularTexture;

varying vec4 v_color;
uniform float u_opacity;
uniform float u_alphaTest;
varying MED vec2 v_diffuseUV;
varying MED vec2 v_specularUV;

varying vec3 v_lightDiffuse;
varying vec3 v_lightSpecular;

void main() {
    vec4 diffuse;
    if (enableDiffuseTexture)
        diffuse = texture2D(u_diffuseTexture, v_diffuseUV) * u_diffuseColor * v_color;
    else
        diffuse = u_diffuseColor * v_color;

    if (!enableLighting)
        gl_FragColor.rgb = diffuse.rgb;
    else
    {
        if (!enableSpecular)
            gl_FragColor.rgb = (diffuse.rgb * v_lightDiffuse);
        else
        {
            vec3 specular;
            if (enableSpecularTexture)
                specular = texture2D(u_specularTexture, v_specularUV).rgb * u_specularColor.rgb * v_lightSpecular;
            else
                specular = u_specularColor.rgb * v_lightSpecular;
                
            gl_FragColor.rgb = (diffuse.rgb * v_lightDiffuse) + specular;
        }
    }

    if (enableBlending)
    {
        gl_FragColor.a = diffuse.a * u_opacity;
        if (enableAlphaTest && gl_FragColor.a <= u_alphaTest)
            discard;
    }
    else
        gl_FragColor.a = 0.5;
}"
)
    end

end