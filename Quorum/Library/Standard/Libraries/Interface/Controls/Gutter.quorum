package Libraries.Interface.Controls

use Libraries.Containers.Array
use Libraries.Game.Graphics.Color
use Libraries.Interface.Events.GutterEvent
use Libraries.Interface.Events.GutterListener
use Libraries.Interface.Events.MouseEvent
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Views.LabelBoxView
use Libraries.Interface.Views.ControlShaderView

class Gutter is Control
    
    ScrollableLineControl control = undefined
    integer firstLine = -1

    Array<GutterListener> listeners

    on create
        SetInterfaceOptionsKey("Gutter")

        LayoutProperties defaultProperties = GetDefaultLayoutProperties()
        defaultProperties:SetBorderThickness(1)
        defaultProperties:SetBorderStyle(defaultProperties:RIGHT)

        SetInputGroup("Gutter")
    end

    action UpdateLines(integer firstLine)
        me:firstLine = firstLine
        UpdateVisuals(firstLine)
    end

    blueprint action UpdateVisuals(integer firstLine)

    blueprint action GetGutterThickness returns number

    action ClickedMouse(MouseEvent mouseEvent)
        integer clickedLine = firstLine
        number y = mouseEvent:GetY() - control:GetScrollableRegion():GetGlobalY()
        number threshold = control:GetLineY(firstLine)
        
        repeat while y < threshold
clickedLine = clickedLine + 1
threshold = control:GetLineY(clickedLine)
        end

        GutterEvent event
        event:Set(me, clickedLine, mouseEvent)
        integer counter = 0
        repeat while counter < listeners:GetSize()
            listeners:Get(counter):GutterClicked(event)
            counter = counter + 1
        end

        /*
        Typically we'd want to allow the parent action to proceed so that it
        can process the mouse click with the view, but in the gutter's case
        we don't want the gutter to depress like a button, so we omit it.
        */
        // parent:Control:ClickedMouse()
    end

    action LoadGraphics(LayoutProperties properties)
        if properties:GetView2D() = undefined
            if GetView2D() = undefined
                ControlShaderView view
                view:Initialize()
                SetView2D(view)
            end
        elseif properties:GetView2D() not= GetView2D()
            SetView2D(properties:GetView2D())
        end

        parent:Control:LoadGraphics(properties)
    end

    action AddGutterListener(GutterListener listener)
        listeners:Add(listener)
    end

    action RemoveGutterListener(GutterListener listener)
        listeners:Remove(listener)
    end

    action GetGutterListeners returns Array<GutterListener>
        return listeners
    end

    action EmptyGutterListeners
        listeners:Empty()
    end

    action GetControl returns ScrollableLineControl
        return control
    end

    action SetControl(ScrollableLineControl control)
        me:control = control
    end

end