package Libraries.Interface.Controls.Scenes.Items.Previews

use Libraries.Game.Graphics.Model
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Material
use Libraries.Game.Graphics.ColorAttribute
use Libraries.Compute.Matrix4
use Libraries.Interface.Controls.Scenes.Items.EditorCursor
use Libraries.Interface.Controls.Scenes.Blueprints.Audio3DBlueprint
use Libraries.Interface.Controls.Scenes.Items.Previews.ItemPreview3D
use Libraries.Interface.Controls.Scenes.SceneEditor_LIBRARY
use Libraries.Interface.Controls.Scenes.Items.EditorAudio3D
use Libraries.Interface.Controls.Scenes.Items.EditorCursor3D

/*
    The Audio3DPreview class is an item only meant to visible in the editor that represents
    an Audio3D item in a 3D scene. In a 3D scene Audio3D has no visible component it will only exist
    as a sound that can be heard by the user and might have spatial aspects. When editing the scene 
    the preview to show a user where the Audio3D is located where the sound is in 3D space and a placeholder box is
    visible so it's easier to locate in the scene editor. 
*/
class Audio3DPreview is ItemPreview3D, EditorAudio3D

    action Load(SceneEditor_LIBRARY controller, Audio3DBlueprint schematic)
        SetSceneEditor(controller)
        SetItemBlueprint(schematic)

        SetName(schematic:GetName() + controller:GetNextNamePostfix(schematic:GetName()))
        SetDescription(schematic:GetDescription())

        LoadBox(0.5, 0.5, 0.5, schematic:GetModelTexture())

        Color color
        color:SetColor(1, 1, 1, 0.75)
    
        // We need to add a diffuse color attribute to the model so that the textured box also supports color.
        SetColor(color)

        source = schematic:GetSource()
        maxVolumeDistance = schematic:GetMaxVolumeDistance()
        rolloffRate = schematic:GetRolloffRate()
        volume = schematic:GetVolume()
        pitch = schematic:GetPitch()
        playOnLoad = schematic:GetPlayOnLoad()
        looping = schematic:GetLooping()
        doppler = schematic:GetDoppler()

        EditorCursor cursor = controller:GetCursor()
        if cursor is EditorCursor3D
            EditorCursor3D cursor3D = cast(EditorCursor3D, cursor)
            SetPosition(cursor3D:GetX(), cursor3D:GetY(), cursor:GetZ())
        end
    end

    action ConvertToModel returns Model
        EditorAudio3D audio
        audio:LoadPlaceholderBox()

        audio:SetName(GetName())
        audio:SetDescription(GetDescription())

        audio:SetSource(GetSource())
        audio:SetMaximumVolumeDistance(GetMaximumVolumeDistance())
        audio:SetRolloffRate(GetRolloffRate())
        audio:SetVolume(GetVolume())
        audio:SetPitch(GetPitch())
        audio:SetPlayOnLoad(GetPlayOnLoad())
        audio:SetLooping(GetLooping())
        audio:SetDoppler(GetDoppler())

        audio:SetPosition(GetPosition())

        return audio
    end

end