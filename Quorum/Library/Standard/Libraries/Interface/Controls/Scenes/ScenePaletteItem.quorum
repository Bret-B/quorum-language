package Libraries.Interface.Controls.Scenes

use Libraries.Interface.Controls.TreeItem
use Libraries.Interface.Controls.Scenes.Blueprints.ItemBlueprint
use Libraries.Interface.Controls.Scenes.SceneEditor

/*
    The ScenePaletteItem class is a TreeItem used in the ScenePalette to represent
    an item that can be added to the scene. For example if the palette has a tree drawable
    that can be added to the scene the ScenePalette will have a tree item that has an icon
    of the tree and the user needs to interact with the ScenePaletteItem to add the tree to
    the scene.
*/
class ScenePaletteItem is TreeItem

    PaletteItemContent content

    ItemBlueprint itemBlueprint = undefined

    /*
        Returns the Blueprint this item represents. The blueprints contains information on
        how to generate the item and also the icon this item will use in the Tree. 
    */
    action GetItemBlueprint returns ItemBlueprint
        return itemBlueprint
    end

    /*
        Sets the blueprint this ScenePaletteItem represents. When the blueprint is set the
        content of this TreeItem is updated so the icon is the icon set in the blueprint to
        give the user a visual of the item before choosing to add it to the scene. 
    */
    action SetItemBlueprint(ItemBlueprint itemBlueprint)
        me:itemBlueprint = itemBlueprint
        SetTreeItemContent(content)
        content:Load(itemBlueprint)
    end    

    /*
        Returns the ScenePalette this object is a part of. 
    */
    action GetPalette returns ScenePalette
        if GetTree() is ScenePalette
            return cast(ScenePalette, GetTree())
        end
        return undefined
    end

    /*
        Returns the SceneEditor the palette is associated to. This is needed so that the palette
        can adds items to the correct editor.
    */
    action GetSceneEditor returns SceneEditor
        ScenePalette palette = GetPalette()
        if palette not= undefined
            return palette:GetSceneEditor()
        end
        return undefined
    end

end