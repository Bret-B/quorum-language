package Libraries.Interface.Controls

use Libraries.Interface.Accessibility
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Views.ToggleView
use Libraries.Game.GameStateManager

/*
    The ToggleButton class is a Button object that is used as a parent
    class for toggle button type of buttons. This includes Radio buttons
    and CheckBox buttons.

    Attribute: Author Andreas Stefik, William Allee
*/
class ToggleButton is Button
    
    boolean toggled = false
    boolean canToggleOff = true
    ButtonGroup group = undefined
    GameStateManager manager

    on create
        SetInterfaceOptionsKey("ToggleButton")
        SetAccessibilityCode(parent:Item:TOGGLE_BUTTON)
    end

    /*
        Sets whether the toggle button is toggled on (checked/selected) or not.

        Attribute: Parameter toggleState if true toggle on.
    */
    action SetToggleState(boolean toggleState)
        if toggled = toggleState
            return now
        end

        if toggleState = true and group not= undefined
            group:DeselectAll()
        end

        toggled = toggleState
        if GetView2D() is ToggleView
            ToggleView content = cast(ToggleView, GetView2D())
            content:SetToggleState(toggleState)
        end

        Behavior behavior = GetActivationBehavior()
        if toggleState = true
            OnToggleOn()
            if behavior not= undefined
                BehaviorEvent event
                event:SetItem(me)
                behavior:Run(event)
            end
        else
            OnToggleOff()
            if behavior not= undefined
                behavior:Dispose()
            end
        end

        Accessibility accessibility = manager:GetAccessibility()
        if accessibility not= undefined
            accessibility:ToggleButtonToggled(me)
        end

        if toggleState
            GainedSelection()
        else
            LostSelection()
        end
    end
    /*
        This action is fired if the item received the focus.
    */
    action GainedSelection
        parent:Control:GainedSelection()
        parent:Button:UpdateLabelColor()
    end
    /*
        This action is fired if the item lost the focus.
    */
    action LostSelection
        parent:Control:LostSelection()
        parent:Button:UpdateLabelColor()
    end
    /*
        Gets whether the toggle button is toggled on (checked/selected) or not.

        Attribute: Returns true if the button is toggle on.
    */
    action GetToggleState returns boolean
        return toggled
    end

    action Update(number seconds)
        Behavior behavior = GetActivationBehavior()
        if toggled and behavior not= undefined
            behavior:Update(seconds)
        end

        parent:Libraries.Interface.Item2D:Update(seconds)
    end
    /*
    This action sets the button group for the toggle button object.
    Attribute: Parameter buttonGroup the group of buttons associated with this toggle button.
    */
    action SetButtonGroup(ButtonGroup buttonGroup)
        group = buttonGroup
    end
    /*
    This action gets the button group for the toggle button object.
    Attribute: Returns the group of buttons associated with this toggle button.
    */
    action GetButtonGroup returns ButtonGroup
        return group
    end

    /*
    This action sets the toggle buttons ability to toggle off.
    Attribute: Parameter canToggleOff when true the button can toggle off.
    */
    action AllowToggleOff(boolean canToggleOff)
        me:canToggleOff = canToggleOff
    end
    /*
    This action gets the toggle buttons toggle off status.
    Attribute: Returns true when the button can toggle off.
    */
    action CanToggleOff returns boolean
        return canToggleOff
    end

    action OnToggleOn
        
    end

    action OnToggleOff

    end
    /*
        Returns true if rendering the selection event occurs.
    */
    action IsRenderingSelection returns boolean
        return GetToggleState()
    end

    action Activate(BehaviorEvent event)
        if toggled
            if canToggleOff
                SetToggleState(false)
            end
        else
            SetToggleState(true)
        end
    end
end