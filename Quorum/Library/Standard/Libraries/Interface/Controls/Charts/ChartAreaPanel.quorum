package Libraries.Interface.Controls.Charts

use Libraries.Interface.Controls.Control
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Font
use Libraries.Containers.Array


class ChartAreaPanel is Control
    Series series = undefined
    text name = ""
    Array <Item> chartAreaItems
    boolean isShowing = false

    on create
        ManualLayout manualLayout
        SetLayout(manualLayout)

        Color color
        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetBackgroundColor(color:White())
        properties:SetBorderColor(color:White())
        properties:SetBorderThickness(4)
        Font font = GetDefaultFont()
        properties:SetFont(font)
        properties:SetFontSize(GetDefaultFontSize())


        SetFocusable(true)
        SetAccessibilityCode(parent:Item:CUSTOM)
    end

    action IsAccessibleParent returns boolean
        return true
    end

    action GetSeries returns Series
        return series
    end

    action SetSeries(Series series)
        me:series = series
        if series not= undefined
            name = series:GetTextName()
        end
    end

    action OutlineChartArea 
        Color color
        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetBorderColor(color:Black())

        if properties:GetView2D() = undefined
            LabelBoxView view 
            view:SetBorderThickness(cast(integer, properties:GetBorderThickness()))
            view:Initialize(properties:GetBackgroundColor(), properties:GetBorderColor())
            SetView2D(view)
        else
            SetView2D(GetDefaultLayoutProperties():GetView2D())
        end
    end

    action GetChartAreaItems returns Array <Item>
        return chartAreaItems
    end

    action AddChartAreaItem(Item item)
        chartAreaItems:Add(item)
    end

    action GetIsShowing returns boolean
        return isShowing
    end

    action SetIsShowing(boolean isShowing)
        me:isShowing = isShowing
    end

    action GetTitleName returns text
        return name
    end

    action SetTitleName(text name)
        me:name = name
    end

end