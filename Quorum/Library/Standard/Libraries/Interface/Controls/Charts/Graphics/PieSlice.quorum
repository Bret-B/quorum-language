package Libraries.Interface.Controls.Charts.Graphics
use Libraries.Compute.Math

/*
The PieSlice class is a Wedge (ChartDrawable) that stores information 
for each indiviual slice. Slice contains a numerical value to determine the size 
of the slice within a pie chart.

Attribute: Example

use Libraries.Interface.Controls.Charts.PieSlice
class Main
    action Main
        // Make slice
        PieSlice slice
    
        // Set value
        slice:SetValue(20.0)
    
        // Get value
        number x = slice:GetValue()
    end
end
*/
class PieSlice is Wedge
    number value = 0

    // How many digits of precision to round to when interpreting this as text.
    integer textRoundingPrecision = 2

    /*
    This action returns the actual value associated with this slice.
    The parent PieBox has a total value to which this value will be compared
    to get a percent for the appropriate size.

    Attribute: Returns a number value
    */
    action GetValue returns number
        return value
    end

    action SetValue(number value)
        me:value = value
        if GetPieBox() not= undefined
            GetPieBox():RecalculateGroupValues()
        end
    end

    /*
    Link to the parent PieBox
    */
    action GetPieBox returns PieBox
        return cast(PieBox, GetGroup())
    end

    /*
    This action returns the percentage of the total pie that this slice makes up,
    represented as a value between 0.0 and 1.0 (for 0% to 100%, respectively).
    */
    action GetPercentage returns number
        PieBox box = GetPieBox()
        if box = undefined
            return 0
        end

        return GetValue() / box:GetValue()
    end

    /*
    This action returns formatted text representing the percentage this slice makes up
    of the pie. The text is rounded to 2 digits of precision and drops the trailing zero
    if the number is a whole integer.
    */
    action GetPercentageText returns text
        Math math
        number percent = math:Round(GetPercentage() * 100, textRoundingPrecision)
        
        if percent = cast(integer, percent)
            return "" + cast(integer, percent)
        end

        return "" + percent
    end
end