package Libraries.Interface.Controls.Charts

use Libraries.Interface.Layouts.ScatterPlotLayout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Gradient

/*
    The ScatterPlot class is Chart object that inherits from TwoVariableChart and like other
    UI elements it is added to the Game class. The Scatter Plot is used to represent a a relationship between
    pairs of numerical data, with one variable on each axis. The first two columns will determine the axes.
    Any additional column will be plotted against the first column.
    The title label, axis labels, and scales can be modified. Any number of points can be added.

    Attribute: Author Andreas Stefik, Hannah Williams

    Attribute: Example

    use Libraries.Interface.Controls.Charts.ScatterPlot
    use Libraries.Game.Game

    class Main is Game
        action Main
            StartGame()
        end

        action CreateGame
            ScatterPlot chart
            Add(chart)
        end
    end
*/
class ScatterPlot is TwoVariableChart
    on create
        ScatterPlotLayout layout
        SetLayout(layout)

        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:MAINTAIN_ASPECT_RATIO)
        properties:SetVerticalLayoutMode(properties:STANDARD)
        Font font = GetDefaultFont()
        properties:SetFont(font)
        properties:SetFontSize(GetDefaultFontSize())

        Color color
        Gradient gradient
        Color gray = color:LightGray()
        Color lightGray = color:CustomColor(0.9, 0.9, 0.9, 1)
        gradient:Set(gray, gray, lightGray, lightGray)

        properties:SetBackgroundColor(gradient)
        properties:SetBorderColor(color:Black())
        properties:SetBorderThickness(2)
        SetName("Scatter Plot")

        SetInputGroup("Chart")
        SetFocusable(true)
        SetAccessibilityCode(parent:Item:ITEM)

        ShowAllTicks()
        SetDefaultOrientation("horizontal")
    end

    /*
        This is called by GenerateInfoTree to generate the summary that is heard when
        you first focus on the chart. Also the highest level of the information tree
        of  the chart.
    */
    private action GenerateSummary returns text
        integer points = parent:TwoVariableChart:GetNumberOfPoints()
        text pointText = "points"
        if points = 1
            pointText = "point"
        end
        SetDescription("Scatter Plot with" + points + " " + pointText + ". Use the arrow keys to navigate the chart.")
        return GetDescription()
    end

    action Add(ChartPoint point)
        parent:TwoVariableChart:AddPoint(point)
    end

    /* 
        This action converts this chart to a text value that contains information 
        for a scalable vector graphics file. This is useful for saving charts to disk.
        Each sub-class of chart must implement this action separately.

        Attribute: Returns the Scalable Vector Graphics (SVG) text.
    */
    action ConvertToScalableVectorGraphics returns text
        ScatterPlotWriter writer
        return writer:WriteOutChart(me)
    end

end

