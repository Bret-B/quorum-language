package Libraries.Interface.Controls.Charts

use Libraries.System.File
use Libraries.Interface.Controls.Charts.BarChart
use Libraries.Data.Formats.ScalableVectorGraphics.ScalableVectorGraphics
use Libraries.Data.Formats.ScalableVectorGraphics.Line
use Libraries.Containers.Array
use Libraries.Data.Formats.ScalableVectorGraphics.Rectangle
use Libraries.Data.Formats.ScalableVectorGraphics.Label
use Libraries.System.FileWriter
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Game.Graphics.Color
use Libraries.Web.Page.Script
use Libraries.Interface.Controls.ControlLabel
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.ListItem

/*
    The BarChartWriter class is part of the set of writers that allow for Charts
    to save their representation in the form ScalableVectorGraphics. This class will write out
    all of the necessary text needed to write out an SVG file that will contain the chart.

    Attribute: Author Gabriel Contreras

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Interface.Controls.Charts.BarChart
    use Libraries.Interface.Controls.Charts.BarChartWriter
    
    DataFrame frame
    frame:Load("Data.csv")
    frame:SetSelectedColumnRange(0,1)
    BarChart chart = frame:BarChart()
    chart:SetTitle("My Awesome Title")
    chart:SetXAxisTitle("Time")
    chart:Display()

    BarChartWriter writer
    output writer:WriteOutChart(chart)
*/

class BarChartWriter is ChartWriter
    private number barDivWidth = 0 //(axisLength/(chart:GetNumberOfBars() + 1))
    private number barWidth = 0
    private number barOffset = 0//(barDivWidth / axisLength) / 2
    
    private integer outerEdgePadding = 0
    private integer betweenGroupPadding = 0
    private integer betweenBarPadding = 0
    private integer barWidthPercent = 0

    action WriteOutChart(BarChart chart) returns text
        return WriteOutChart(cast(Chart,chart))
    end
    /*
        This action adds the content of the BarChart
    */
    private action AddChartContent(ScalableVectorGraphics canvas, Chart chart)
        BarChart barChart
        barChart = cast(BarChart, chart)
        AddBars(canvas, barChart)
    end
    /*
        This action adds the content of the BarChart
    */
    private action AddBars(ScalableVectorGraphics canvas, BarChart chart)
        
        chart:ApplySeriesColor()
        chart:CalculateNumberOfBars()
        chart:InitLabels()

        number axisLengthX = GetChartAreaWidth()
        number axisPointX = GetChartAreaPositionX()
        number axisLengthY = GetChartAreaHeight()
        number axisPointY = GetChartAreaPositionY()

        barDivWidth = (axisLengthX/(chart:GetNumberOfBars() + 1))
        barWidth = barDivWidth * 0.7
        barOffset = (barDivWidth / axisLengthX) / 2

        Array<BarGroup> barGroups = chart:GetBarGroups()

        Color transparent
        transparent:SetColor(0, 0, 0, 0)

        if barGroups:GetSize() > 0
            integer numberOfGroups = barGroups:GetSize()
            integer numberOfBars = chart:GetNumberOfBars()
            boolean stacked = chart:GetStackedFlag()
            if stacked
                numberOfBars = numberOfGroups
            end

            // Space on each side of the inner chart (5%)
            outerEdgePadding = cast(integer, ((axisLengthX * 0.05) / 2))

            if barGroups:GetSize() > 1
                // Space spread evenly between each bar group (10%)
                betweenGroupPadding = cast(integer, ((axisLengthX * 0.1) / (numberOfGroups-1)))
            end

            // Space spread evenly between each bar with the bar groups (5%)
            betweenBarPadding = cast(integer, ((axisLengthX * 0.05) / (numberOfBars - numberOfGroups+1)))
            if stacked 
                betweenBarPadding = 0
            end

            // Total white space alloted for inner chart area
            totalPadding = cast(integer, (outerEdgePadding*2 + betweenGroupPadding*(numberOfGroups-1)))
            totalPadding = totalPadding + cast(integer, betweenBarPadding*(numberOfBars - numberOfGroups))
            
            // Remaining non-white space to be evenly divided amongst all bars (80%)
            remainingArea = cast(integer, (axisLengthX - totalPadding))
            barWidthPercent = cast(integer, remainingArea / numberOfBars)
        
            number currentXPosition = axisPointX + outerEdgePadding
            // Tracking area of each bar group for group icon

            number groupX = currentXPosition    // x-axis coordinate
            number groupY = 0                   // y-axis coordinate
            number groupWidth = 0               // width of entire group
            number groupHeight = 0              // height of entire group

            number dataScale = chart:GetYAxisMaximum()/axisLengthY

            integer i = 0
            repeat while i < barGroups:GetSize()
                integer j = 0
                repeat while j < barGroups:Get(i):GetSize()
                    Rectangle tempBar
                    tempBar:SetWidth(barWidthPercent, "%")
                    number barHeight = barGroups:Get(i):Get(j):GetValue() / dataScale
                    tempBar:SetHeight(barHeight, "%")
                    //tempBar:SetTitle("TBD")// + chart:GetBarHeights():Get(i))
                    tempBar:SetPosition(currentXPosition,axisPointY-barHeight, "%")
                    tempBar:SetFill(barGroups:Get(i):Get(j):GetIcon():GetColor())
                    tempBar:SetID(canvas:GetID() + "-" + barGroups:Get(i):Get(j):GetHashCode())
                    tempBar:SetTabIndex(-1)
                    if HasAccessibility()

                    end
                    canvas:Add(tempBar)
                    currentXPosition = currentXPosition + barWidthPercent + betweenBarPadding
                    
                    //Find max height for barGroup Icon
                    if(barHeight > groupHeight)
                        groupHeight = barHeight
                    end

                    j = j + 1
                end
            
                if(chart:HasBarGroups())
                    Rectangle tempGroup
                    groupWidth = currentXPosition - betweenBarPadding - groupX
                    tempGroup:SetWidth(groupWidth, "%")
                    tempGroup:SetHeight(groupHeight, "%")
                    //tempGroup:SetTitle("TBD")
                    tempGroup:SetPosition(groupX, axisPointY-groupHeight, "%") 
                    tempGroup:SetFill(transparent)
                    tempGroup:SetID(canvas:GetID() + "-" + barGroups:Get(i):GetHashCode())
                    tempGroup:SetTabIndex(-1)
                    if HasAccessibility()

                    end
                    canvas:Add(tempGroup)
                    
                    currentXPosition = currentXPosition + betweenGroupPadding - betweenBarPadding
                    currentYPosition = 0
                    groupHeight = 0
                    groupX = currentXPosition
                end

                i = i + 1
            end
        end
    end

    /*
        This action the labels on the x axis
    */
    private action AddXLabels(ScalableVectorGraphics canvas, Chart chart)
        BarChart barChart
        barChart = cast(BarChart, chart)
        Array<ControlLabel> barLabels = chart:GetXLabels()
        Array<BarGroup> barGroups = barChart:GetBarGroups()
        integer numberOfGroups = barGroups:GetSize()
        integer numberOfBars = barChart:GetNumberOfBars()
        
        number axisLengthX = GetChartAreaWidth()
        number axisPointX = GetChartAreaPositionX()
        number axisLengthY = GetChartAreaHeight()
        number axisPointY = GetChartAreaPositionY()

        Array<Label> xLabels = GetXLabels()

        if not barGroups:IsEmpty() and not barLabels:IsEmpty()
            number currentXPosition = axisPointX + outerEdgePadding
            integer i = 0
            repeat while i < barGroups:GetSize()
                number barGroupWidth = barGroups:Get(i):GetSize() * barWidthPercent + (barGroups:Get(i):GetSize() - 1) * betweenBarPadding
                number xLabelPosition = currentXPosition + (barGroupWidth / 2)
                
                Label tempBarLabel
                Line tempBarTick

                tempBarTick:SetFirstPoint(xLabelPosition, axisPointY, "%")
                tempBarTick:SetSecondPoint(xLabelPosition, axisPointY + 3, "%")
                tempBarTick:SetStroke("black")
                tempBarTick:SetTabIndex(-1)
                tempBarTick:SetStrokeWidth(0.25,"%")
                tempBarTick:SetID(canvas:GetID() + "-" + tempBarTick:GetHashCode())
                tempBarTick:SetTabIndex(-1)

                tempBarLabel:SetText(chart:GetXLabels():Get(i):GetText())
                
                tempBarLabel:SetTextAnchor("middle")
                tempBarLabel:SetPosition(xLabelPosition, axisPointY + 5, "%")
                tempBarLabel:SetID(canvas:GetID() + "-" + tempBarLabel:GetHashCode())
                tempBarLabel:SetTabIndex(-1)
                xLabels:Add(tempBarLabel)
                if HasAccessibility()
                    //BarTick and BarLabel
                end
                canvas:Add(tempBarTick)
                canvas:Add(tempBarLabel)

                currentXPosition = currentXPosition + barGroupWidth + betweenGroupPadding

                i = i + 1
            end
        end
    end

    /*
        This action the labels on the y axis
    */
    private action AddYLabels(ScalableVectorGraphics canvas, Chart chart)
        BarChart barChart
        barChart = cast(BarChart, chart)
        number scaleNum = barChart:GetMinimumTick()
        
        
        number axisLengthX = GetChartAreaWidth()
        number axisPointX = GetChartAreaPositionX()
        number axisLengthY = GetChartAreaHeight()
        number axisPointY = GetChartAreaPositionY()

        Array<Label> yLabels = GetYLabels()
        
        number scaleWidth = (barChart:GetScaleMaximum()) / (barChart:GetYTickSteps())
        number scaleDivWidth = axisLengthY / (barChart:GetYTickSteps())
        // scale
        Math math
        i = 0
        repeat while i < barChart:GetYTickSteps() + 1
            Label scaleLabel
            Line scaleTick
            
            scaleLabel:SetTextAnchor("end")
            scaleLabel:SetText("" + math:Round(scaleNum, 4))
            scaleLabel:SetFontSize("8pt")
            scaleNum = scaleNum + scaleWidth

            scaleTick:SetTabIndex(-1)
            scaleTick:SetFirstPoint(axisPointX, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetSecondPoint(axisPointX - 2, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetStroke("black")
            scaleTick:SetStrokeWidth(0.4,"%")
            
            scaleLabel:SetPosition(axisPointX - 3, axisPointY - scaleDivWidth*i + 0.5, "%")
            
            scaleLabel:SetID(canvas:GetID() + "-" + scaleLabel:GetHashCode())
            scaleTick:SetID(canvas:GetID() + "-" + scaleTick:GetHashCode())
            scaleLabel:SetTabIndex(-1)
            scaleTick:SetTabIndex(-1)
            yLabels:Add(scaleLabel)
            if HasAccessibility()
                //ScaleTick and Scalelabel
            end
                
            canvas:Add(scaleTick)
            canvas:Add(scaleLabel)
            i = i + 1
        end
    end

    action AddChartContentAccessibility(ScalableVectorGraphics canvas, Chart chart, ListItem chartAreaItem)
        
        BarChart barChart
        barChart = cast(BarChart, chart)
        Array<BarGroup> barGroups = barChart:GetBarGroups()

        UnorderedList barGroupsUL
        barGroupsUL:AddAttribute("role","group")
        chartAreaItem:AddNestedTag(barGroupsUL)
        
        UnorderedList currentGrouping = barGroupsUL
        i = 0
        repeat while i < barGroups:GetSize()
            if barChart:HasBarGroups()
                ListItem barGroupNav 
                barGroupNav:SetIdentifier(canvas:GetID() + "-" + barGroups:Get(i):GetHashCode() + "-nav")
                barGroupNav:AddAttribute("role","treeitem")
                barGroupNav:AddAttribute("aria-labelledby",canvas:GetID() + "-" + barGroups:Get(i):GetHashCode())
                barGroupNav:AddAttribute("aria-describedby",canvas:GetID() + "-" + barGroups:Get(i):GetHashCode())
                barGroupNav:SetTabIndex("-1")
                barGroupsUL:Add(barGroupNav)
    
                
                UnorderedList barsUL
                barsUL:AddAttribute("role","group")
                barGroupNav:AddNestedTag(barsUL)
                currentGrouping = barsUL
            end
            
            j = 0
            repeat while j < barGroups:Get(i):GetSize()
                ListItem barNav 
                barNav:SetIdentifier(canvas:GetID() + "-" + barGroups:Get(i):Get(j):GetHashCode() + "-nav")
                barNav:AddAttribute("role","treeitem")
                barNav:AddAttribute("aria-labelledby",canvas:GetID() + "-" + barGroups:Get(i):Get(j):GetHashCode())
                barNav:AddAttribute("aria-describedby",canvas:GetID() + "-" + barGroups:Get(i):Get(j):GetHashCode())
                barNav:SetTabIndex("-1")
                currentGrouping:Add(barNav)

                j = j + 1
            end
            i = i + 1
        end
    end


end