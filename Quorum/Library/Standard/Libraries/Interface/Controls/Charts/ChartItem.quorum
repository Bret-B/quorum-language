package Libraries.Interface.Controls.Charts

use Libraries.Interface.Item
use Libraries.Interface.Controls.Control

/*
    This class represents one region inside of a chart. This can be anything, 
    from a region that contains data points to a broader summary of the chart itself. 
    This item should not be used itself, except when obtaining information from a chart.
*/
class ChartItem is Control
    text information = ""
    Chart container = undefined

    ChartItem leftItem = undefined
    ChartItem rightItem = undefined
    ChartItem upItem = undefined
    ChartItem downItem = undefined
    ChartItem enterItem = undefined
    ChartItem escapeItem = undefined

    Item focusTarget = undefined
    ChartOptions options

    /*
        This action sets the display name of the chart item. 
        
    */
    action SetDisplayName(text info)
        information = info
    end

    /*
        This action obtains the displayable name for this region of the chart. 
        Attribute: Returns the display name
    */
    action GetDisplayName returns text
        return information
    end

    /*
        Determines what item this should focus on.
    */
    action SetFocusTarget(Item focusTarget)
        me:focusTarget = focusTarget
    end

    /*
        Determines what item this should focus on.
    */
    action GetFocusTarget returns Item
        return focusTarget
    end

    action GainedSelection
        if GetContainer() not= undefined
            GetContainer():OnSelectionChange(me)
        end
        parent:Control:GainedSelection()
    end

    action LostSelection
        if GetContainer() not= undefined
            GetContainer():LostSelection(me)
        end
        parent:Control:LostSelection()
    end

    action GetContainer returns Chart
        return container
    end

    action SetContainer(Chart container)
        me:container = container
    end

    /*
    Returns the Item accessed to the left of this Item in the chart selection.
    */
    action GetLeftItem returns ChartItem
        return leftItem
    end

    /*
    Sets the Item accessed to the left of this Item in the chart selection.
    */
    action SetLeftItem(ChartItem leftItem)
        me:leftItem = leftItem
    end

    /*
    Returns the Item accessed to the right of this Item in the chart selection.
    */
    action GetRightItem returns ChartItem
        return rightItem
    end

    /*
    Sets the Item accessed to the right of this Item in the chart selection.
    */
    action SetRightItem(ChartItem rightItem)
        me:rightItem = rightItem
    end

    /*
    Returns the Item accessed "above" (via the UP arrow) this Item in the chart selection.
    */
    action GetUpItem returns ChartItem
        return upItem
    end

    /*
    Sets the Item accessed "above" (via the UP arrow) this Item in the chart selection.
    */
    action SetUpItem(ChartItem upItem)
        me:upItem = upItem
    end

    /*
    Returns the Item accessed "below" (via the DOWN arrow) this Item in the chart selection.
    */
    action GetDownItem returns ChartItem
        return downItem
    end

    /*
    Sets the Item accessed "below" (via the DOWN arrow) this Item in the chart selection.
    */
    action SetDownItem(ChartItem downItem)
        me:downItem = downItem
    end

    /*
    Returns the Item accessed within (default: ENTER key) this Item in the chart selection.
    */
    action GetEnterItem returns ChartItem
        return enterItem
    end

    /*
    Sets the Item accessed within (default: ENTER key) this Item in the chart selection.
    */
    action SetEnterItem(ChartItem enterItem)
        me:enterItem = enterItem
    end

    /*
    Returns the escape Item accessed from this Item in the chart selection (by default using the ESCAPE key).
    */
    action GetEscapeItem returns ChartItem
        return escapeItem
    end

    /*
    Sets the escape Item accessed from this Item in the chart selection (by default using the ESCAPE key).
    */
    action SetEscapeItem(ChartItem escapeItem)
        me:escapeItem = escapeItem
    end

end