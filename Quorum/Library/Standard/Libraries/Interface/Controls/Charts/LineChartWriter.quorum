package Libraries.Interface.Controls.Charts

use Libraries.System.File
use Libraries.Interface.Controls.Charts.LineChart
use Libraries.Data.Formats.ScalableVectorGraphics.ScalableVectorGraphics
use Libraries.Data.Formats.ScalableVectorGraphics.Line
use Libraries.Containers.Array
use Libraries.Data.Formats.ScalableVectorGraphics.Rectangle
use Libraries.Data.Formats.ScalableVectorGraphics.Label
use Libraries.Data.Formats.ScalableVectorGraphics.Circle
use Libraries.System.FileWriter
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Controls.Charts.ChartPoint
use Libraries.Game.Graphics.Color

/*
    The LineChartWriter class is part of the set of writers that allow for Charts
    to save their representation in the form ScalableVectorGraphics. This class will write out
    all of the necessary text needed to write out an SVG file that will contain the chart.

    Attribute: Author Gabriel Contreras

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Interface.Controls.Charts.LineChart
    use Libraries.Interface.Controls.Charts.LineChartWriter
    
    DataFrame frame
    frame:Load("Data.csv")
    frame:SetSelectedColumnRange(0,1)
    LineChart chart = frame:LineChart()
    chart:SetTitle("My Awesome Title")
    chart:SetXAxisTitle("Time")
    chart:Display()

    LineChartWriter writer
    output writer:WriteOutChart(chart)
*/
class LineChartWriter
    private number axisPointX = 15
    private number axisPointY = 85
    private number axisLength = 75

/*
    This action writes out the LineChart by grabbing necessary information from the chart and it will then return
    all of the necessary text needed to write out an SVG file that will contain the chart.

    Attribute: Parameter chart The chart that will be used to create an SVG

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Interface.Controls.Charts.LineChart
    use Libraries.Interface.Controls.Charts.LineChartWriter
    
    DataFrame frame
    frame:Load("Data.csv")
    frame:SetSelectedColumnRange(0,1)
    LineChart chart = frame:LineChart()
    chart:Display()

    LineChartWriter writer
    output writer:WriteOutChart(chart)
*/
    action WriteOutChart(LineChart chart) returns text

        ScalableVectorGraphics chartCanvas
        chartCanvas:SetSize(700,600)

        Label chartTitle
        Label xAxisLabel
        Label yAxisLabel

        //start setting stuff
        AddBackground(chartCanvas)
        AddAxes(chartCanvas)
        chartTitle:SetText(chart:GetTitle())
        chartTitle:SetTextAnchor("middle")
        chartTitle:SetPosition(50, 5, "%")
        chartTitle:SetFontSize("18pt")
        chartCanvas:Add(chartTitle)

        xAxisLabel:SetText(chart:GetXAxisTitle())
        xAxisLabel:SetTextAnchor("middle")
        xAxisLabel:SetPosition(50, 95, "%")
        xAxisLabel:SetFontSize("18pt")
        chartCanvas:Add(xAxisLabel)

        yAxisLabel:SetText(chart:GetYAxisTitle())
        yAxisLabel:SetTextAnchor("middle")
        yAxisLabel:SetPosition(5, 50, "%")
        yAxisLabel:SetTransform("rotate(270, 40,300)")
        yAxisLabel:SetFontSize("18pt")
        chartCanvas:Add(yAxisLabel)


        AddPointsAndLines(chartCanvas, chart)
        AddXLabels(chartCanvas, chart)
        AddYLabels(chartCanvas, chart)

        return chartCanvas:ToText()
    end

    /*
        This action adds a white background to the canvas
    */
    private action AddBackground(ScalableVectorGraphics canvas)
        Rectangle background
        background:SetFill("white")
        background:SetSize(100,100, "%")
        canvas:Add(background)
    end

    /*
        This action adds the two lines for the x and y axis
    */
    private action AddAxes(ScalableVectorGraphics canvas)
        Line xAxis
        Line yAxis
        xAxis:SetPoints(axisPointX, axisPointY, axisPointX + axisLength, axisPointY, "%")
        xAxis:SetStroke("black")
        xAxis:SetTabIndex(-1)
        xAxis:SetStrokeWidth(0.4,"%")
        yAxis:SetPoints(axisPointX, axisPointY, axisPointX, axisPointY - axisLength, "%")
        yAxis:SetStroke("black")
        yAxis:SetTabIndex(-1)
        yAxis:SetStrokeWidth(0.4,"%")

        canvas:Add(xAxis)
        canvas:Add(yAxis)
    end

    /*
        This action adds the content of the LineChart
    */
    private action AddPointsAndLines(ScalableVectorGraphics canvas, LineChart chart)
        integer i = 0
        repeat while i < chart:GetAllLines():GetSize()
            Array<ChartPoint> points = chart:GetLine(i):GetPoints()
//            Array<ChartPoint> points = chart:GetChartPoints()
            
            if points = undefined
                return now
            end
     
            number width = axisLength
            number height = axisLength
            integer j = 0
            repeat while j < points:GetSize()
                Circle tempPoint
                Line tempLine
                tempPoint:SetRadius(0.5, "%")
                tempPoint:SetFill("black")
                ChartPoint point = points:Get(j)
                tempPoint:SetPosition(axisPointX + point:GetPercentX() * width, axisPointY- point:GetPercentY() * height, "%")
                canvas:Add(tempPoint)
    
                if j + 1 < points:GetSize()
                    tempLine:SetFirstPoint(axisPointX + point:GetPercentX() * width, axisPointY- point:GetPercentY() * height, "%")
                    point = points:Get(j+1)
                    tempLine:SetSecondPoint(axisPointX + point:GetPercentX() * width, axisPointY- point:GetPercentY() * height, "%")
                    tempLine:SetStroke(GetRGBFromColor(chart:GetLine(i):GetColor()))
                    canvas:Add(tempLine)
                end
                j = j + 1
            end
            i = i + 1
        end
    end

    /*
        This action is used internally to get the proper color attribute from a Quorum Color
    */
    private action GetRGBFromColor(Color color) returns text
        integer R = cast(integer, 255*color:GetRed())
        integer G = cast(integer, 255*color:GetBlue())
        integer B = cast(integer, 255*color:GetGreen())
        return "rgb("+R+","+G+","+B+")" 
    end

    /*
        This action the labels on the x axis
    */
    private action AddXLabels(ScalableVectorGraphics canvas, LineChart chart)
        Math math
        number scaleNum = chart:GetXAxisMinimum()
        
        number scaleWidth = (chart:GetXAxisMaximum()) / (chart:GetXTickCount()- 1)
        number scaleDivWidth = axisLength / (chart:GetXTickCount() - 1)
        integer i = 0
        repeat while i < chart:GetXTickCount()
            Label scaleLabel
            Line scaleTick

            scaleTick:SetFirstPoint(axisPointX + scaleDivWidth*i, axisPointY, "%")
            scaleTick:SetSecondPoint(axisPointX + scaleDivWidth*i, axisPointY + 3, "%")
            scaleTick:SetStroke("black")
            scaleTick:SetTabIndex(-1)
            scaleTick:SetStrokeWidth(0.4,"%")
            canvas:Add(scaleTick)

            scaleLabel:SetTextAnchor("middle")
            scaleLabel:SetText("" + math:Round(scaleNum, 1))
            scaleLabel:SetFontSize("8pt")
            scaleLabel:SetPosition(axisPointX + i * scaleDivWidth, axisPointY + 5, "%")
            scaleNum = scaleNum + scaleWidth
            canvas:Add(scaleLabel)
            i = i + 1
        end
    end

    /*
        This action the labels on the y axis
    */
    private action AddYLabels(ScalableVectorGraphics canvas, LineChart chart)
        number scaleNum = chart:GetYAxisMinimum()
        
        number scaleWidth = (chart:GetYAxisMaximum()) / (chart:GetYTickCount()- 1)
        number scaleDivWidth = axisLength / (chart:GetYTickCount() - 1)
        // scale
        Math math
        i = 0
        repeat while i < chart:GetYTickCount()
            Label scaleLabel
            Line scaleTick
            
            scaleLabel:SetTextAnchor("end")
            scaleLabel:SetText("" + math:Round(scaleNum, 1))
            scaleLabel:SetFontSize("8pt")
            scaleNum = scaleNum + scaleWidth

            scaleTick:SetTabIndex(-1)
            scaleTick:SetFirstPoint(axisPointX, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetSecondPoint(axisPointX - 2, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetStroke("black")
            scaleTick:SetStrokeWidth(0.4,"%")
            
            scaleLabel:SetPosition(axisPointX - 3, axisPointY - scaleDivWidth*i + 0.5, "%")

            canvas:Add(scaleLabel)
            canvas:Add(scaleTick)
        i = i+1
        end
    end

end