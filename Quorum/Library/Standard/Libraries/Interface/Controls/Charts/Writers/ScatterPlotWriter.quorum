package Libraries.Interface.Controls.Charts

use Libraries.System.File
use Libraries.Interface.Controls.Charts.ScatterPlot
use Libraries.Data.Formats.ScalableVectorGraphics.ScalableVectorGraphics
use Libraries.Data.Formats.ScalableVectorGraphics.Line
use Libraries.Containers.Array
use Libraries.Data.Formats.ScalableVectorGraphics.Rectangle
use Libraries.Data.Formats.ScalableVectorGraphics.Label
use Libraries.System.FileWriter
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Game.Graphics.Color
use Libraries.Web.Page.Script
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.ListItem
use Libraries.Interface.Item
use Libraries.Interface.Controls.Icon
use Libraries.Data.Formats.ScalableVectorGraphics.Circle

/*
    The ScatterPlotWriter class is part of the set of writers that allow for Charts
    to save their representation in the form ScalableVectorGraphics. This class will write out
    all of the necessary text needed to write out an SVG file that will contain the chart.

    Attribute: Author Tim Kluthe

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Interface.Controls.Charts.ScatterPlot
    use Libraries.Interface.Controls.Charts.ScatterPlotWriter
    
    DataFrame frame
    frame:Load("Data.csv")
    frame:SetSelectedColumnRange(0,1)
    ScatterPlot chart = frame:ScatterPlot()
    chart:SetTitle("My Awesome Title")
    chart:SetXAxisTitle("Time")
    chart:Display()

    ScatterPlotWriter writer
    output writer:WriteOutChart(chart)
*/

class ScatterPlotWriter is ChartWriter

    action WriteOutChart(ScatterPlot chart, integer svgWidth, integer svgHeight) returns text
        return WriteOutChart(cast(Chart,chart), svgWidth, svgHeight)
    end

    action WriteOutChart(ScatterPlot chart, File file, integer svgWidth, integer svgHeight)
        WriteOutChart(cast(Chart,chart), file, svgWidth, svgHeight)
    end

    action WriteOutChart(ScatterPlot chart) returns text
        return WriteOutChart(cast(Chart,chart))
    end

    action WriteOutChart(ScatterPlot chart, File file)
        WriteOutChart(cast(Chart,chart), file)
    end

    /*
        This action adds a white background to the canvas
    */
    action AddChartArea(ScalableVectorGraphics canvas, Chart chart)
        parent:ChartWriter:AddChartArea(canvas,chart)
        
        ScatterPlot scatterplot
        scatterplot = cast(ScatterPlot, chart)

        if HasAccessibility()
            GetChartArea():SetAriaLabel("Chart Area " + scatterplot:GetChartArea():GetDescription())
        end
    end

    /*
        This action adds the content of the ScatterPlot
    */
    private action AddChartContent(ScalableVectorGraphics canvas, Chart chart)
        ScatterPlot scatterplot
        scatterplot = cast(ScatterPlot, chart)
        AddPoints(canvas, scatterplot)
        if chart:IsShowingLinearRegression()
            AddRegressionLines(canvas, chart)
        end
    end

    /*
        This action adds the content of the ScatterPlot to the SVG
    */
    private action AddPoints(ScalableVectorGraphics canvas, ScatterPlot chart)
        Color transparent
        transparent:SetColor(0, 0, 0, 0)

        i = 0
        repeat while i < chart:GetRegions():GetSize()
            Icon currentRegion = chart:GetRegions():Get(i)

            Rectangle region
            region:SetWidth(currentRegion:GetWidth())
            region:SetHeight(currentRegion:GetHeight())
            region:SetPosition(currentRegion:GetGlobalX(), TranslatePositionY(currentRegion) - currentRegion:GetHeight()) 
            region:SetFill(transparent)
            region:SetID(canvas:GetID() + "_" + currentRegion:GetHashCode())
            region:SetStyleClass("quorum-chart-region")
            region:SetTabIndex(-1)
            if HasAccessibility()
                region:SetAriaLabel(currentRegion:GetName() + currentRegion:GetDescription())
                region:SetAriaHidden("true")
            end
            canvas:Add(region)

            i = i + 1
        end
        i = 0
        repeat while i < chart:GetChartPoints():GetSize()
            ChartPoint currentPoint = chart:GetChartPoints():Get(i)
            number radius = currentPoint:GetHeight()/2

            Circle point
            point:SetRadius(radius)
            point:SetPosition(currentPoint:GetGlobalX()+radius, TranslatePositionY(currentPoint)) 
            point:SetFill(currentPoint:GetColor())
            point:SetStroke(cast(Color, currentPoint:GetBorderColor()))
            point:SetStrokeWidth(currentPoint:GetBorderThickness())
            point:SetID(canvas:GetID() + "_" + currentPoint:GetSeries():GetHashCode() + "_" + currentPoint:GetHashCode())
            point:SetStyleClass("quorum-chart-circle")
            point:SetTabIndex(-1)
            if HasAccessibility()
                point:SetAriaLabel(currentPoint:GetName() + currentPoint:GetDescription())
                point:SetAriaHidden("true")
            end
            canvas:Add(point)


            if currentPoint:ShowAnnotation() or chart:ShowAnnotations()
                ChartLabel label = currentPoint:GetAnnotation()
                if label not= undefined
                    Label labelSVG
                    labelSVG:SetText(label:GetText())
                    labelSVG:SetTextAnchor("left")
                    labelSVG:SetPosition(label:GetGlobalX(), TranslatePositionY(label))
                    labelSVG:SetFontSize(label:GetFontSize() + "px")
                    labelSVG:SetFontFamily("Arial")
                    labelSVG:SetFill(cast(Color, label:GetFontColor()))
                    labelSVG:SetID(canvas:GetID() + "_" + label:GetHashCode())
                    labelSVG:SetStyleClass("quorum-chart-text")
                    labelSVG:SetTabIndex(-1)
                    if HasAccessibility()
                        labelSVG:SetAriaHidden("true")
                    end
                    canvas:Add(labelSVG)
                end
            end
            i = i + 1
        end
    end

    action AddChartContentAccessibility(ScalableVectorGraphics canvas, Chart chart, ChartAreaPanel chartArea, ListItem chartAreaItem)
        
        ScatterPlot scatterplot
        scatterplot = cast(ScatterPlot, chart)
    
        ChartItem chartItem = scatterplot:GetChartAreaItem()
        if not chart:IsSeparated()
            ChartItem firstItem = chartItem:GetChildItem()

            if firstItem not= undefined
                if firstItem:GetFocusTarget() is ChartPoint
                    AddPointsAccessibility(canvas, firstItem, chartAreaItem)
                else
                    AddRegionLayerAccessibility(canvas, firstItem, chartAreaItem)
                end
            end
            
        else
            ChartItem firstSubChartAreaItem = chartItem:GetChildItem()
            if firstSubChartAreaItem = undefined
                return now
            end

            if firstSubChartAreaItem:GetFocusTarget() is ChartAreaPanel and cast(ChartAreaPanel, firstSubChartAreaItem:GetFocusTarget()) = chartArea
                ChartItem firstItem = firstSubChartAreaItem:GetChildItem()

                if firstItem not= undefined
                    if firstItem:GetFocusTarget() is ChartPoint
                        AddPointsAccessibility(canvas, firstItem, chartAreaItem)
                    else
                        AddRegionLayerAccessibility(canvas, firstItem, chartAreaItem)
                    end
                end
            end

            
            ChartItem nextSubChartAreaItem = firstSubChartAreaItem:GetNext()
            repeat while nextSubChartAreaItem not= undefined and nextSubChartAreaItem not= firstSubChartAreaItem
                if nextSubChartAreaItem:GetFocusTarget() is ChartAreaPanel and cast(ChartAreaPanel, nextSubChartAreaItem:GetFocusTarget()) = chartArea
                    ChartItem firstItem = nextSubChartAreaItem:GetChildItem()
    
                    if firstItem not= undefined
                        if firstItem:GetFocusTarget() is ChartPoint
                            AddPointsAccessibility(canvas, firstItem, chartAreaItem)
                        else
                            AddRegionLayerAccessibility(canvas, firstItem, chartAreaItem)
                        end
                    end
                end

                nextSubChartAreaItem = nextSubChartAreaItem:GetNext()
            end
        end

    end

    action AddRegionLayerAccessibility(ScalableVectorGraphics canvas, ChartItem firstItem, ListItem chartListItem)
        UnorderedList groupUL
        groupUL:AddAttribute("role","group")
        groupUL:AddClassAttribute("quorum-chart-group")
        chartListItem:AddNestedTag(groupUL)

        Icon region = cast(Icon, firstItem:GetFocusTarget())

        ListItem firstRegionNav
        firstRegionNav:SetIdentifier(canvas:GetID() + "_" + region:GetHashCode() + "_nav")
        firstRegionNav:AddAttribute("role","treeitem")
        firstRegionNav:AddClassAttribute("quorum-chart-treeitem")
        firstRegionNav:AddAttribute("aria-labelledby",canvas:GetID() + "_" + region:GetHashCode())
        firstRegionNav:AddAttribute("aria-expanded","false")
        firstRegionNav:SetTabIndex("-1")
        groupUL:Add(firstRegionNav)

        if firstItem:GetChildItem() not= undefined
            if firstItem:GetChildItem():GetFocusTarget() is ChartPoint
                AddPointsAccessibility(canvas, firstItem:GetChildItem(), firstRegionNav)
            else
                AddRegionLayerAccessibility(canvas, firstItem:GetChildItem(), firstRegionNav)
            end
        end

        ChartItem nextItem = firstItem:GetNext()
        repeat while nextItem not= undefined and nextItem not= firstItem
            region = cast(Icon, nextItem:GetFocusTarget())
            ListItem regionNav
            regionNav:SetIdentifier(canvas:GetID() + "_" + region:GetHashCode() + "_nav")
            regionNav:AddAttribute("role","treeitem")
            regionNav:AddClassAttribute("quorum-chart-treeitem")
            regionNav:AddAttribute("aria-labelledby",canvas:GetID() + "_" + region:GetHashCode())
            regionNav:AddAttribute("aria-expanded","false")
            regionNav:SetTabIndex("-1")
            groupUL:Add(regionNav)

            if nextItem:GetChildItem() not= undefined
                if nextItem:GetChildItem():GetFocusTarget() is ChartPoint
                    AddPointsAccessibility(canvas, nextItem:GetChildItem(), regionNav)
                else
                    AddRegionLayerAccessibility(canvas, nextItem:GetChildItem(), regionNav)
                end
            end

            nextItem = nextItem:GetNext()
        end
    end

    action AddPointsAccessibility(ScalableVectorGraphics canvas, ChartItem firstItem, ListItem chartListItem)
        UnorderedList groupUL
        groupUL:AddAttribute("role","group")
        groupUL:AddClassAttribute("quorum-chart-group")
        chartListItem:AddNestedTag(groupUL)

        ChartPoint point = cast(ChartPoint, firstItem:GetFocusTarget())

        ListItem firstPointNav
        firstPointNav:SetIdentifier(canvas:GetID() + "_" + point:GetSeries():GetHashCode() + "_" + point:GetHashCode() + "_nav")
        firstPointNav:AddAttribute("role","treeitem")
        firstPointNav:AddClassAttribute("quorum-chart-treeitem")
        firstPointNav:AddAttribute("aria-labelledby",canvas:GetID() + "_" + point:GetSeries():GetHashCode() + "_" + point:GetHashCode())
        firstPointNav:AddAttribute("aria-expanded","false")
        firstPointNav:SetTabIndex("-1")
        groupUL:Add(firstPointNav)

        ChartItem nextItem = firstItem:GetNext()
        repeat while nextItem not= undefined and nextItem not= firstItem
            point = cast(ChartPoint, nextItem:GetFocusTarget())
            ListItem pointNav
            pointNav:SetIdentifier(canvas:GetID() + "_" + point:GetSeries():GetHashCode() + "_" + point:GetHashCode() + "_nav")
            pointNav:AddAttribute("role","treeitem")
            pointNav:AddClassAttribute("quorum-chart-treeitem")
            pointNav:AddAttribute("aria-labelledby",canvas:GetID() + "_" + point:GetSeries():GetHashCode() + "_" + point:GetHashCode())
            pointNav:AddAttribute("aria-expanded","false")
            pointNav:SetTabIndex("-1")
            groupUL:Add(pointNav)

            nextItem = nextItem:GetNext()
        end
    end
end