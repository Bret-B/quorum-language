package Libraries.Interface.Controls.Charts.Displays

use Libraries.Containers.HashTable
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Game.Game
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Game.DesktopConfiguration
use Libraries.Game.WebConfiguration
use Libraries.Game.Layer2D
use Libraries.Game.Layer3D
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputMonitor
class ChartDisplayer is Game, KeyboardListener
    HashTable<text, Chart> charts
    Array<Chart> chartsArray
    integer index = 0
on create
        DesktopConfiguration desktop = GetDesktopConfiguration()
        desktop:targetFramesPerSecond = 10
        WebConfiguration web = GetWebConfiguration()
        web:framesPerSecondLimit = 10
    end
    
action CreateGame
        ManualLayout layout
        SetLayout(layout)

        Layer2D layer = GetCurrentLayer2D()
        layer:EnablePhysics(false)

        Layer3D layer3D = GetCurrentLayer3D()
        layer3D:EnablePhysics(false)

        if not chartsArray:IsEmpty()
Chart chart = chartsArray:Get(0)
            Add(chart)
            chart:Focus()
        end
        AddKeyboardListener(me)
    end
    
action ReleasedKey(KeyboardEvent event)
        boolean isShifty = false
InputMonitor monitor
  if monitor:IsKeyPressed(event:SHIFT_LEFT) or monitor:IsKeyPressed(event:SHIFT_RIGHT)
            isShifty = true
  end
   if event:keyCode = event:TAB
Chart previous = chartsArray:Get(index)
            if not isShifty
index = index + 1
if index > chartsArray:GetSize() - 1
                index = 0
            end
            else
index = index - 1
if index < 0
                index = chartsArray:GetSize() - 1
            end
            end
            
            Remove(previous)
Chart next = chartsArray:Get(index)
            Add(next)
            next:Focus()
            
   end
end
    
    action Add(text path, Chart chart)
        charts:Add(path, chart)
        chartsArray:Add(chart)
    end
end