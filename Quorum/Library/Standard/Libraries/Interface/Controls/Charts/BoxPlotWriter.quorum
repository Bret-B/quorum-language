package Libraries.Interface.Controls.Charts

use Libraries.System.File
use Libraries.Interface.Controls.Charts.BoxPlot
use Libraries.Data.Formats.ScalableVectorGraphics.ScalableVectorGraphics
use Libraries.Data.Formats.ScalableVectorGraphics.Line
use Libraries.Containers.Array
use Libraries.Data.Formats.ScalableVectorGraphics.Rectangle
use Libraries.Data.Formats.ScalableVectorGraphics.Label
use Libraries.Data.Formats.ScalableVectorGraphics.Circle
use Libraries.System.FileWriter
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Charts.ChartPoint
use Libraries.Compute.Vector
use Libraries.Interface.Layouts.BoxPlotLayout

/*
    The BoxPlotChartWriter class is part of the set of writers that allow for Charts
    to save their representation in the form ScalableVectorGraphics. This class will write out
    all of the necessary text needed to write out an SVG file that will contain the chart.

    Attribute: Author Benjamin Murphy & Shyann Calhoun

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Compute.Statistics.Charts.BoxPlotCreator
    use Libraries.Interface.Controls.Charts.BoxPlot
    use Libraries.Game.Game
    use Libraries.System.File
    
    class Main is Game
        action Main
            StartGame()
        end
    
        action CreateGame
            DataFrame frame
            frame:Load("Data/Data.csv")
            BoxPlotCreator creator
            creator:AddColumn(2)
        
            BoxPlot chart = cast(BoxPlot,frame:CreateChart(creator))
            chart:SetPercentageWidth(1)
            chart:SetPercentageHeight(1)
            chart:SetTitle("Sample Title")
            chart:SetXAxisTitle("X-axis Variable")
            chart:SetYAxisTitle("Y-axis Variable")
            Add(chart)
    
            File f
            f:SetPath("Data/chart.svg")
            svgtxt = chart:ConvertToScalableVectorGraphics()
            f:Write(svgtxt)
        end
    end
*/
class BoxPlotWriter
    private number axisPointX = 15
    private number axisPointY = 85
    private number axisLength = 75


    action WriteOutChart(BoxPlot chart) returns text

        ScalableVectorGraphics chartCanvas
        chartCanvas:SetSize(700,600)

        Label chartTitle
        Label xAxisLabel
        Label yAxisLabel

        //start setting stuff
        AddBackground(chartCanvas)
        AddAxes(chartCanvas)
        chartTitle:SetText(chart:GetTitle())
        chartTitle:SetTextAnchor("middle")
        chartTitle:SetPosition(50, 5, "%")
        chartTitle:SetFontSize("18pt")
        chartCanvas:Add(chartTitle)

        xAxisLabel:SetText(chart:GetXAxisTitle())
        xAxisLabel:SetTextAnchor("middle")
        xAxisLabel:SetPosition(50, 95, "%")
        xAxisLabel:SetFontSize("18pt")
        chartCanvas:Add(xAxisLabel)

        yAxisLabel:SetText(chart:GetYAxisTitle())
        yAxisLabel:SetTextAnchor("middle")
        yAxisLabel:SetPosition(5, 50, "%")
        yAxisLabel:SetTransform("rotate(270, 40,300)")
        yAxisLabel:SetFontSize("18pt")
        chartCanvas:Add(yAxisLabel)

        AddBoxes(chartCanvas, chart)
        AddXLabels(chartCanvas, chart)
        AddYLabels(chartCanvas, chart)

        return chartCanvas:ToText()
    end

    /*
        This action adds a white background to the canvas
    */
    private action AddBackground(ScalableVectorGraphics canvas)
        Rectangle background
        background:SetFill("white")
        background:SetSize(100,100, "%")
        canvas:Add(background)
    end

    /*
        This action adds the two lines for the x and y axis
    */
    private action AddAxes(ScalableVectorGraphics canvas)
        Line xAxis
        Line yAxis
        xAxis:SetPoints(axisPointX, axisPointY, axisPointX + axisLength, axisPointY, "%")
        xAxis:SetStroke("black")
        xAxis:SetTabIndex(-1)
        xAxis:SetStrokeWidth(0.4,"%")
        yAxis:SetPoints(axisPointX, axisPointY, axisPointX, axisPointY - axisLength, "%")
        yAxis:SetStroke("black")
        yAxis:SetTabIndex(-1)
        yAxis:SetStrokeWidth(0.4,"%")

        canvas:Add(xAxis)
        canvas:Add(yAxis)
    end

    /*
        This action adds the content of the BarChart
    */
    private action AddBoxes(ScalableVectorGraphics canvas, BoxPlot chart)
        BoxPlotLayout layout

        Array<PlotGroup> groups = chart:GetPlotGroups()
        if groups:GetSize() > 0
            number total = groups:GetSize()
            number panelwidth = axisLength/total
            number height = axisLength
            number dataScale = chart:GetYAxisMaximum()/height

            integer i = 0
            repeat while i < groups:GetSize()
                PlotGroup group = groups:Get(i)

                //Give each group an alloted section  
                integer startpanelw = cast(integer, panelwidth*i)

                if group:GetSize() > 0
                    integer width = cast(integer, panelwidth/group:GetSize())
                    integer center = cast(integer, width/2) 
                    integer size = cast(integer, width/4)
                    integer lineH = cast(integer, width * (0.005)*group:GetSize()*groups:GetSize())

                    integer k = 0
                    repeat while k < group:GetSize()
                        Plot plot = group:Get(k)
                        number median = plot:GetInfoAt(0)
                        number lowerQuartile = plot:GetInfoAt(1)
                        number upperQuartile = plot:GetInfoAt(2)
                        number min = plot:GetInfoAt(3)
                        number max = plot:GetInfoAt(4)
            
                        //Give each chart an alloted section  
                        integer startW = width*k + startpanelw
    
                                            //Left IQR
                        Rectangle first 
                        first:SetSize(lineH, (upperQuartile-lowerQuartile)/dataScale + lineH, "%")
                        first:SetPosition(axisPointX + startW + size, axisPointY - upperQuartile/dataScale, "%")
            
                        //CenterLine
                        Rectangle second
                        second:SetSize(lineH, (max-upperQuartile)/dataScale, "%")
                        second:SetPosition(axisPointX + startW + center, axisPointY - max/dataScale, "%")
            
                        Rectangle third
                        third:SetSize(lineH, (lowerQuartile-min)/dataScale, "%")
                        third:SetPosition(axisPointX + startW + center, axisPointY -lowerQuartile/dataScale, "%")
            
                        //Max
                        Rectangle fourth
                        fourth:SetSize(center+lineH, lineH, "%")
                        fourth:SetPosition(axisPointX + startW + size,axisPointY - max/dataScale, "%")
                        
                        //Upper Quartile
                        Rectangle fifth
                        fifth:SetSize(center+lineH, lineH, "%")
                        fifth:SetPosition(axisPointX + startW+ size, axisPointY - upperQuartile/dataScale, "%")
                        
                        //Lower Quartile
                        Rectangle sixth
                        sixth:SetSize(center+lineH, lineH,"%")
                        sixth:SetPosition(axisPointX+ startW + size,axisPointY - lowerQuartile/dataScale, "%")
                        
                        //Min
                        Rectangle seventh
                        seventh:SetSize(center+lineH, lineH, "%")
                        seventh:SetPosition(axisPointX + startW + size,axisPointY - min/dataScale - lineH, "%")
                        
                        //Right IQR
                        Rectangle eighth
                        eighth:SetSize(lineH, (upperQuartile-lowerQuartile)/dataScale + lineH, "%")
                        eighth:SetPosition(axisPointX + startW + size + center, axisPointY - upperQuartile/dataScale, "%")
                        
                        //Median
                        Rectangle ninth
                        ninth:SetSize(center+lineH, lineH, "%")
                        ninth:SetPosition(axisPointX + startW + size,axisPointY - median/dataScale, "%")
                        
                        canvas:Add(first)
                        canvas:Add(second)
                        canvas:Add(third)
                        canvas:Add(fourth)
                        canvas:Add(fifth)
                        canvas:Add(sixth)
                        canvas:Add(seventh)
                        canvas:Add(eighth)
                        canvas:Add(ninth)
                        
                        k = k + 1
                    end 
                end  
                i = i + 1
            end
        end
    end

    /*
        This action adds the labels on the x axis
    */
    private action AddXLabels(ScalableVectorGraphics canvas, BoxPlot chart)
        integer i = 0
        Array<text> xLabelText = chart:GetXAxisLabels()
        integer total = chart:GetPlotGroups():GetSize()
        number space = axisLength/(total)
        repeat while i < total
            Label tempLabel

            tempLabel:SetText(chart:GetXAxisLabels():Get(i))
            tempLabel:SetTextAnchor("middle")
            tempLabel:SetPosition(axisPointX + (i) * space + space/2, axisPointY + 4, "%")
            canvas:Add(tempLabel)
            i = i + 1
        end
    end

    /*
        This action adds the labels on the y axis
    */
    private action AddYLabels(ScalableVectorGraphics canvas, BoxPlot chart)
        number scaleNum = 0//chart:GetYAxisMinimum()
        
        number scaleWidth = (chart:GetYAxisMaximum()) / (chart:GetYIncrementCount() - 1)
        number scaleDivWidth = axisLength / (chart:GetYIncrementCount() - 1)
        // scale
        Math math
        i = 0
        //output chart:GetYMax()
        repeat while i < chart:GetYIncrementCount()
            Label scaleLabel
            Line scaleTick
            
            scaleLabel:SetTextAnchor("end")
            scaleLabel:SetText("" + math:Round(scaleNum, 1))
            scaleLabel:SetFontSize("8pt")
            scaleNum = scaleNum + scaleWidth

            scaleTick:SetTabIndex(-1)
            scaleTick:SetFirstPoint(axisPointX, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetSecondPoint(axisPointX - 2, axisPointY - scaleDivWidth*i, "%")
            scaleTick:SetStroke("black")
            scaleTick:SetStrokeWidth(0.4,"%")
            
            scaleLabel:SetPosition(axisPointX - 3, axisPointY - scaleDivWidth*i + 0.5, "%")

            canvas:Add(scaleLabel)
            canvas:Add(scaleTick)
        i = i+1
        end
    end

end
