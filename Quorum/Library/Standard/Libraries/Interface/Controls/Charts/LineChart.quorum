package Libraries.Interface.Controls.Charts

use Libraries.Interface.Layouts.LineChartLayout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Gradient

/*
    The LineChart class is Chart object that inherits from TwoVariableChart and like other
    UI elements it is added to the Game class. 
    The Line Chart is used to track changes over short and long periods of time. 
    Line charts can also be used to compare changes over the same period of time for more than one group. 
    The title label, axis labels, and scales can be modified. Any number of lines can be added.

    Attribute: Author Cody Molisee, Hannah Williams

    Attriute: Example

    use Libraries.Interface.Controls.Charts.LineChart
    use Libraries.Game.Game

    class Main is Game
        action Main
            StartGame()
        end

        action CreateGame
            LineChart chart
            Add(chart)
        end
    end
*/
class LineChart is TwoVariableChart    
    on create
        LineChartLayout layout
        SetLayout(layout)

        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:MAINTAIN_ASPECT_RATIO)
        properties:SetVerticalLayoutMode(properties:STANDARD)
        Font font = GetDefaultFont()
        properties:SetFont(font)
        properties:SetFontSize(GetDefaultFontSize())

        Color color
        Gradient gradient
        Color gray = color:LightGray()
        Color lightGray = color:CustomColor(0.9, 0.9, 0.9, 1)
        gradient:Set(gray, gray, lightGray, lightGray)

        properties:SetBackgroundColor(gradient)
        properties:SetBorderColor(color:Black())
        properties:SetBorderThickness(2)
        SetName("Line Chart")

        SetInputGroup("Chart")
        SetFocusable(true)
        SetAccessibilityCode(parent:Item:ITEM)

        // Default settings specific to line chart
        RegressionCapable(true)
        ShowAllTicks()
        SetDefaultOrientationToHorizontal()
        SetDefaultSeparation(true)
    end

    /*
        This is called by GenerateInfoTree to generate the summary that is heard when
        you first focus on the chart. Also the highest level of the information tree
        of  the chart.
    */
    private action GenerateSummary returns text
        text lineText = "lines"
        integer lines = parent:TwoVariableChart:GetNumberOfLines()
        if lines = 1
            lineText = "line"
        end
        if GetName() = "Line Chart"
            SetDescription(" with " + lines + " " + lineText + ". Use the arrow keys to navigate the chart.")
        else
            SetDescription("Line chart with " + lines + " " + lineText + ". Use the arrow keys to navigate the chart.")
        end
        return GetDescription()
    end

    /* 
        This action converts this chart to a text value that contains information 
        for a scalable vector graphics file. This is useful for saving charts to disk.
        Each sub-class of chart must implement this action separately.

        Attribute: Returns the Scalable Vector Graphics (SVG) text.
    */
    action ConvertToScalableVectorGraphics returns text
        LineChartWriter writer
        return writer:WriteOutChart(me)
    end

end