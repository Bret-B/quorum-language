package Libraries.Interface.Controls

use Libraries.Interface.Item2D
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Interface.Events.MouseEvent
use Libraries.Interface.Events.MouseListener
use Libraries.Interface.Events.MouseMovementListener
use Libraries.Interface.Events.MouseWheelListener
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Views.DrawableView
use Libraries.Containers.Array
use Libraries.Interface.Controls.Control
use Libraries.Interface.Layouts.Layout
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Views.ControlShaderView

class ScrollPane is ScrollableControl

    /*
    All items added to the scroll pane are actually added to the renderer
    instead. The renderer is responsible for determining how many items are
    visible, where they're located, and how to draw them.
    */
    ScrollPaneRenderer renderer

    number scrollDistance = 3

    constant number defaultScrollRegionWidth = 200
    constant number defaultScrollRegionHeight = 500

    public constant integer FIT_CONTENTS_VERTICALLY = 1
    public constant integer FIT_CONTENTS_HORIZONTALLY = 2
    public constant integer MANUAL_REGION_SIZING = 3

    // This is set in the on create block to FIT_CONTENTS_VERTICALLY.
    integer regionSizingMode = 0

    on create
        /* 
        The scroll anchor's properties are set to their initial values as part
        of the SetScrollRegionResizing action.
        */
        SetScrollRegionResizing(FIT_CONTENTS_VERTICALLY)

        renderer:SetName("Scroll Pane Background")

        SetInterfaceOptionsKey("ScrollPane")
        SetInputGroup("ScrollPane")
    end

    /*
    This action determines how the scroll region of this ScrollPane resizes
    itself relative to its contents. This should be one of the three resizing
    modes of this class, FIT_CONTENTS_VERTICALLY, FIT_CONTENTS_HORIZONTALLY, or
    MANUAL_REGION_SIZING. The default value is FIT_CONTENTS_VERTICALLY.
    */
    action SetScrollRegionResizing(integer mode)
        regionSizingMode = mode

        if mode = FIT_CONTENTS_VERTICALLY
            renderer:FitContentsVertically()
        elseif mode = FIT_CONTENTS_HORIZONTALLY
            renderer:FitContentsHorizontally()
        elseif mode = MANUAL_REGION_SIZING
            renderer:SetManualRegionSizing()
        end
    end

    action IsAccessibleParent returns boolean
        return true
    end

    action Add(Item2D item)
        renderer:Add(item)
    end

    action Add(integer index, Item2D item)
        renderer:Add(index, item)
    end

    action Remove(Item2D item) returns boolean
        return renderer:Remove(item)
    end

    action Remove(integer index) returns Item2D
        return renderer:Remove(index)
    end

    action SetScrollDistance(number distance)
        scrollDistance = distance
    end

    action GetScrollDistance returns number
        return scrollDistance
    end

    action SetRegionSize(number width, number height)
        renderer:SetRegionSize(width, height)
    end

    action FitRegionToContents
        Number width
        width:SetValue(0)
        Number height
        height:SetValue(0)
        FindDimensions(renderer:GetChildren(), width, height)
        SetRegionSize(width:GetValue() - renderer:GetGlobalX(), height:GetValue() - renderer:GetGlobalY())
    end

    private action FindDimensions(Array<Item2D> items, Number width, Number height)
        integer counter = 0
        repeat while counter < items:GetSize()
            Item2D item = items:Get(counter)

            if item:GetGlobalX() + item:GetWidth() > width:GetValue()
                width:SetValue(item:GetGlobalX() + item:GetWidth())
            end

            if item:GetGlobalY() + item:GetHeight() > height:GetValue()
                height:SetValue(item:GetGlobalY() + item:GetHeight())
            end

            if not item:IsClipping()
                FindDimensions(item:GetChildren(), width, height)
            end

            counter = counter + 1
        end
    end

    action SetLayout(Layout layout)
        renderer:SetLayout(layout)
    end

    action SetVerticalBarVisibility(integer mode)
        verticalMode = mode
    end

    action SetHorizontalBarVisibility(integer mode)
        horizontalMode = mode
    end

    action GetScrollableRegion returns Control
        return renderer
    end

    action GetTotalContentWidth returns number
        return renderer:GetContentWidth()
    end

    action GetTotalContentHeight returns number
        return renderer:GetContentHeight()
    end

    action GetScrollIncrement returns number
        return (scrollDistance * 10) / GetTotalContentHeight()
    end

    action RefreshScrollableRegion
        // Do nothing. The ScrollPane manages the view of its scrollable region via resizing.
    end

    action GetScrollRegionProperties returns LayoutProperties
        return renderer:GetScrollRegionProperties()
    end

    action GetScrollRegionItems returns Array<Item2D>
        return renderer:GetScrollRegionItems()
    end
    
end