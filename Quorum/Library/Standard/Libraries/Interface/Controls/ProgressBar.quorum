package Libraries.Interface.Controls

use Libraries.Interface.Accessibility
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Game.Graphics.Gradient
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.TextureRegion
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Label
use Libraries.System.File
use Libraries.Interface.Views.ImageControlView
use Libraries.Interface.Views.LabelBoxView
use Libraries.Interface.Views.ControlView
use Libraries.Interface.Views.View2D
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Events.ProgressBarValueChangedEvent
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Views.ControlShaderView

class ProgressBar is Control
    Label label = undefined
    Icon icon = undefined

    Icon bar

    LayoutProperties labelProperties
    GameStateManager manager
    number minimum = 0
    number maximum = 100
    number value = 0

    on create
        ManualLayout layout
        SetLayout(layout)

        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:FIT_CONTENTS)
        properties:SetVerticalLayoutMode(properties:FIT_FONT)
        Font font
        if (font:IsFontAvailable("Arial"))
            font:LoadFont("Arial")
        else
            font = GetDefaultFont()
        end
        properties:SetFont(font)
        properties:SetFontSize(16)
        SetSize(150,25)

        SetName("Progress Bar")

        LayoutProperties iconProperties = bar:GetDefaultLayoutProperties()
        iconProperties:SetPercentageHeight(1.0)
        iconProperties:SetPercentageWidth(0)
        bar:SetName("Bar Fill")
        Add(bar)

        SetBorderThickness(2)
        bar:SetBorderThickness(2)

        SetInterfaceOptionsKey("ProgressBar")
        SetInputGroup("ProgressBar")
        SetFocusable(true)
        SetAccessibilityCode(parent:Item:PROGRESS_BAR)
    end

    action SetInterfaceOptionsKey(text key)
        parent:Control:SetInterfaceOptionsKey(key)
        bar:SetInterfaceOptionsKey(key)
    end

    action LoadGraphics(LayoutProperties properties)
        if properties = undefined
            return now
        end

        // If the background bar doesn't have a view, we haven't loaded our icons yet.
        if GetView2D() = undefined
            ControlShaderView backgroundView
            backgroundView:Initialize()
            SetView2D(backgroundView)

            ControlShaderView barView
            barView:Initialize()
            bar:SetView2D(barView)
        end

        bar:SetBackgroundColor(GetForegroundColor())
        Color transparency
        transparency:SetColor(1, 1, 1, 0)
        bar:SetBorderColor(transparency)

        parent:Control:LoadGraphics(properties)
    end


    action GetMinimum returns number
        return minimum
    end

    action SetMinimum(number minimum)
        me:minimum = minimum
    end

    action GetMaximum returns number
        return maximum
    end

    action SetMaximum(number maximum)
        me:maximum = maximum
    end

    action GetValue returns number
        return value
    end

    action SetValue(number value)
        Accessibility access = manager:GetAccessibility()
        if access not= undefined
            ProgressBarValueChangedEvent event
            event:SetOldValue(me:value)
            event:SetNewValue(value)
            event:SetProgressBar(me)
            access:ProgressBarValueChanged(event)
        end
        me:value = value
        if bar not= undefined
            // not sure if this works for any given range but works fine for 0 to 100
            number percentage = (value - minimum)/(maximum - minimum)
            if percentage >= 0 and percentage <= 1
                bar:SetPercentageWidth(percentage)
                bar:RequestLayout()
            end
        end
    end

end