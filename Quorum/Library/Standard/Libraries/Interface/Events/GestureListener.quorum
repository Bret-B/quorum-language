package Libraries.Interface.Events

/*
The GestureListener class is used to react to gestures on mobile platforms (iOS and Android).

Attribute: Example

use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnSingleTap(GestureEvent event)
        Log("Single tap!")
    end

    action OnDoubleTap(GestureEvent event)
        Log("Double tap!")
    end

    action OnSwipe(GestureEvent event)
        Log("Swipe!")
    end

    action OnPan(GestureEvent event)
        Log("Pan!")
    end

    action OnLongPressBegin(GestureEvent event)
        Log("Long press started!")
    end

    action OnLongPressEnd(GestureEvent event)
        Log("Long press finished!")
    end

    action OnPinchBegin(GestureEvent event)
        Log("Begin pinch!")
    end

    action OnPinchContinue(GestureEvent event)
        Log("Continue pinch!")
    end

    action OnPinchEnd(GestureEvent event)
        Log("End pinch!")
    end
end
*/
class GestureListener

    /*
    The OnSingleTap action is triggered when the user taps a single time on an element.
    This action won't trigger if the user taps multiple times in rapid succession (for
    example, if the user is performing a double tap, this action won't trigger).
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnSingleTap(GestureEvent event)
        Log("Single tap!")
    end
end
    */
    action OnSingleTap(GestureEvent event)

    end


    /*
    The OnDoubleTap action is triggered when the user taps the screen twice in rapid succession.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnDoubleTap(GestureEvent event)
        Log("Double tap!")
    end
end
    */
    action OnDoubleTap(GestureEvent event)

    end

    /*
    The OnPinchBegin action is triggered when the user starts a pinching gesture (when
    a user places two fingers on the screen and moves them closer or farther apart).
    This gesture is commonly used for zooming.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnPinchBegin(GestureEvent event)
        Log("Begin pinch!")
    end

    action OnPinchContinue(GestureEvent event)
        Log("Continue pinch!")
    end

    action OnPinchEnd(GestureEvent event)
        Log("End pinch!")
    end
end
    */
    action OnPinchBegin(GestureEvent event)

    end

    /*
    The OnPinchContinue action is triggered on each frame of animation when a user moves
    their fingers during a pinching gesture (when a user places two fingers on the screen
    and moves them closer or farther apart).
    This gesture is commonly used for zooming.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnPinchBegin(GestureEvent event)
        Log("Begin pinch!")
    end

    action OnPinchContinue(GestureEvent event)
        Log("Continue pinch!")
    end

    action OnPinchEnd(GestureEvent event)
        Log("End pinch!")
    end
end
    */
    action OnPinchContinue(GestureEvent event)

    end

    /*
    The OnPinchEnd action is triggered when the user completes a pinching gesture (when
    a user places two fingers on the screen and moves them closer or farther apart).
    This gesture is commonly used for zooming.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnPinchBegin(GestureEvent event)
        Log("Begin pinch!")
    end

    action OnPinchContinue(GestureEvent event)
        Log("Continue pinch!")
    end

    action OnPinchEnd(GestureEvent event)
        Log("End pinch!")
    end
end
    */
    action OnPinchEnd(GestureEvent event)

    end

    /*
    The OnSwipe action is triggered when the user places a finger on the screen
    and quickly drags it in a direction. The swipe gesture only tracks the direction
    of the swipe in the cardinal directions (right, left, up, and down). Swipes occur
    in conjunction with pan gestures, which contain more specific information regarding
    finger movement.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnSwipe(GestureEvent event)
        Log("Swipe! The direction code was " + event:GetDirection())
    end
end
    */
    action OnSwipe(GestureEvent event)

    end

    /*
    The OnPan action is triggered when the user places a finger on the screen
    and drags it in a direction. Pan gestures can be triggered by fast or slow movement,
    and the action will be triggered on each frame of animation where the finger moves.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnPan(GestureEvent event)
        Log("Pan! The distance moved was " + event:GetPanDistanceX() + ", " + event:GetPanDistanceY())
    end
end
    */
    action OnPan(GestureEvent event)

    end

    /*
    The OnLongPressBegin action is triggered when the user places a finger on the screen
    and holds it still for a short time.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnLongPressBegin(GestureEvent event)
        Log("Long press started!")
    end
end
    */
    action OnLongPressBegin(GestureEvent event)

    end

    /*
    The OnLongPressEnd action is triggered when the user lifts a finger off the screen
    that had started a long press.
    
    Attribute: Parameter event A GestureEvent containing details on the gesture performed.

    Attribute: Example
use Libraries.Game.Game
use Libraries.Game.AndroidApplication
use Libraries.Game.IOSApplication
use Libraries.Interface.Events.GestureListener
use Libraries.Interface.Events.GestureEvent
use Libraries.Game.GameStateManager

class Main is Game, GestureListener

    action Main
        StartGame()
    end

    action CreateGame
        AddGestureListener(me)
    end

    // This action will output a value to the Android or iOS device logs,
    // or output to the console if it's on a different platform.
    action Log(text value)
        GameStateManager manager
        if manager:GetApplication() is IOSApplication
            IOSApplication app = cast(IOSApplication, manager:GetApplication())
            app:Log(value)
        elseif manager:GetApplication() is AndroidApplication
            AndroidApplication app = cast(AndroidApplication, manager:GetApplication())
            app:Log(value)
        else
            output value
        end
    end
    
    action OnLongPressEnd(GestureEvent event)
        Log("Long press finished!")
    end
end
    */
    action OnLongPressEnd(GestureEvent event)

    end

end