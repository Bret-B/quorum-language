package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TextBoxSelection

class TextBoxSelectToTokenEndBehavior is Behavior

    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if not (item is TextBox)
            return now
        end
        
        TextBox textBox = cast(TextBox, item)
        TextBoxSelection selection = textBox:GetSelection()

        integer start = selection:GetStartIndex()
        integer finish = selection:GetEndIndex()
        integer size = textBox:GetSize()

        integer caretPosition = textBox:GetCaretPosition()
        integer nextTokenStart = textBox:GetNextTokenStartIndex()

        if caretPosition < nextTokenStart
            extendingSelection = true
        end

        textBox:SetCaretPosition(nextTokenStart)
        if finish < nextTokenStart or start = finish or caretPosition = nextTokenStart //the selection is before or equal to the caret position, we are going to lengthen it

                textBox:Select(start, nextTokenStart, true)
        else    //the selection is after the caret, we are going to shorten the existing selection
    
                textBox:Select(nextTokenStart, finish, false) 
        end
    end

    private action IsEndOfLine(text value) returns boolean
        boolean isEndOfLine = false
        if value = value:GetCarriageReturn() or value = value:GetLineFeed()
            isEndOfLine = true
        end
        return isEndOfLine
    end


    action IsFinished returns boolean
        return true
    end
end