package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.Control
use Libraries.Containers.Array
use Libraries.Interface.Item2D

class NavigateFocusDownToolBar is Behavior
    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if item is Control
            Control control  = cast(Control, item)
            Array<Item2D> array = control:GetChildren()
            if array:IsEmpty()
                return now
            end

            Item2D firstFocusable = undefined
            i = 0
            repeat while i < array:GetSize()
                Item2D child = array:Get(i)
                if child:IsFocusable() and firstFocusable = undefined
                    firstFocusable = child
                end
                boolean value = child:IsFocused()
                //if one is focused, find the previous or wrap around
                if value
                    integer position = i
                    integer j = i + 1
                    repeat while j < array:GetSize()
                        Item2D newChild = array:Get(j)
                        if newChild:IsFocusable()
                            newChild:Focus()
                            return now
                        end
                        j = j + 1
                    end

                    //we have made it to the end without finding the new focusable element
                    //wrap around and keep going
                    j = 0
                    repeat while j < array:GetSize() and j not= position
                        Item2D newChild = array:Get(j)
                        if newChild:IsFocusable()
                            newChild:Focus()
                            return now
                        end
                        j = j + 1
                    end
                    return now
                end
                i = i + 1
            end

            //if we are here, we couldn't find one that was focused to latch onto,
            //so find the first focusable one in the list. 
            if firstFocusable not= undefined
                firstFocusable:Focus()
            end
        end
    end
end