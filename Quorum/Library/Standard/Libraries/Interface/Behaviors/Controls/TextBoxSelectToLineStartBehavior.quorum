package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TextBoxSelection

class TextBoxSelectToLineStartBehavior is Behavior
    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if not (item is TextBox)
            return now
        end

        TextBox textBox = cast(TextBox, item)
        TextBoxSelection selection = textBox:GetSelection()

        text lineText = textBox:GetCurrentLineText()
        integer leadingSpaces = 0
        boolean done = false

        repeat until done
            if leadingSpaces >= lineText:GetSize() or lineText:GetCharacter(leadingSpaces) not= " "
                done = true
            else
                leadingSpaces = leadingSpaces + 1
            end
        end

        integer startIndex = 0
        integer endIndex = 0
        boolean placeCaretAtEnd = false

        // If only a single line is selected
        if selection:GetFirstLine() = selection:GetLastLine()
            integer selectionStartPosition = selection:GetStartIndex() - textBox:GetIndexOfLine(selection:GetStartIndex())
            if leadingSpaces >= selectionStartPosition
                leadingSpaces = 0
            end

            startIndex = textBox:GetIndexOfLine(textBox:GetCaretLine()) + leadingSpaces
    
            if selection:IsCaretAtEnd()
                endIndex = selection:GetStartIndex()
            else
                endIndex = selection:GetEndIndex()
            end

        // Multiple lines are selected
        else
            integer caretPosition = textBox:GetCaretLinePosition()
            if leadingSpaces >= caretPosition
                leadingSpaces = 0
            end

            if selection:IsCaretAtEnd()
                startIndex = selection:GetStartIndex()
                endIndex = textBox:GetIndexOfLine(textBox:GetCaretLine()) + leadingSpaces
                placeCaretAtEnd = true
            else
                startIndex = textBox:GetIndexOfLine(textBox:GetCaretLine()) + leadingSpaces
                endIndex = selection:GetEndIndex()
            end
        end

        if placeCaretAtEnd
            textBox:SetCaretPosition(startIndex)
        else
            textBox:SetCaretPosition(endIndex)
        end
        textBox:Select(startIndex, endIndex, placeCaretAtEnd)
    end

    action IsFinished returns boolean
        return true
    end
end