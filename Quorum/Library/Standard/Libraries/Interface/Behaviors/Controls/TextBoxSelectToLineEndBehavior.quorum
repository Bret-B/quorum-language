package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TextBoxSelection

class TextBoxSelectToLineEndBehavior is Behavior
    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if not (item is TextBox)
            return now
        end

        TextBox textBox = cast(TextBox, item)
        TextBoxSelection selection = textBox:GetSelection()

        integer currentLine = textBox:GetCaretLine()
        text textValue = textBox:GetCurrentLineText()
        integer size = textValue:GetSize()
        text separator = textBox:GetLineSeparator()

        // We have to handle multi-line selection with the caret at the beginning differently.
        // All other cases can be handled the same way in the "else" block.
        if selection:GetFirstLine() not= selection:GetLastLine() and selection:IsCaretAtEnd() = false
            integer startIndex = (textBox:GetIndexOfLine(currentLine) + (size - separator:GetSize()))
            integer endIndex = selection:GetEndIndex()

            textBox:SetCaretPosition(startIndex)
            textBox:Select(startIndex, endIndex, false)
        else
            integer endIndex = 0
    
            if textBox:GetLineCount() > currentLine + 1
                endIndex = (textBox:GetIndexOfLine(currentLine) + (size - separator:GetSize()))
            else
                endIndex = textBox:GetSize()
            end
    
            integer startIndex = selection:GetEndIndex()
    
            if selection:IsCaretAtEnd()
                startIndex = selection:GetStartIndex()
            end
    
            textBox:SetCaretPosition(endIndex)
            textBox:Select(startIndex, endIndex, true)
        end
    end

    action IsFinished returns boolean
        return true
    end
end