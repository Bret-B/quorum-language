package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Interface.Controls.ScrollableControl
use Libraries.Interface.Item2D
use Libraries.Interface.Controls.ScrollBarControl

class ScrollBarDragBehavior is Behavior

    /*
    An offset on our calculations to compensate for where the user clicks on the scroll control.
    We need to set the position of the beginning of the bar within the track, but the user will
    almost certainly click somewhere in the middle of it instead.
    */
    number clickOffset = 0

    action Run(BehaviorEvent event)
        DragAndDropEvent dragEvent = event:GetDragAndDropEvent()
        if dragEvent = undefined
            return now
        end

        // Try to find the control this will affect via the item's parent hierarchy.
        ScrollBarControl bar = cast(ScrollBarControl, event:GetItem())
        ScrollableControl control = bar:GetScrollableControl()

        // If we couldn't find a ScrollableControl, then we can't scroll it.
        if control = undefined
            return now
        end

        boolean verticalScroll = bar:IsVertical()
        
        if dragEvent:eventType = dragEvent:DRAGGING_BEGAN
            if verticalScroll
                clickOffset = control:GetVerticalTrackPercentage(dragEvent:GetStartY() - control:GetGlobalY()) - control:GetScrollPercentageY()
            else
                clickOffset = control:GetHorizontalTrackPercentage(dragEvent:GetStartX() - control:GetGlobalX()) - control:GetScrollPercentageX()
            end
        elseif dragEvent:eventType = dragEvent:DRAGGING_CONTINUED
            if verticalScroll
                control:SetScrollPercentageY(control:GetVerticalTrackPercentage(dragEvent:GetY() - control:GetGlobalY()) - clickOffset)
            else
                control:SetScrollPercentageX(control:GetHorizontalTrackPercentage(dragEvent:GetX() - control:GetGlobalX()) - clickOffset)
            end
        end
    end

end