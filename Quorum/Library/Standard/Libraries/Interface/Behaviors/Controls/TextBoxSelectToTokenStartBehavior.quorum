package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TextBoxSelection

class TextBoxSelectToTokenStartBehavior is Behavior
    action Run(BehaviorEvent event)
        Item item = event:GetItem()
        if not (item is TextBox)
            return now
        end
        TextBox textBox = cast(TextBox, item)
        TextBoxSelection selection = textBox:GetSelection()

        integer startSelection = selection:GetStartIndex()
        integer endSelection = selection:GetEndIndex()


        boolean tokenIsDone = false
        boolean isReducingCurrentSelection = false

        text currentToken = ""
        text textValue = textBox:GetText()
        integer currentIndex = textBox:GetCaretPosition()
        integer beginIndex = currentIndex
        text previousCharacter = ""
        text currentCharacter = ""


        //need to check if we are reducing the selection or adding to the current selection
        if ((endSelection = currentIndex) and (startSelection not= endSelection)) //then we are reducing the current selection set flag
            isReducingCurrentSelection = true
        end

        repeat while not(tokenIsDone)
            if 0 < (currentIndex - 1)
                previousCharacter = textValue:GetCharacter(currentIndex - 1)
                //"Special" single character tokens signify the beginning of the "special" token and end of the previous token
                if(IsSpecialCharacter(previousCharacter))
                    //The "Special" single character token is the current token
                    if (beginIndex = currentIndex)
                        currentToken = previousCharacter
                        if previousCharacter = ")"
                            if textValue:GetCharacter(currentIndex - 2) = "("
                                currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                            end
                        end
                        if previousCharacter = ">"
                            if textValue:GetCharacter(currentIndex - 2) = ">"
                                currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                            end
                        end
                        if previousCharacter= "<"
                            if textValue:GetCharacter(currentIndex - 2) = "<"
                                currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                            end
                        end
                        if previousCharacter = "/"
                            if textValue:GetCharacter(currentIndex - 2) = "/"
                                currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                            end
                        end
                    end    
                    tokenIsDone = true
                /* skip past white space */           
                elseif (IsWhiteSpace(previousCharacter))
                    if currentIndex = beginIndex
                        currentToken = currentToken + previousCharacter
                        currentIndex = currentIndex - 1
                        previousCharacter = textValue:GetCharacter(currentIndex - 1)
                        if(IsWhiteSpace(previousCharacter))
                            repeat while previousCharacter = " "
                                currentToken = currentToken + previousCharacter
                                currentIndex = currentIndex - 1
                                previousCharacter = textValue:GetCharacter(currentIndex - 1)
                            end
                            //tokenIsDone = true
                            previousCharacter = textValue:GetCharacter(currentIndex)
                        elseif (IsSpecialCharacter(previousCharacter))
                            currentToken = currentToken + previousCharacter
                            if previousCharacter = ")"
                                if textValue:GetCharacter(currentIndex - 2) = "("
                                    currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                                end
                            end
                            if previousCharacter = ">"
                                if textValue:GetCharacter(currentIndex - 2) = ">"
                                    currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                                end
                            end
                            if previousCharacter= "<"
                                if textValue:GetCharacter(currentIndex - 2) = "<"
                                    currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                                end
                            end
                            if previousCharacter = "/"
                                if textValue:GetCharacter(currentIndex - 2) = "/"
                                    currentToken = currentToken + textValue:GetCharacter(currentIndex - 2)
                                end
                            end
                            tokenIsDone = true 
                        else
                            previousCharacter = textValue:GetCharacter(currentIndex)
                        end
                    else
                        tokenIsDone = true
                    end
                else
                    currentToken = currentToken + previousCharacter
                    currentIndex = currentIndex - 1
                end
            else
                beginIndex = 0
                currentToken = ""
                tokenIsDone = true
            end
        end
        
        if not isReducingCurrentSelection   //add the length of the current token to the selection
            textBox:SetCaretPosition(beginIndex - currentToken:GetSize())
            textBox:Select(beginIndex - currentToken:GetSize(), endSelection, false)
        else    //subtract the length of the current token from the selection
            textBox:SetCaretPosition(beginIndex - currentToken:GetSize())
            /* Special case when reversing a selection from SelectToTokenEnd which uses the token's
            end index (the SelectToTokenStart uses the token's start index, in this case a white space 
            that falls between the reverse selection will cause the program to crash */
            if startSelection > (beginIndex - currentToken:GetSize())
                textBox:Select(beginIndex - currentToken:GetSize(), startSelection, true)
            else
                textBox:Select(startSelection, beginIndex - currentToken:GetSize(), true)
            end
        end
        
    end

    private action IsWhiteSpace(text value) returns boolean
        boolean isWhiteSpace = false
        if value = " " or value = value:GetCarriageReturn() or value = value:GetLineFeed() or 
        value = value:GetTab()
            isWhiteSpace = true
        end
        return isWhiteSpace
    end

    private action IsSpecialCharacter(text value) returns boolean
        boolean isSpecialCharacter = false
        if value = "." or value = "/" or value = "*" or value = "-" or value = "+"
        or value = "(" or value = ")" or value = ":" or value = "<" or value = ">"
        or value = ";" or value = "," or value = value:GetDoubleQuote()
            isSpecialCharacter = true
        end
        return isSpecialCharacter
    end

    action IsFinished returns boolean
        return true
    end
end