package Libraries.Interface.Behaviors.Blocks

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Interface.Controls.Blocks.BlockItem
use Libraries.Interface.Controls.Blocks.Block
use Libraries.Interface.Controls.Blocks.FreeformBlock
use Libraries.Interface.Controls.Blocks.EditRegion
use Libraries.Interface.Item
use Libraries.Game.GameStateManager
use Libraries.Game.InputTable
use Libraries.Interface.Controls.Blocks.EditBox
use Libraries.Interface.Controls.Blocks.EditField
use Libraries.Interface.Controls.Blocks.MultipleLineBlockPart
use Libraries.Containers.Iterator
use Libraries.Language.Compile.Hints.Hint
use Libraries.Containers.MultipleLineText
use Libraries.Interface.Events.TextChangeEvent

class CodeEditorExecuteHintBehavior is Behavior
    Hint hint = undefined
    CodeEditor editor = undefined
    GameStateManager manager

    action Run(BehaviorEvent event)
        if editor = undefined or hint = undefined
            return now
        end
        integer start = hint:GetStartOffset()
        text insert = hint:GetInsertionText()
        TextChangeEvent textEvent
        textEvent:Initialize(editor, insert, "", start)
        editor:OnTextChange(textEvent, 0)
        editor:RegenerateBlocks()
    end

    action GetHint returns Hint
        return hint
    end

    action SetHint(Hint hint)
        me:hint = hint
    end

    action GetCodeEditor returns CodeEditor
        return editor
    end

    action SetCodeEditor(CodeEditor editor)
        me:editor = editor
    end
end