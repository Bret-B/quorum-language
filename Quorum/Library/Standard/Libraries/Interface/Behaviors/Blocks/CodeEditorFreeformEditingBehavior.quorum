package Libraries.Interface.Behaviors.Blocks

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Interface.Controls.Blocks.BlockItem
use Libraries.Interface.Controls.Blocks.Block
use Libraries.Interface.Controls.Blocks.FreeformBlock
use Libraries.Interface.Controls.Blocks.EditRegion
use Libraries.Interface.Item
use Libraries.Game.GameStateManager
use Libraries.Game.InputTable
use Libraries.Interface.Controls.Blocks.EditBox
use Libraries.Interface.Controls.Blocks.EditField
use Libraries.Interface.Controls.Blocks.MultipleLineBlockPart

class CodeEditorFreeformEditingBehavior is Behavior

    GameStateManager manager

    action Run(BehaviorEvent event)
        CodeEditor editor = undefined
        Item originalItem = event:GetItem()
        if originalItem is CodeEditor
            editor = cast(CodeEditor, originalItem)
        elseif originalItem is Block
            Block block = cast(Block, originalItem)
            editor = block:GetEditor()
        elseif originalItem is BlockItem
            BlockItem item = cast(BlockItem, originalItem)
            editor = item:GetEditor()
        else
            // If we can't find the editor, abort.
            return now
        end

        FreeformBlock freeform = undefined

        Block block = editor:GetSelection():GetBlock()
        if block is FreeformBlock
            // Process the event specifically for the Freeform block
            freeform = cast(FreeformBlock, block)
        elseif block not= undefined
            if not (block is MultipleLineBlockPart)
                // Ask the editor to convert the block into a Freeform block and start typing
                freeform = editor:ConvertToFreeform(block)
            else
                return now
            end
        end

        EditBox region = freeform:GetEditBox()
        region:SetCaretPosition(0)
        region:Focus()

        // Let the EditRegion process this input as if it had received it.
        event:SetItem(region)
        InputTable table = manager:GetInput():GetInputTable(region:GetInputGroup())
        table:ProcessInput(event:GetInputSet(), event)

        
        // Reset the event to hold the original item before sending it back, to ensure the Input system treats it properly.
        event:SetItem(originalItem)
    end

end