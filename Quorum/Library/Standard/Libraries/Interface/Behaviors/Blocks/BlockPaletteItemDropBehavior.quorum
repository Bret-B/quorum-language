package Libraries.Interface.Behaviors.Blocks

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Interface.Item
use Libraries.Interface.Item2D
use Libraries.Interface.Item3D
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array
use Libraries.Compute.Vector3
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer
use Libraries.Interface.Controls.Scenes.Blueprints.ItemBlueprint
use Libraries.Interface.Controls.Scenes.Blueprints.DrawableBlueprint
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer2D
use Libraries.Interface.Controls.Scenes.ScenePalette
use Libraries.Interface.Controls.Scenes.ScenePaletteItem
use Libraries.Interface.Controls.Scenes.SceneEditor
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Interface.Controls.Blocks.BlockPaletteItem
use Libraries.Interface.Controls.Blocks.BlockPalette

/*
    This behavior is used in the Scene Editor to finish a drag and drop event. 
    When the user finishes dragging an item from the palette then the coordinates 
    in the editor are mapped to the scene and a new item is placed in the scene 
    that is built from the blueprint of the original palette item. 
*/
class BlockPaletteItemDropBehavior is Behavior

    action Run(BehaviorEvent event)
        output "drag dropped"
        DragAndDropEvent dragEvent = event:GetDragAndDropEvent()

        CodeEditor editor = undefined
        Item destination = dragEvent:GetDestination()
        if destination is CodeEditor
            editor = cast(CodeEditor, destination)
        elseif destination not= undefined
            
        end

        if editor = undefined
            output "couldn't find an editor"
            //return now
        end

        Item2D item = undefined
        if dragEvent:GetSource() is Item2D
            item = cast(Item2D, dragEvent:GetSource())
            repeat until item = undefined or item is BlockPaletteItem
                item = item:GetParent()
            end
        end

        if item = undefined
            return now
        end

        BlockPaletteItem paletteItem = cast(BlockPaletteItem, item)
        BlockPalette palette = paletteItem:GetPalette()
        palette:SetDraggedItem(undefined)

    end

end