package Libraries.Interface.Behaviors.Controls

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Controls.CodeEditor
use Libraries.Interface.Controls.Blocks.Controls.BlockItem
use Libraries.Interface.Controls.Blocks.Block
use Libraries.Interface.Controls.Blocks.Controls.EditBox
use Libraries.Game.InputTable
use Libraries.Game.GameStateManager

class CodeEditorSelectionUpBehavior is Behavior

    GameStateManager manager

    action Run(BehaviorEvent event)
        CodeEditor editor = undefined
        if event:GetItem() is CodeEditor
            editor = cast(CodeEditor, event:GetItem())
        elseif event:GetItem() is Block
            Block block = cast(Block, event:GetItem())
            editor = block:GetEditor()
        elseif event:GetItem() is BlockItem
            if event:GetItem() is EditBox
                EditBox box = cast(EditBox, event:GetItem())
                if box:GetCaretLine() > 0
                    // If the box has a previous line to go to, let default textbox processing apply here.
                    InputTable table = manager:GetInput():GetInputTable("TextBox")
                    table:ProcessInput(event:GetInputSet(), event)
                    return now
                end
            end

            BlockItem item = cast(BlockItem, event:GetItem())
            editor = item:GetEditor()
        else
            // If we can't find the editor, abort.
            return now
        end

        editor:MoveSelectionUp()
    end

end