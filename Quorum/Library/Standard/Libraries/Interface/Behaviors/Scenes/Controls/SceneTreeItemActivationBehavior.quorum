package Libraries.Interface.Behaviors.Scenes.Controls

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.Scenes.Items.Highlights.SelectionHighlight
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Controls.Scenes.SceneTreeItem
use Libraries.Interface.Controls.Scenes.SceneEditor

class SceneTreeItemActivationBehavior is Behavior

    action Run(BehaviorEvent event)
        if event:GetItem() is SceneTreeItem = false
            return now
        end

        SceneTreeItem treeItem = cast(SceneTreeItem, event:GetItem())
        Item item = treeItem:GetSceneItem()

        //If there is no item, check if a layer is active and if so, jump to it
        if item = undefined and treeItem:GetSceneLayer() not= undefined
            text value = treeItem:GetName()
            SceneEditor controller = treeItem:GetSceneEditor()
            if controller not= undefined
                controller:SetSelectedLayer(treeItem:GetSceneLayer())
                controller:Focus()
            end
        elseif item = undefined and treeItem:GetSceneLayer() = undefined
            return now //there is no selected layer, so bail.
        end

        SceneEditor controller = treeItem:GetSceneEditor()
        if controller not= undefined
            SelectionHighlight highlight = controller:GetSelectionHighlight(item)
            if highlight not= undefined
                highlight:Focus()
            elseif treeItem:GetSceneLayer() not= undefined
                controller:SetSelectedLayer(treeItem:GetSceneLayer())
                controller:Focus()
            end
        end
    end
end