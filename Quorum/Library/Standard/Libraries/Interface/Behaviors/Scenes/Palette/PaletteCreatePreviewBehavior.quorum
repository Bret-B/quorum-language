package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Controls.FileChooser
use Libraries.System.File
use Libraries.Interface.Controls.Scenes.Blueprints.ItemBlueprint
use Libraries.Interface.Controls.Scenes.Blueprints.CustomItemBlueprint
use Libraries.Interface.Controls.Scenes.SceneEditor
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Controls.Scenes.ScenePaletteItem

class PaletteCreatePreviewBehavior is Behavior

    action Run(BehaviorEvent event)
        if event:GetItem() is ScenePaletteItem
            ScenePaletteItem item = cast(ScenePaletteItem, event:GetItem())
            SceneEditor controller = item:GetSceneEditor()
            if controller = undefined
                return now
            end

            ItemBlueprint schematic = item:GetItemBlueprint()
            if schematic is CustomItemBlueprint
                FileChooser chooser

                File project = controller:GetProjectLocation()
                File file = chooser:OpenFileDialog(project)
                if file = undefined
                    return now
                end

                text relativePath = controller:GetProjectPathToFile(file)

                File result
                result:SetWorkingDirectory(project:GetAbsolutePath())
                result:SetPath(relativePath)

                CustomItemBlueprint custom = cast(CustomItemBlueprint, schematic)
                if custom:IsFileValid(result)
                    controller:CreateItemPreview(custom, result)
                end
            else
                controller:CreateItemPreview(item:GetItemBlueprint())
            end
        end 
    end

end