package Libraries.Interface.Behaviors.Scenes.Camera

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.Layer3D
use Libraries.Game.Graphics.Camera
use Libraries.Compute.Frustum
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Interface.Item3D
use Libraries.Game.Graphics.Model
use Libraries.Interface.Item
use Libraries.Interface.Item2D
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer2D
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer3D
use Libraries.Interface.Controls.Scenes.SceneEditor
use Libraries.Interface.Behaviors.Behavior

/*
    This class is a behavior for the Scene Editor that takes the current editor camera 
    and sets the editorâ€™s filtered items to be all items that are in view of the camera. 
    When filtered Items are set in the editor the user can select through them and the 
    editor will automatically focus on one of the items. This allows the user to highlight 
    and filter through only items that are visible in the editor in an accessible way. 
    If no items are visible then the filtered items in the editor will be empty and no 
    item will be selected. 
*/
class CameraItemsInViewBehavior is Behavior

    action Run(BehaviorEvent event)
        if event:GetItem() is SceneEditor
            SceneEditor controller = cast(SceneEditor, event:GetItem())
            text editorTag = controller:GetEditorTag()
            Array<Item> itemsInView

            if controller:GetSelectedLayer() is EditorLayer3D
                EditorLayer3D layer = cast(EditorLayer3D, controller:GetSelectedLayer())
                Camera camera = layer:GetCamera()
                Frustum frustum = camera:GetFrustum()

                Iterator<Item3D> iterator = layer:GetIterator()
    
                repeat while iterator:HasNext()
                    Item3D item = iterator:Next()
                    if item:HasProperty(editorTag) = false
                        if frustum:PointInFrustum(item:GetGlobalPosition())
                            itemsInView:Add(item)
                        end
                    end
                end
            elseif controller:GetSelectedLayer() is EditorLayer2D
                EditorLayer2D layer = cast(EditorLayer2D, controller:GetSelectedLayer())
                Camera camera = layer:GetCamera()
                Frustum frustum = camera:GetFrustum()
    
                Iterator<Item2D> iterator = layer:GetIterator()
    
                repeat while iterator:HasNext()
                    Item2D item = iterator:Next()
                    if item:HasProperty(editorTag) = false
                        if frustum:PointInFrustum(item:GetGlobalX(), item:GetGlobalY(), item:GetGlobalZ())
                            itemsInView:Add(item)
                        end
                    end
                end
            end

            controller:SetFilteredItems(itemsInView, true)
        end
    end

end