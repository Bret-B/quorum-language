package Libraries.Interface.Views

use Libraries.Interface.Views.ControlView
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Painter2D
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.TextureFilter
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.PixelMap
use Libraries.Game.Graphics.Format
use Libraries.Game.Graphics.FileTextureData

class DefaultTreeMenuView is Drawable, ToggleView
    boolean open = false

    action Initialize(integer width, integer height)
        SetName("DefaultTreeMenuView")
        Color color
        Texture texture = GenerateTriangle(200, 20, color:White())
        Load(texture)
    end

    private action GenerateTriangle(integer size, integer buffer, Color color) returns Texture
        PixelMap map
        Format format
        format:SetValue(format:RGBA8888)
        map:CreatePixelMap(size, size, format)
        
        
        integer middle = buffer * 2
        middle = cast(integer, size / 2.0)
        map:FillTriangle(size / 4, buffer, size / 4, size - buffer, middle + size / 4, middle, color)
        Texture texture
        texture:LoadFromPixelMap(map)
        return texture
    end

    action QueueForDrawing(Painter2D painter)
        parent:Drawable:QueueForDrawing(painter)
    end

    action UpdateSize(number width, number height)
        SetSize(width, height)
    end

    action UpdatePosition(number x, number y, number z)
        SetPosition(x, y, z)
    end
    
    action UpdateRotation(number angle)
        if open
            SetRotation(angle + 90)
        else
            SetRotation(angle)
        end
    end

    action UpdateFlipping(boolean flipX, boolean flipY)
        SetFlipX(flipX)
        SetFlipY(flipY)
    end

    action Copy returns ControlView
        DefaultTreeMenuView newView
        newView:Load(GetTexture())
        return newView
    end

    action SetToggleState(boolean openState)
        if open = openState
            return now
        end

        if openState
            SetRotation(GetRotation() + 90)
        else
            SetRotation(GetRotation() - 90)
        end

        open = not open
    end

    action GetToggleState returns boolean
        return open
    end
end