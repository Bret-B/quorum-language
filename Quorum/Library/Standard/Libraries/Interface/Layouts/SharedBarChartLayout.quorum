package Libraries.Interface.Layouts

use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Control
use Libraries.Containers.Array
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Controls.ControlLabel
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Charts.SharedBarChartParent
use Libraries.Interface.Controls.Icon
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.BarGroup

class SharedBarChartLayout is ChartLayout
    integer request = 0
    integer outerEdgePadding = 0
    integer betweenGroupPadding = 0
    integer betweenBarPadding = 0
    integer barWidth = 0
    action LayoutChartContent(Chart control, Control chartAreaContainer)
        if not (control is SharedBarChartParent)
            return now
        end
        request = request + 1
        SharedBarChartParent chart = cast(SharedBarChartParent, control)
        originPointX = 0
        originPointY = 0

        Array<BarGroup> barGroups = chart:GetBarGroups()
        Drawable axis = chart:GetXAxis()

        number currentXPosition = 0
        if not barGroups:IsEmpty()
            outerEdgePadding = cast(integer, (((chartAreaContainer:GetWidth() * 5)/100) / 2)) //Uses 5% of space
            betweenGroupPadding = cast(integer, (((chartAreaContainer:GetWidth() * 10)/ 100) / (barGroups:GetSize()-1))) //Uses 10% of space
            betweenBarPadding = cast(integer, (((chartAreaContainer:GetWidth() * 5)/ 100) / chart:GetNumberOfBars())) //Uses 2% of space
            totalPadding = cast(integer, (outerEdgePadding*2 + betweenGroupPadding*(barGroups:GetSize()-1) + betweenBarPadding*chart:GetNumberOfBars()))
            
            remainingArea = cast(integer, (chartAreaContainer:GetWidth() - totalPadding)) //Total remaining space on chart for bars
            barWidth = cast(integer, remainingArea / chart:GetNumberOfBars())
            
            Icon currentBar = barGroups:Get(0):Get(0):GetIcon()
            barY = originPointY
            currentXPosition = currentXPosition + outerEdgePadding
            integer i = 0
            repeat while i < barGroups:GetSize()
                integer j = 0
                repeat while j < barGroups:Get(i):GetSize()
                    currentBar = barGroups:Get(i):Get(j):GetIcon()
                    currentBar:SetWidth(barWidth)
                    currentBar:SetPosition(currentXPosition, barY)
                    currentXPosition = currentXPosition + barWidth + betweenBarPadding
                    j = j + 1
                end
                currentXPosition = currentXPosition + betweenGroupPadding
                i = i + 1
            end
        end
    end

    private action CalculateBarX(number width) returns number
        return 0
    end

    action LayoutHorizontalAxis(Chart control, Control horizContainer)
        if not (control is SharedBarChartParent)
            return now
        end

        Math math
        SharedBarChartParent chart = cast(SharedBarChartParent, control)
        //This is the Ticks on the X Axis
        Control chartAreaContainer = chart:GetChartArea()
        originPointX = 0
        originPointY = cast(integer, horizContainer:GetHeight())
        number barDivWidth = 0
        number barOffset = 0.05
        number xOrig = originPointX + chartAreaContainer:GetWidth()*barOffset
        Array<Drawable> ticks = chart:GetXTicks()

        Array<BarGroup> barGroups = chart:GetBarGroups()

        //bump and label tick bump
        number bump = chart:GetNumberOfBars() / (ticks:GetSize() * 1.0)
        if not ticks:IsEmpty()

            Drawable axis = chart:GetXAxis()
            barDivWidth = cast(integer, axis:GetWidth() / (chart:GetNumberOfBars() + 1))
            //adjust bar offset
            barOffset = (barDivWidth / chartAreaContainer:GetWidth()) / 2 //currently a percentage
            Drawable currentTick = ticks:Get(0)
            number tickX = originPointX + chartAreaContainer:GetWidth()*barOffset
            integer tickY = originPointY - cast(integer, currentTick:GetHeight())
            number barX = outerEdgePadding
            integer i = 0
            repeat while i < ticks:GetSize()
                currentTick = ticks:Get(i)
                barX = barX + barGroupsGet(i)
                //integer barIndex = cast(integer, math:Round(bump * i))
                //Icon bar = chart:GetBars():Get(barIndex)
                //number barX = bar:GetX() + (bar:GetWidth() / 2.0) - (currentTick:GetWidth() / 2.0)
                currentTick:SetPosition(barX, tickY)
                tickX = tickX + (barDivWidth * bump)
                i = i + 1
            end
        end

        //This is the labels on the X axis
        originPointX = 0
        originPointY = cast(integer, horizContainer:GetHeight())
        integer xLabelOffset = 0
        Array<ControlLabel> barLabels = chart:GetXLabels()
        if not barLabels:IsEmpty()
            Label currentLabel = barLabels:Get(0)
            if currentLabel:GetDefaultLayoutProperties():NeedsRendering()
                currentLabel:LoadGraphics(currentLabel:GetDefaultLayoutProperties())
            end
            xLabelOffset = cast(integer, 15 + currentLabel:GetHeight())
            integer labelY = originPointY - xLabelOffset
            number xOrigin = originPointX + chartAreaContainer:GetWidth()*barOffset
            number centerOffset = barDivWidth/2

            number tickX = originPointX + chartAreaContainer:GetWidth()*barOffset
            integer i = 0
            repeat while i < barLabels:GetSize()
                currentLabel = barLabels:Get(i)
                if currentLabel:GetDefaultLayoutProperties():NeedsRendering()
                    currentLabel:LoadGraphics(currentLabel:GetDefaultLayoutProperties())
                end

                integer barIndex = cast(integer, math:Round(bump * i))
                Icon bar = chart:GetBars():Get(barIndex)
                number barX = bar:GetX() + (chart:GetBarWidth() / 2.0)
                number x = barX - currentLabel:GetWidth()/2
                currentLabel:SetPosition(x, labelY)
                tickX = tickX + (barDivWidth * bump)
                i = i + 1
            end
        end

        //This is the label itself on the X axis
        originPointX = 0
        originPointY = cast(integer, horizContainer:GetHeight())
        Label axisLabel = chart:GetXLabel()
        number axisY = originPointY - (xLabelOffset + axisLabel:GetHeight()*1.5)
        if axisY < 1
            axisY = 1
        end
        axisLabel:SetX(cast(integer, horizContainer:GetWidth()/2 - axisLabel:GetWidth()/2))
        axisLabel:SetY(cast(integer, axisY))
    end
end