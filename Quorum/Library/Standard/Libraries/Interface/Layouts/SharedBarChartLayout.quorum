package Libraries.Interface.Layouts

use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Control
use Libraries.Containers.Array
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Controls.ControlLabel
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Charts.SharedBarChartParent
use Libraries.Interface.Controls.Icon
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.BarGroup

class SharedBarChartLayout is ChartLayout
    integer request = 0
    integer outerEdgePadding = 0
    integer betweenGroupPadding = 0
    integer betweenBarPadding = 0
    integer barWidth = 0

    /*
        This action will calculate the size and placement of the elements (bars) within the chart 
        based on the size of the display screen.
    */
    action LayoutChartContent(Chart control, Control chartAreaContainer)
        if not (control is SharedBarChartParent)
            return now
        end
        request = request + 1
        SharedBarChartParent chart = cast(SharedBarChartParent, control)
        originPointX = 0
        originPointY = 0

        Array<BarGroup> barGroups = chart:GetBarGroups()
        Drawable axis = chart:GetXAxis()

        number currentXPosition = 0
        if not barGroups:IsEmpty()
            // Space on each side of the inner chart (5%)
            outerEdgePadding = cast(integer, ((axis:GetWidth() * 0.05) / 2))

            // Space spread evenly between each bar group (10%)
            betweenGroupPadding = cast(integer, ((axis:GetWidth() * 0.1) / (barGroups:GetSize()-1)))

            // Space spread evenly between each bar with the bar groups (5%)
            betweenBarPadding = cast(integer, ((axis:GetWidth() * 0.05) / (chart:GetNumberOfBars() - barGroups:GetSize())))

            // Total white space alloted for inner chart area
            totalPadding = cast(integer, (outerEdgePadding*2 + betweenGroupPadding*(barGroups:GetSize()-1)))
            totalPadding = totalPadding + cast(integer, betweenBarPadding*(chart:GetNumberOfBars() - barGroups:GetSize()))
            
            // Remaining non-white space to be evenly divided amongst all bars (80%)
            remainingArea = cast(integer, (axis:GetWidth() - totalPadding))
            barWidth = cast(integer, remainingArea / chart:GetNumberOfBars())
            
            Icon currentBar = barGroups:Get(0):Get(0):GetIcon()
            barY = originPointY
            currentXPosition = currentXPosition + outerEdgePadding

            // Tracking area of each bar group for group icon
            number groupX = currentXPosition    // x-axis coordinate
            number groupY = 0                   // y-axis coordinate
            number groupWidth = 0               // width of entire group
            number groupHeight = 0              // height of entire group

            integer i = 0
            repeat while i < barGroups:GetSize()
                integer j = 0
                repeat while j < barGroups:Get(i):GetSize()
                    currentBar = barGroups:Get(i):Get(j):GetIcon()
                    // Set bar width
                    currentBar:SetWidth(barWidth)
                    // Set bar height (percentage)
                    number percent = barGroups:Get(i):Get(j):GetValue() / chart:GetMaxBarValue()
                    barGroups:Get(i):Get(j):SetHeight(percent)
                    //Find max height for barGroup Icon
                    if(currentBar:GetHeight() > groupHeight)
                        groupHeight = currentBar:GetHeight()
                    end
                    currentBar:SetPosition(currentXPosition, barY)
                    currentXPosition = currentXPosition + barWidth + betweenBarPadding
                    j = j + 1
                end
                // Creating Bar Group Icon
                groupWidth = currentXPosition - betweenBarPadding - groupX
                Icon newIcon = barGroups:Get(i):GetIcon()
                newIcon:LoadRectangle(cast(integer, groupWidth), cast(integer, groupHeight+1))
                newIcon:SetX(groupX)
                newIcon:SetY(originPointY)
                currentXPosition = currentXPosition + betweenGroupPadding - betweenBarPadding
                i = i + 1
                groupHeight = 0
                groupX = currentXPosition
            end
        end
    end

    action LayoutHorizontalAxis(Chart control, Control horizContainer)
        if not (control is SharedBarChartParent)
            return now
        end

        Math math
        SharedBarChartParent chart = cast(SharedBarChartParent, control)
        //This is the Ticks on the X Axis
        Control chartAreaContainer = chart:GetChartArea()
        originPointX = 0
        originPointY = cast(integer, horizContainer:GetHeight())
        number barDivWidth = 0
        number barOffset = 0.05
        number xOrig = originPointX + chartAreaContainer:GetWidth()*barOffset
        Array<Drawable> ticks = chart:GetXTicks()

        Array<BarGroup> barGroups = chart:GetBarGroups()
        Array<ControlLabel> barLabels = chart:GetXLabels()
        integer yLabelOffset = 0
        //bump and label tick bump
        number bump = chart:GetNumberOfBars() / (ticks:GetSize() * 1.0)
        if not ticks:IsEmpty() and not barGroups:IsEmpty() and not barLabels:IsEmpty()

            Label currentLabel = barLabels:Get(0)
            if currentLabel:GetDefaultLayoutProperties():NeedsRendering()
                currentLabel:LoadGraphics(currentLabel:GetDefaultLayoutProperties())
            end

            yLabelOffset = cast(integer, 15 + currentLabel:GetHeight())
            integer labelY = originPointY - yLabelOffset

            Drawable axis = chart:GetXAxis()
            barDivWidth = cast(integer, axis:GetWidth() / (chart:GetNumberOfBars() + 1))
            //adjust bar offset
            barOffset = (barDivWidth / chartAreaContainer:GetWidth()) / 2 //currently a percentage
            Drawable currentTick = ticks:Get(0)
            number tickX = originPointX + chartAreaContainer:GetWidth()*barOffset
            integer tickY = originPointY - cast(integer, currentTick:GetHeight())
            number labelX = tickX
            number barX = outerEdgePadding
            tickX = barX
            integer i = 0
            number centerOffset = 0
            repeat while i < ticks:GetSize()
                currentLabel = barLabels:Get(i)

                if currentLabel:GetDefaultLayoutProperties():NeedsRendering()
                    currentLabel:LoadGraphics(currentLabel:GetDefaultLayoutProperties())
                end

                currentTick = ticks:Get(i)
                centerOffset = (((barGroups:Get(i):GetSize() * barWidth) + ((barGroups:Get(i):GetSize() - 1) * betweenBarPadding)) / 2)
                tickX = barX + centerOffset

                labelX = tickX - (currentLabel:GetWidth()/2)
                currentLabel:SetPosition(labelX, labelY)

                barX = barX + ((barGroups:Get(i):GetSize() * barWidth) + ((barGroups:Get(i):GetSize() - 1) * betweenBarPadding)) + betweenGroupPadding
                currentTick:SetPosition(tickX, tickY)
                i = i + 1
            end
        end

        //This is the label itself on the X axis
        originPointX = 0
        originPointY = cast(integer, horizContainer:GetHeight())
        Label axisLabel = chart:GetXLabel()
        number axisY = originPointY - (yLabelOffset + axisLabel:GetHeight()*1.5)
        if axisY < 1
            axisY = 1
        end
        axisLabel:SetX(cast(integer, horizContainer:GetWidth()/2 - axisLabel:GetWidth()/2))
        axisLabel:SetY(cast(integer, axisY))
    end
end