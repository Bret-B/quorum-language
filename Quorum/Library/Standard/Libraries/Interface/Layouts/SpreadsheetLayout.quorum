package Libraries.Interface.Layouts

use Libraries.Interface.Controls.Control
use Libraries.Interface.Item2D
use Libraries.Containers.Array
use Libraries.Game.Graphics.Font
use Libraries.Compute.Math
use Libraries.Interface.Controls.Column
use Libraries.Interface.Controls.Cell
use Libraries.Game.Graphics.Label

/*
The SpreadsheetLayout class is used by the Spreadsheet to layout its columns. Importantly,
it does extra work to ensure that each cell in a row has the same height across all of 
the columns. This layout is designed explicitly for use in the Spreadsheet and is not
intended for use with other controls.
*/
class SpreadsheetLayout is FlowLayout
    // Overrides the LayoutItems action in FlowLayout.
    private action LayoutItems(Control container, Array<Item2D> items, number containerWidth, number containerHeight)
        Array<Column> columns
        Array<number> columnWidths
        number columnX = 0

        integer counter = 0
        repeat while counter < items:GetSize()
            if items:Get(counter) is Column
                Column column = cast(Column, items:Get(counter))
                columns:Add(column)
                
                if column:GetHorizontalLayoutMode() = column:parent:Control:STANDARD
                    number width = column:GetInterfaceScale() * (column:GetPixelWidth() + (2 * column:GetBorderThickness())) + (column:GetPercentageWidth() * containerWidth)
                    columnX = width + (column:GetLeftPadding() + column:GetRightPadding()) * column:GetInterfaceScale()
                    columnWidths:Add(width)
                elseif column:GetHorizontalLayoutMode() = column:parent:Control:FILL
                    number width = (containerWidth - columnX) - (column:GetLeftPadding() - column:GetRightPadding()) * column:GetInterfaceScale()
                    columnX = containerWidth
                    columnWidths:Add(width)
                end
            end
            counter = counter + 1
        end

        integer rowCounter = 0
        integer columnSize = columns:Get(0):GetSize()
        number totalHeight = 0

        repeat while rowCounter < columnSize
            integer columnCounter = 0
            number rowCellHeight = 0
            repeat while columnCounter < columns:GetSize()
                Column column = columns:Get(columnCounter)
                Cell cell = column:GetCell(rowCounter)
                Label label = cell:GetLabel()

                label:SetMaximumWidth(columnWidths:Get(columnCounter) - column:GetInterfaceScale() * (label:GetLeftPadding() + label:GetRightPadding()))

                number height = label:GetHeight() + (label:GetTopPadding() + label:GetBottomPadding()) * column:GetInterfaceScale()
                if height > rowCellHeight
                    rowCellHeight = height
                end
                columnCounter = columnCounter + 1
            end

            totalHeight = totalHeight + rowCellHeight
            
            columnCounter = 0
            repeat while columnCounter < columns:GetSize()
                Column column = columns:Get(columnCounter)
                Cell cell = column:GetCell(rowCounter)
                cell:SetPixelHeight(rowCellHeight)

                Label label = cell:GetLabel()
                label:SetPixelX(label:GetLeftPadding() * column:GetInterfaceScale())
                label:SetPixelY(rowCellHeight - (label:GetTopPadding() * column:GetInterfaceScale()) - label:GetLineHeight())

                columnCounter = columnCounter + 1
            end

            rowCounter = rowCounter + 1
        end

        if container:GetVerticalLayoutMode() = container:FIT_CONTENTS
            container:SetHeight(totalHeight)
            parent:FlowLayout:containerHeight = totalHeight
        end

        integer i = 0
        number x = 0
        repeat while i < columns:GetSize()
            Column column = columns:Get(i)
            LayoutProperties properties = column:GetDefaultLayoutProperties()
            x = x + column:GetLeftPadding() * column:GetInterfaceScale()

            if properties:IsSnappingToPixels()
                column:SetPosition(cast(integer, x), cast(integer, parent:FlowLayout:containerHeight - totalHeight))
                column:SetSize(cast(integer, columnWidths:Get(i)), cast(integer, totalHeight))
            else
                column:SetPosition(x, parent:FlowLayout:containerHeight - totalHeight)
                column:SetSize(columnWidths:Get(i), totalHeight)
            end

            x = x + columnWidths:Get(i) + column:GetRightPadding() * column:GetInterfaceScale()
            i = i + 1
        end
    end

    // Overrides the VerticalFitContainer action in FlowLayout.
    private action VerticalFitContainer(Control container, Array<Item2D> items, number containerWidth, number containerHeight)
        if container:GetVerticalLayoutMode() = container:FIT_CONTENTS
            container:SetHeight(containerHeight)
        end
    end
end