package Libraries.Interface.Layouts
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Control
use Libraries.Interface.Controls.Charts.ScatterPlot
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array
use Libraries.Interface.Controls.Charts.ChartPoint
use Libraries.Interface.Controls.Icon

class ScatterPlotLayout is TwoVariableChartLayout
    action LayoutChartContent(Chart control, Control chartAreaContainer)
        if not (control is ScatterPlot)
            return now
        end
        
        ScatterPlot chart = cast(ScatterPlot, control)
        Array<ChartPoint> points = chart:GetChartPoints()
        if points = undefined
            return now
        end

        number width = chartAreaContainer:GetWidth()
        number height = chartAreaContainer:GetHeight()

        // Give 2% of chart area space to the point
        number pointDensity = (width * 0.02) 
        integer radius = cast(integer, pointDensity/2)
        chart:SetPointRadius(radius)

        i = 0
        repeat while i < points:GetSize()
            ChartPoint point = points:Get(i)
            
            point:LoadFilledCircle(radius, points:Get(i):GetColor())

            point:SetPercentX((point:GetValueX() - chart:GetXAxisMinimum()) / (chart:GetXAxisMaximum() - chart:GetXAxisMinimum()))
            point:SetPercentY((point:GetValueY() - chart:GetYAxisMinimum()) / (chart:GetYAxisMaximum() - chart:GetYAxisMinimum()))
            integer x = cast(integer, point:GetPercentX() * width - (point:GetWidth() / 2.0))
            integer y = cast(integer, point:GetPercentY() * height - (point:GetHeight() / 2.0))
            point:SetPosition(x, y)
            i = i + 1
        end
    end
end