package Libraries.Interface.Layouts

use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Control
use Libraries.Interface.Controls.Charts.LineChart
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Interface.Controls.Charts.ChartPoint
use Libraries.Interface.Controls.Charts.ChartPointComparison
use Libraries.Compute.Math
use Libraries.Interface.Controls.Charts.ChartLine

use Libraries.Game.Graphics.Color

/*
    This is the layout class for Line Chart. This class is responsible for 
    positioning all chart area components of the line chart.

    Attribute: Author Cody Molisee
*/
class LineChartLayout is TwoVariableChartLayout
    action LayoutChartContent(Chart control, Control chartAreaContainer)
        if not (control is LineChart)
            return now
        end
        
        LineChart chart = cast(LineChart, control)
        Array<ChartLine> lines = chart:GetAllLines()
        number width = chartAreaContainer:GetWidth()
        number height = chartAreaContainer:GetHeight()

        // Give 1.25% of chart area space to each point
        number pointDensity = (width * 0.0125) 
        chart:SetPointRadius(cast(integer, pointDensity/2))

        // Set default line density to 0.75% of chart area
        chart:SetLineDensity(cast(integer, width * 0.0075))

        integer i = 0
        repeat while i < lines:GetSize()
            if lines:Get(i):GetPoints() = undefined
                return now
            end
            integer j = 0
            repeat while j < lines:Get(i):GetPoints():GetSize()
                ChartPoint point = lines:Get(i):GetPoints():Get(j)
                point:SetWidth(pointDensity)
                point:SetHeight(pointDensity)
                integer x = cast(integer, point:GetPercentX() * width - (point:GetWidth() / 2.0))
                integer y = cast(integer, point:GetPercentY() * height - (point:GetHeight() / 2.0))
                point:SetPosition(x, y)
                j = j + 1
            end
            i = i + 1
        end
    end
end