package Libraries.Interface.Forms

use Libraries.Game.Game
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Game.DesktopConfiguration
use Libraries.Game.WebConfiguration
use Libraries.Game.Layer2D
use Libraries.Game.Layer3D
use Libraries.Interface.Controls.Button
use Libraries.Containers.HashTable
use Libraries.Containers.Iterator
use Libraries.Game.GameStateManager
use Libraries.Interface.Pages.FlowLayoutPage
use Libraries.Interface.Options.LightModeOptions
use Libraries.Interface.Options.DarkModeOptions
use Libraries.Interface.Options.InterfaceOptions
use Libraries.Interface.Item2D
use Libraries.Interface.Pages.StackedRowPage
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.TextField

/*
    Form is a helper class that allows us to create forms for a user interface without 
    the full complexity of the game class. 

    Attribute: Example

    use Libraries.Interface.Form
    use Libraries.Interface.Page
    use Libraries.Interface.Controls.Button
    
    //this application contains a button that does nothing
    Form app
    app:AddButton("Button")
    app:Display()
*/
class Form is Game, FormContainerInterface
    HashTable<text, Page> pages
    Page currentPage = undefined
    Page mainPage = undefined
    constant text DEFAULT_PAGE_NAME = "Main"
    InterfaceOptions options = undefined

    on create
        DesktopConfiguration desktop = GetDesktopConfiguration()
        desktop:targetFramesPerSecond = 10
        WebConfiguration web = GetWebConfiguration()
        web:framesPerSecondLimit = 10
        
        StackedRowPage page
        page:SetName(DEFAULT_PAGE_NAME)
        pages:Add(DEFAULT_PAGE_NAME, page)
        currentPage = page
        mainPage = page
        LightModeOptions options
        me:options = options
    end

    action SetToLightMode
        GameStateManager manager
        LightModeOptions light
        me:options = light
        manager:SetInterfaceOptions(options)
    end

    action SetToDarkMode
        GameStateManager manager
        DarkModeOptions dark
        me:options = dark
        manager:SetInterfaceOptions(options)
    end

    action AddPage(text name) returns Page
        FlowLayoutPage page
        page:SetName(name)
        pages:Add(name, page)
        return page
    end

    action AddPage(Page page)
        pages:Add(page:GetName(), page)
    end

    action RemovePage(text name) returns Page
        return pages:RemoveKey(name)
    end

    action SetPage(text name)
        Remove(currentPage)

        Page page = pages:GetValue(name)
        Add(page)
        currentPage = page
    end

    action CreateGame
        ManualLayout layout
        SetLayout(layout)

        GameStateManager manager
        

        Layer2D layer = GetCurrentLayer2D()
        layer:EnablePhysics(false)

        Layer3D layer3D = GetCurrentLayer3D()
        layer3D:EnablePhysics(false)

        currentPage = mainPage
        Add(mainPage)
        manager:SetInterfaceOptions(options)
    end

    /*  This action creates a default Game object for displaying charts and sets this chart
        as the sole display. It is useful for interacting with charts without creating
        a complex game setup.
    */
    action Display
        SetScreenSize(750,1000)
        StartGame()
    end

    /*  This action creates a default Game object for displaying charts and sets this chart
        as the sole display. It is useful for interacting with charts without creating
        a complex game setup.
    */
    action Display(integer width, integer height)
        SetScreenSize(width,height)
        StartGame()
    end

    action GetMainPage returns Page
        return mainPage
    end

    action AddGrouping(text name) returns Grouping
        return currentPage:AddGrouping(name)
    end

    action RemoveGrouping(text name) returns Grouping
        return currentPage:RemoveGrouping(name)
    end

    action SetTitle(text name)
        currentPage:SetTitle(name)
    end

    action GetTitle returns text
        return currentPage:GetTitle()
    end

    action SetTitleFontSize(integer size)
        currentPage:SetTitleFontSize(size)
    end

    action GetTitleFontSize returns integer
        return currentPage:GetTitleFontSize()
    end

    action SetTitleSizeSmall
        currentPage:SetTitleSizeSmall()
    end

    action SetTitleSizeMedium
        currentPage:SetTitleSizeMedium()
    end

    action SetTitleSizeLarge
        currentPage:SetTitleSizeLarge()
    end

    action LeftAlignTitle
        currentPage:LeftAlignTitle()
    end

    action RightAlignTitle
        currentPage:RightAlignTitle()
    end

    action CenterAlignTitle
        currentPage:CenterAlignTitle()
    end

    action LeftAlignContent
        currentPage:LeftAlignContent()
    end

    action RightAlignContent
        currentPage:RightAlignContent()
    end

    action CenterAlignContent
        currentPage:CenterAlignContent()
    end

    action FindControl(text name) returns Item2D
        return currentPage:FindControl(name)
    end

    action AddButton(text name) returns Button
        return currentPage:AddButton(name)
    end

    action AddButton(text name, text fileName) returns Button
        return currentPage:AddButton(name, fileName)
    end

    action RemoveButton(text name) returns Button
        return currentPage:RemoveButton(name)
    end

    action AddLabel(text name, text value) returns Label
        return currentPage:AddLabel(name, value)
    end

    action RemoveLabel(text name) returns Label
        return currentPage:RemoveLabel(name)
    end

    action AddIcon(text name, text fileName) returns Icon
        return currentPage:AddIcon(name, fileName)
    end

    action RemoveIcon(text name) returns Icon
        return currentPage:RemoveIcon(name)
    end

    action AddTextField(text name) returns TextField
        return currentPage:AddTextField(name)
    end

    action RemoveTextField(text name) returns TextField
        return currentPage:RemoveTextField(name)
    end
end