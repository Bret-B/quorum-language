package Libraries.Interface.Forms

use Libraries.Game.Game
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Game.DesktopConfiguration
use Libraries.Game.WebConfiguration
use Libraries.Game.Layer2D
use Libraries.Game.Layer3D
use Libraries.Interface.Controls.Button
use Libraries.Containers.HashTable
use Libraries.Containers.Iterator
use Libraries.Game.GameStateManager
use Libraries.Interface.Options.LightModeOptions
use Libraries.Interface.Options.DarkModeOptions
use Libraries.Interface.Options.InterfaceOptions
use Libraries.Interface.Item2D
use Libraries.Interface.Pages.StackedRowPage
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.List
use Libraries.Interface.Controls.Checkbox
use Libraries.Interface.Controls.RadioButton
use Libraries.Sound.Audio
use Libraries.System.File

/*
    Form is a helper class that allows us to create forms for a user interface without 
    the full complexity of the game class. 

    Attribute: Example

    use Libraries.Interface.Form
    use Libraries.Interface.Page
    use Libraries.Interface.Controls.Button
    
    //this application contains a button that does nothing
    Form app
    app:AddButton("Button")
    app:Display()
*/
class Form is Game, FormPrimitiveContainer
    HashTable<text, Page> pages
    Page currentPage = undefined
    Page mainPage = undefined
    constant text DEFAULT_PAGE_NAME = "Main"
    InterfaceOptions options = undefined
    text media = undefined

    on create
        DesktopConfiguration desktop = GetDesktopConfiguration()
        desktop:targetFramesPerSecond = 10
        WebConfiguration web = GetWebConfiguration()
        web:framesPerSecondLimit = 10
        
        StackedRowPage page
        page:SetForm(me)
        page:SetName(DEFAULT_PAGE_NAME)
        pages:Add(DEFAULT_PAGE_NAME, page)
        currentPage = page
        mainPage = page
        LightModeOptions options
        me:options = options
    end

    action SetToLightMode
        GameStateManager manager
        LightModeOptions light
        me:options = light
        manager:SetInterfaceOptions(options)
    end

    action SetToDarkMode
        GameStateManager manager
        DarkModeOptions dark
        me:options = dark
        manager:SetInterfaceOptions(options)
    end

    action AddPage(text name) returns Page
        StackedRowPage page
        page:SetName(name)
        page:SetForm(me)
        pages:Add(name, page)
        return page
    end

    action AddPage(Page page)
        page:SetForm(me)
        pages:Add(page:GetName(), page)
    end

    action RemovePage(text name) returns Page
        return pages:RemoveKey(name)
    end

    action GetPage(text name) returns Page
        Page page = pages:GetValue(name)
        return page
    end

    action SetPage(text name)
        Remove(currentPage)

        Page page = pages:GetValue(name)
        Add(page)
        currentPage = page
        GameStateManager manager
        Item2D item = page:GetFirstFocusableItem()
        if item not= undefined
            manager:SetFocus(item)
        end
    end

    action CreateGame
        ManualLayout layout
        SetLayout(layout)

        GameStateManager manager
        

        Layer2D layer = GetCurrentLayer2D()
        layer:EnablePhysics(false)

        Layer3D layer3D = GetCurrentLayer3D()
        layer3D:EnablePhysics(false)

        currentPage = mainPage
        Add(mainPage)
        manager:SetInterfaceOptions(options)

        FormDelayedAssetLoader delayedLoader
        delayedLoader:LoadAssets()

        if not currentPage:HasDefaultFocusOrdering()
            currentPage:CalculateDefaultFocusOrdering()
        end
        Item2D item = currentPage:GetFirstFocusableItem()
        if item not= undefined
            item:Focus()
        end
    end

    /*  This action creates a default Game object for displaying charts and sets this chart
        as the sole display. It is useful for interacting with charts without creating
        a complex game setup.
    */
    action Display
        SetScreenSize(750,1000)
        StartGame()
    end

    /*  This action creates a default Game object for displaying charts and sets this chart
        as the sole display. It is useful for interacting with charts without creating
        a complex game setup.
    */
    action Display(integer width, integer height)
        SetScreenSize(width,height)
        StartGame()
    end

    action GetMainPage returns Page
        return mainPage
    end

    action GetCurrentPage returns Page
        return currentPage
    end

    action PlaySound(text name)
        Audio audio
        File file = undefined
        if GetMediaLocation() not= undefined
            File file2
            file = file2
            file:SetWorkingDirectory(GetMediaLocation())
            file:SetPath(name)
        end
        if file not= undefined
audio:Load(file)
        else
            audio:Load(name)
        end
        audio:Play()
    end
    
    action GetMediaLocation returns text
        return media
    end
    
    action SetMediaLocation(text media)
        me:media = media
    end
end