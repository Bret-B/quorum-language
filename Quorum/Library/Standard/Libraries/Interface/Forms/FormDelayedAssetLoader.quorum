package Libraries.Interface.Forms

use Libraries.Containers.Array
use Libraries.Interface.Controls.Control
use Libraries.System.File
use Libraries.Game.GameStateManager
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.Icon
use Libraries.Game.Graphics.Drawable

/*
    This class is used internally by Forms and its related classes to store requests
    to load graphical assets. Because it isn't possible to load graphical resources
    before the game has started, attempts to load images in a Form must be stored
    and resolved later.
    
    This class is for internal use, and most users will never need to interact with it directly.
    
    Attribute: Author William Allee

*/
shared class FormDelayedAssetLoader

    Array<FormAssetLoadRequest> pendingRequests
    GameStateManager manager
    
    action IsGameAvailable returns boolean
        return manager:GetGame() not= undefined
    end

    action AddRequest(Control control, text fileName, File file)
        FormAssetLoadRequest request
        request:SetControl(control)
        request:SetAssetPath(fileName)
        request:SetAssetFile(file)
        pendingRequests:Add(request)
    end

    action LoadAssets
        repeat until pendingRequests:IsEmpty()
            FormAssetLoadRequest request = pendingRequests:RemoveFromFront()
            Control control = request:GetControl()
            text filePath = request:GetAssetPath()
            File file = request:GetAssetFile()

            // Load each Control, according to its type and the available information.
            if control is Button
                Button button = cast(Button, control)
                Drawable drawable
                if file not= undefined
                    drawable:Load(file)
                elseif filePath not= undefined
                    drawable:Load(filePath)
                end
                button:SetIcon(drawable)

                button:SetPixelWidth(0)
                button:SetPixelHeight(0)
                button:SetVerticalLayoutMode(control:STANDARD)
                button:SetHorizontalLayoutMode(control:MAINTAIN_ASPECT_RATIO)
                button:SetPercentageWidth(drawable:GetWidth() / drawable:GetHeight())

            elseif control is Icon
                Icon icon = cast(Icon, control)
                if file not= undefined
                    icon:Load(file)
                elseif filePath not= undefined
                    icon:Load(filePath)
                end

                icon:SetPercentageWidth(icon:GetWidth() / icon:GetHeight())
            end
        end
    end
end