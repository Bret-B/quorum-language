package Libraries.Interface.Pages

use Libraries.Interface.Forms.Page
use Libraries.Interface.Controls.Button
use Libraries.Interface.Item2D
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Controls.TextBox
use Libraries.Game.Graphics.Label

class FlowLayoutPage is Page
    number itemsPerMaxHeight = 5
    
    on create
        FlowLayout layout
        SetLayout(layout)
    end

    action AddButton(text name) returns Button
        Button button
        button:SetName(name)
        button:SetHorizontalLayoutMode(button:parent:Control:STANDARD)
        button:SetVerticalLayoutMode(button:parent:Control:STANDARD)
        button:SetPercentageWidth(1.0)
        button:SetPercentageHeight(1.0 / itemsPerMaxHeight)

        Add(button)
        return button
    end

    action AddImageButton(text name, text image) returns Button
        Button button = AddButton(name)
        Drawable drawable
        drawable:Load(image)
        button:SetIcon(drawable)
        button:SetFont(undefined)
        return button
    end

    action AddTextBox returns TextBox
        TextBox textBox
        textBox:SetName("Textbox")
        textBox:SetPercentageWidth(1.0)
        textBox:SetPercentageHeight(1.0 / itemsPerMaxHeight)
        return textBox
    end

    action AddLabel(text name, text value) returns Label
        Label label
        //labelCount = labelCount + 1
        label:SetName(name)
        label:SetText(value)
        label:SetFocusable(true)
        label:SetAccessibilityCode(label:parent:Item:CUSTOM)
        label:SetPercentageWidth(1.0)
        label:SetPercentageHeight(1.0 / itemsPerMaxHeight)
        return label
    end

    action RemoveButton(text name) returns Button
        Item2D button = FindControl(name)
        if button not= undefined and button is Button
            Remove(button)
            return cast(Button, button)
        end
        alert("The item " + name + " is not a button. Are you looking for the right item?")
    end

    private action FindControl(text name) returns Item2D
        Array<Item2D> children = GetChildren()
        i = 0
        repeat while i < children:GetSize()
            Item2D control = children:Get(i)
            if control not= undefined and control:GetName() = name
                return control
            end
            i = i + 1
        end
        return undefined
    end

    action GetItemsPerMaxHeight returns number
        return itemsPerMaxHeight
    end

    action SetItemsPerMaxHeight(number items)
        if items < 1
            items = 1
        end
        me:itemsPerMaxHeight = items
    end
end