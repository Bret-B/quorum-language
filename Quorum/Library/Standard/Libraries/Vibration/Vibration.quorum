package Libraries.Vibration

use Libraries.Containers.Array
use Libraries.Vibration.VibrationArray

/*
    The Vibration class can be used to start vibration patterns on devices
    with a vibration motor.

    Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:VibrateForever()
            end
        end
*/
class Vibration

    /*
        This method vibrates according to a preset pattern, which has quick 
        vibrations in rapid succession, repeating for the specified number
        of seconds.
        
        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:QuickPulse(2.5)
            end
        end
    */
    system action QuickPulse(number seconds)

    /*
        This method vibrates according to a preset pattern, which has quick 
        vibrations with short pauses in between, repeating until the Stop()
        action is called.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:QuickPulseForever()
            end
        end
    */
    system action QuickPulseForever()

    /*
        This method vibrates according to a preset pattern, which has slow
        vibrations with relatively long pauses in between, repeating for the
        specified number of seconds.

        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:SlowPulse(2.5)
            end
        end
    */
    system action SlowPulse(number seconds)

    /*
        This method vibrates according to a preset pattern, which has slow
        vibrations with relatively long pauses in between, repeating until
        the Stop() action is called.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:SlowPulseForever()
            end
        end
    */
    system action SlowPulseForever()

    /*
        This method vibrates according to a preset pattern, creating a
        low-intensity vibration with very short pauses, repeating for
        the specified number of seconds.

        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:Rumble(2.5)
            end
        end
    */
    system action Rumble(number seconds)

    /*
        This method vibrates according to a preset pattern, creating a
        low-intensity vibration with very short pauses, repeating until the
        Stop() action is called.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:RumbleForever()
            end
        end
    */
    system action RumbleForever()

    /*
        This method vibrates according to a preset pattern, which has two quick 
        vibrations followed by a long pause and a final vibration.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:KnockOnce()
            end
        end
    */
    system action KnockOnce()

    /*
        This method vibrates according to a preset pattern, which has two quick 
        vibrations followed by a long pause and a final vibration. Repeats the
        pattern for the amount of times specified.

        Attribute: Parameter repetitions The amount of times for the pattern to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:Knock(3)
            end
        end
    */
    system action Knock(integer repetitions)

    /*
        This method vibrates according to a preset pattern, which has two quick 
        vibrations followed by a long pause and a final vibration. Repeats
        the pattern until the Stop() action is called.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:KnockForever()
            end
        end
    */
    system action KnockForever()
 
    /*
        This method turns on the motor, vibrating constantly at maximum intensity
        for the number of seconds specified.

        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:Vibrate(2.5)
            end
        end
    */
    system action Vibrate(number seconds)

    /*
        This method turns on the motor, vibrating constantly at maximum intensity,
        repeating until the Stop() action is called. 

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:VibrateForever()
            end
        end
    */
    system action VibrateForever()

   /*
        This method turns on the motor, vibrating constantly for the number of 
        seconds specified at the given intensity. The intensity is expected to
        be a number between 0.0 and 1.0, representing a percentage of the maximum
        intensity allowed by the device.

        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Parameter intensity The intensity of the vibration, given by
                   a number between 0.0 and 1.0, which represents the percentage
                   of maximum intensity at which to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:Vibrate(2.5, 0.5)
            end
        end
    */
    system action Vibrate(number seconds, number intensity)

    /*
        This method turns on the motor, vibrating constantly at the given intensity, 
        repeating until the Stop() action is called. The intensity is expected to
        be a number between 0.0 and 1.0, representing a percentage of the maximum
        intensity allowed by the device.

        Attribute: Parameter intensity The intensity of the vibration, given by
                   a number between 0.0 and 1.0, which represents the percentage
                   of maximum intensity at which to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:VibrateForever(0.5)
            end
        end
    */
    system action VibrateForever(number intensity)

    /* 
        This method plays a vibration pattern created with a VibrationArray. 

        Attribute: Parameter vibrationArray The pattern to vibrate according to,
                   stored in a VibrationArray object.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Vibration.VibrationArray
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                VibrationArray pattern

                patter:Add(1.5, 0.5)
                pattern:Add(0.5, 0.0)
                pattern:Add(1)

                vibrator:VibrateOnce(pattern)
            end
        end
    */
    system action VibrateOnce(VibrationArray vibrationArray)

    /* 
        This method plays a vibration pattern created with a VibrationArray. 
        Repeats the pattern for the amount of times specified.

        Attribute: Parameter vibrationArray The pattern to vibrate according to,
                   stored in a VibrationArray object.

        Attribute: Parameter repetitions The amount of times for the pattern to play.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Vibration.VibrationArray
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                VibrationArray pattern

                patter:Add(1.5, 0.5)
                pattern:Add(0.5, 0.0)
                pattern:Add(1)

                vibrator:Vibrate(pattern, 5)
            end
        end
    */
    system action Vibrate(VibrationArray vibrationArray, integer repetitions)

     /* 
        This method plays a vibration pattern created with a VibrationArray, repeating
        until the Stop() action is called.

        Attribute: Parameter vibrationArray The pattern to vibrate according to,
                   stored in a VibrationArray object.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Vibration.VibrationArray
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                VibrationArray pattern

                patter:Add(1.5, 0.5)
                pattern:Add(0.5, 0.0)
                pattern:Add(1)

                vibrator:VibrateForever(pattern)
            end
        end
    */
    system action VibrateForever(VibrationArray vibrationArray)

    /* 
        Plays a vibration at the given frequency for the given number of seconds.
        The frequency is measured in Hertz (Hz).

        Attribute: Parameter seconds The number of seconds for the vibration to play.

        Attribute: Parameter frequency The frequency, measured in Hertz (Hz), for the
                   vibration to play at.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:VibrateAtFrequency(2, 2.5)
            end
        end
    */ 
    system action VibrateAtFrequency(number seconds, number frequency)

    /* 
        Plays a vibration at the given frequency, repeating until the Stop() action
        is called. The frequency is measured in Hertz (Hz).

        Attribute: Parameter frequency The frequency, measured in Hertz (Hz), for the
                   vibration to play at.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action BeganTouch(TouchEvent event)
                vibrator:VibrateAtFrequencyForever(2.5)
            end
        end
    */ 
    system action VibrateAtFrequencyForever(number frequency)

    /* 
        Cancels the current vibration.

        Attribute: Example

        use Libraries.Vibration.Vibration
        use Libraries.Game.Game
        use Libraries.Interface.Events.TouchListener
        use Libraries.Interface.Events.TouchEvent

        class Main is Game, TouchListener

            Vibration vibrator

            action Main
                StartGame()
            end

            action CreateGame
                AddTouchListener(me)
            end

            action ContinuedTouch(TouchEvent event)
                // vibrates continously while touching a rectangle area, stops vibrating otherwise

                if (event:GetX() >= 200 and event:GetX() <= 300) and (event:GetY() >= 900 and event:GetY() <= 1600)
                    vibrator:VibrateAtFrequency(10)
                elseif (event:GetX() >= 200 and event:GetX() <= 300) and (event:GetY() >= 200 and event:GetY() <= 900)
                    vibrator:VibrateAtFrequency(2.5)
                else
                    vibrator:Stop()
                end
            end
        end
    */ 
    system action Stop()

end
