package Libraries.Compute.Statistics.Inputs

use Libraries.Containers.Array
use Libraries.Containers.Iterator

/*
    There are many ways in which a statistical test, transform, or calculation could 
    potentially get data from a DataFrame. The Inputs package lists any of these ways. 

    FactorInput specifically is stating that a particular class expects the data to be 
    dummy coded. This means that we are adding a set of columns that indicate group values to 
    be used as a factor. Effectively this means a dependent variable is coded as a column with 
    all groups together and the factor columns indicate levels of an independent variable. 

    Attribute: Author Andreas Stefik
*/
class FactorInput
    Array<integer> factors

    /*
        This action adds a value to the end of the input.

        Attribute: Parameter value The value to be inserted.
    */
    action AddFactor(integer column)
        factors:Add(column)
    end

    /*
        This action gets the item at a given location in an array.


        Attribute: Parameter location The index or location the value is located at. 

        Attribute: Returns The item at the given location.
    */
    action GetFactor(integer index) returns integer
        return factors:Get(index)
    end

    /*
        This action removes an item from an indexed object and returns that item. 

        Attribute: Parameter location The index or location of the item to remove. 

        Attribute: Returns The item that was removed from the indexed object. 
    */
    action RemoveFactorAt(integer index)
        factors:RemoveAt(index)
    end

    /*
        This action removes the first occurrence of an item that is found in the Addable object. 

        Attribute: Parameter value The item to find in the Addable object. 

        Attribute: Returns Returns true if the item was removed and false if it was not removed. 
    */
    action RemoveFactor(integer column) returns boolean
        return factors:Remove(column)
    end

    /*
        This action empty's the list, clearing out all of the items contained within it. 
    */
    action EmptyFactors
        factors:Empty()
    end

    /*
        This action returns a boolean value, true if the container is empty and false if it contains any items. 

        Attribute: Returns Returns true when the container is empty and false when it is not. 
    */
    action IsEmptyFactors returns boolean
        return factors:IsEmpty()
    end

    /*
        This action gets an iterator for the object and returns that iterator. 

        Attribute: Returns Returns the iterator for an object. 
    */
    action GetFactorIterator returns Iterator<integer>
        return factors:GetIterator()
    end

    /*
        This action gets the size of the array.

        Attribute: Return The size of the array. 
    */
    action GetFactorSize returns integer
        return factors:GetSize()
    end
end