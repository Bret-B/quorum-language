package Libraries.Compute.Statistics.Calculations

use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Math
use Libraries.Compute.Statistics.DataFrameColumnCalculation
use Libraries.Compute.Statistics.Calculations.Mean

/*
    This class calculates the variance of a particular DataFrameColumn. The variance
    calculated in this case is the sample variance. More information can be found about
    variance here: https://en.wikipedia.org/wiki/Variance

    Attribute: Author Andreas Stefik

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Compute.Statistics.Calculations.Variance

    //Load a comma separated file
    DataFrame frame
    frame:Load("Data.csv") 
    Variance variance

    //set the mean before using it. Alternatively, we can allow it to calculate for us.
    //The result is received slightly faster if we set it.
    variance:SetMean(17) 
    DataFrameColumn column = frame:GetColumn(0)
    column:Calculate(variance)
    number variance = variance:GetVariance()
*/
class Variance is DataFrameColumnCalculation
    integer size = 0
    number mean = 0
    number variance = 0
    boolean meanSet = false
    boolean population = false

    action Start(DataFrameColumn column) 
        size = column:GetSize() - column:GetUndefinedSize()
        if not meanSet
            Mean meanCalc
            column:Calculate(meanCalc)
            mean = meanCalc:GetMean()
        end
    end

    /*
        This action allows us to manually override the total size
        for the calculation.
    */
    action SetSize(integer size)
        me:size = size
    end
   
    action Add(Number value) 
        if value not= undefined
            Math math
            number num = value:GetValue()
            number n = num - mean
            if population
                n = math:RaiseToPower(n, 2) / (size)
            else
                n = math:RaiseToPower(n, 2) / (size - 1)
            end
            variance = variance + n
        end
    end

    action Add(Integer value) 
        if value not= undefined
            Math math
            number num = value:GetValue()
            number n = num - mean
            if population
                n = math:RaiseToPower(n, 2) / (size)
            else
                n = math:RaiseToPower(n, 2) / (size - 1)
            end
            variance = variance + n
        end
    end

    /*
        This calculation can be used again if Empty is called after using it on a column.
    */
    action Empty
        size = 0
        mean = 0
        variance = 0
        meanSet = false
        population = false
    end

    /*
        Returns the sample variance.
    */
    action GetVariance returns number
        return variance
    end

    /*
        Returns the mean
    */
    action GetMean returns number
        return mean
    end

    /*
        Sets the mean. The variance then uses this value in its calculation.
    */
    action SetMean(number mean)
        me:mean = mean
        meanSet = true
    end

    /*
        Sets the population variance flag, default is sample variance. The variance then uses this value in its calculation.
    */
    action UsePopulation(boolean usepopulation)
        population = true
    end
end