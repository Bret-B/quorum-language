package Libraries.Compute.Calculations

use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Statistics.DataFrameColumnCalculation
use Libraries.Compute.Statistics.Calculations.Mean
use Libraries.Compute.Statistics.Calculations.Variance
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Compute.Vector


/*
    This class calculates the mean of a particular DataFrameColumn. 

    Attribute: Author Andreas Stefik

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Compute.Statistics.Calculations.InterQuartileRange

    //Load a comma separated file
    DataFrame frame
    frame:Load("Data.csv") 
    InterQuartileRange iqr
    DataFrameColumn column = frame:GetColumn(0)
    column:Calculate(iqr)
    number result = iqr:GetInterQuartileRange()
    output result
*/
class InterQuartileRange is DataFrameColumnCalculation
    integer size = 0
    number interQuartileRange = 0
    number median = 0
    number top = 0
    number bottom = 0
    number maximum = 0
    number minimum = 0

    action Start(DataFrameColumn column) 
        size = column:GetSize()
    end

    action Calculate(DataFrameColumn column) 
        if not column:CanConvertToVector()
            return now
        end

        Vector vector = column:ConvertToVector()
        if vector:GetSize() < 3
            return now
        end
        vector:Sort()

        median = GetMedian(vector, 0, vector:GetSize() - 1)
        if vector:GetSize() mod 2 = 0
            integer index = vector:GetSize() / 2
            top = GetMedian(vector, index, vector:GetSize() - 1)
            bottom = GetMedian(vector, 0, index - 1)
        else
            integer index = vector:GetSize() / 2
            top = GetMedian(vector, index + 1, vector:GetSize() - 1)
            bottom = GetMedian(vector, 0, index - 1)
        end

        interQuartileRange = top - bottom
        maximum = vector:Get(vector:GetSize() - 1)
        minimum = vector:Get(0)
    end

    private action GetMedian(Vector vector, integer start, integer finish) returns number
        number median = 0
        integer index = start + ((finish - start) / 2)
        if (finish - start + 1) mod 2 = 0
            number val1 = vector:Get(index)
            number val2 = vector:Get(index + 1)
            median = (val1 + val2) / 2
        else
            median = vector:Get(index)
        end

        return median
    end

    action IsIterable returns boolean
        return false
    end

    /*
        This Calculation can be re-used if the Empty action is called before
        passing it to another column. Otherwise, it retains its data.
    */
    action Empty
        size = 0
        number interQuartileRange = 0
        number median = 0
        number top = 0
        number bottom = 0
    end

    /*
        Returns the sample size for the column.

        Attribute: Returns the sample size
    */
    action GetSize returns integer
        return size
    end

    /*
        Returns the median for the column.

        Attribute: Returns the median
    */
    action GetMedian returns number
        return median
    end

    /*
        Returns the median in the top half of the column.

        Attribute: Returns the median in the top half
    */
    action GetTopMedian returns number
        return top
    end

    /*
        Returns the median in the bottom half of the column.

        Attribute: Returns the median in the bottom half
    */
    action GetBottomMedian returns number
        return bottom
    end

    /*
        Returns the interquartile range, which is the top median - the bottom median.

        Attribute: Returns the interquartile range.
    */
    action GetInterQuartileRange returns number
        return interQuartileRange
    end

    /*
        Returns the max value in the data set.

        Attribute: Returns the max value
    */
    action GetMaximum returns number
        return maximum
    end

    /*
        Returns the min value in the data set.

        Attribute: Returns the min value
    */
    action GetMinimum returns number
        return minimum
    end
end