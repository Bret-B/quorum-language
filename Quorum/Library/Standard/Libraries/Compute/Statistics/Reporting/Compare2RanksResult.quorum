package Libraries.Compute.Statistics.Reporting

use Libraries.Compute.Math
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Containers.Array
use Libraries.Compute.Statistics.Calculations.Summarize
use Libraries.Compute.Statistics.Calculations.Median

/*
    This class represents data that comes back from a CompareRanks calculation.

    Attribute: Author Hannah Williams
*/
class Compare2RanksResult is CompareRanksResult  
    number sample1Median = 0
    number sample2Median = 0

    action SetSamples(Array<DataFrameColumn> samples)
        if samples:GetSize() = 1
            DataFrameColumn sample1 = samples:Get(0)

            Median median
            sample1:Calculate(median)
            sample1Median = median:GetMedian()

        elseif samples:GetSize() = 2
            DataFrameColumn sample1 = samples:Get(0)
            DataFrameColumn sample2 = samples:Get(1)

            Median median1
            sample1:Calculate(median1)
            sample1Median = median1:GetMedian()

            Median median2
            sample2:Calculate(median2)
            sample2Median = median2:GetMedian()
        end
        parent:CompareRanksResult:SetSamples(samples)
    end

    /*
        This action summarizes the result and lists it informally.
    */
    action GetSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()

        text dependence = ""
        if IndependentSamples()
            dependence = "independent"
        else
            dependence = "dependent"
        end

        if GetSamples():GetSize() = 1 
            summary = summary + "A "+ GetFormalTestName() + " was conducted on two "+ dependence + " samples."
        else
            summary = summary + "A " + GetFormalTestName() + " was conducted to compare two " + dependence + " samples."
        end
        if GetFactor() not= ""
            summary = summary + lf + "Factor: " + GetFactor()
        end
       
        text sample1 = ""
        text sample2 = ""
        if GetSamples():GetSize() > 1
            sample1 = GetSamples():Get(0):GetHeader()
            sample2 = GetSamples():Get(1):GetHeader()
            summary = summary + lf + "Columns: " + sample1 + " and " + sample2
            summary = summary + lf + "Median of " + sample1 + ": " + sample1Median
        
            summary = summary + lf + "Median of " + sample2 + ": " + sample2Median
        end

        if IndependentSamples()
            summary = summary + lf + "Statistic (U): " + GetTestStatistic()
        else
            summary = summary + lf + "Statistic (Z): " + GetTestStatistic()
        end

        summary = summary + lf + "Probability: " + GetProbabilityValue()

        summary = summary + lf + "Effect Size (" + GetEffectSizeName() + "): " + GetEffectSize()

        return summary
    end

    /*
        This action summarizes the result and places it into formal academic language, in 
        APA format.

        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()
        
        if GetSamples():GetSize() = 1 
            text sample1 = GetSamples():Get(0):GetHeader()
            if GetFactor() = ""
                summary = summary + "A " + GetFormalTestName() + " was conducted on one sample " + sample1 + "."
            else
                summary = summary + "A " + GetFormalTestName() + " was conducted on " + GetFactor() + " on one sample " + sample1 + "."
            end

            text m1 = GetFormat():FormatTestStatistic(sample1Median)
            text m2 = GetFormat():FormatTestStatistic(0)
            if sample1Median > 0
                summary = summary + lf + sample1 + " had a higher overall median (Mdn = " + m1 + ") compared to "
                    + " (Mdn = " + m2 +")"
            elseif sample1Median < 0
                summary = summary + lf + sample1 + " had a lower overall median (Mdn = " + m1 + ") compared to "
                    + " (Mdn = " + m2 +")"
            else
                 summary = summary + lf + sample1 + " had an equal median (Mdn = " + m1 + ") compared to "
                    + " (Mdn = " + m2 +")"             
            end
            if GetProbabilityValue() <= GetSignificanceLevel()
                summary = summary + lf + "The difference was indicated to be statistically significant"
            else
                summary = summary + lf + "The difference was indicated not to be statistically significant"
            end
        elseif GetSamples():GetSize() = 2
            text dependence = ""
            if IndependentSamples()
                dependence = "independent"
            else
                dependence = "dependent"
            end

            text sample1 = GetSamples():Get(0):GetHeader()
            text sample2 = GetSamples():Get(1):GetHeader()
            if GetFactor() = ""
                summary = summary + "A " + GetFormalTestName() + " was conducted to compare two " + dependence 
                                  + " samples, " + sample1 + " and " + sample2 + "."
            else
                summary = summary + "A " + GetFormalTestName() + " was conducted on " + GetFactor() 
                                  + " to compare two "+dependence+" samples, " + sample1 + " and " + sample2 + "."
            end
    
            text m1 = GetFormat():FormatTestStatistic(sample1Median)
            text m2 = GetFormat():FormatTestStatistic(sample2Median)
            if sample1Median > sample2Median
                summary = summary + lf + sample1 + " had a higher overall median (Mdn = " + m1 + ") compared to "
                    + sample2 + " (Mdn = " + m2 +")"
            elseif sample1Median < sample2Median
                summary = summary + lf + sample2 + " had a higher overall median (Mdn = " + m2 + ") compared to "
                    + sample1 + " (Mdn = " + m1 + ")"
            else
                 summary = summary + lf + sample1 + " had an equal median (Mdn = " + m1 + ") compared to "
                    + sample2 + " (Mdn = " + m2 + ")"               
            end
            if GetProbabilityValue() <= GetSignificanceLevel()
                summary = summary + lf + "The difference was indicated to be statistically significant"
            else
                summary = summary + lf + "The difference was indicated not to be statistically significant"
            end
        end
        summary = summary + ", " + GetFormalNumericalResult() + "."

        return summary
    end

    action GetFormalNumericalResult() returns text
        text summary = ""

        if GetSamples():GetSize() > 0
            if IndependentSamples()
                summary = summary + "U(n1 = " + cast(integer, GetSamples():Get(0):GetSize())
                                  + ", n2 = " + cast(integer, GetSamples():Get(1):GetSize())
                                  + ") = " + GetFormat():FormatTestStatistic(GetTestStatistic())
            else
                summary = summary + "Z = " + GetFormat():FormatTestStatistic(GetTestStatistic())
            end
            number p = GetProbabilityValue()
            if p < GetFormat():PRECISION_LIMIT
                summary = summary + ", p < " + GetFormat():FormatProbabilityValue(p)
            else
                summary = summary + ", p = " + GetFormat():FormatProbabilityValue(p)
            end
            summary = summary + ", r = " + GetFormat():FormatCorrelation(GetEffectSize())
        end
        return summary
    end
end