package Libraries.Compute.Statistics.Reporting

use Libraries.Compute.Math

/*
    This class represents data that comes back from a bartlett's sphericity test 
    in CheckReducibility

    Attribute: Author Hannah Williams
*/
class CheckReducibilityResult is StatisticalTestResult
    Math math
    integer numberOfVariables = 0

    action GetNumberOfVariables returns integer
        return numberOfVariables
    end

    action SetNumberOfVariables(integer numberOfVariables)
        me:numberOfVariables = numberOfVariables
    end

    action GetNullHypothesis returns text
        return "The variables are not correlated"
    end

    action GetAlternativeHypothesis returns text
        return "The variables are correlated"
    end

    /*
        This action summarizes the result and lists it informally.
    */
    action GetSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()
        integer digits = GetFormat():GetSignificantDigits()

        summary = summary + "A "+ GetFormalTestName() + " was conducted across " + numberOfVariables + " variables."

        summary = summary + lf + "Statistic (χ2): " + math:Round(GetTestStatistic(), digits)

        summary = summary + lf + "Degrees Of Freedom: " + math:Round(GetDegreesOfFreedom(), digits)

        summary = summary + lf + "Probability: " + math:Round(GetProbabilityValue(), digits)

        if GetEffectSizeName() not= ""
            summary = summary + lf + "Effect Size (" + GetEffectSizeName() + "): " + math:Round(GetEffectSize(), digits)
        end

        return summary
    end

    /*
        This action summarizes the result and places it into formal academic language, in APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()

        summary = summary + "A "+ GetFormalTestName() + " was conducted across " + numberOfVariables + " variables"

        if GetProbabilityValue() <= GetSignificanceLevel()
            //P-value ≤ α: (Reject H0)
            summary = summary + lf + "The result was significant, indicating that the data is suitable for factor analysis"
        else
            //P-value > α: (Fail to reject H0)
            summary = summary + lf + "The result was not significant, indicating that the data is not suitable for factor analysis"
        end

        summary = summary + lf + GetFormalNumericalResult()

        return summary
    end

    /*
        This action returns the formal numrical result in APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalNumericalResult() returns text
        text summary = ""
        summary = summary + "χ2("                
            + GetFormat():FormatDegreesOfFreedom(GetDegreesOfFreedom()) + ") = " 
            + GetFormat():FormatTestStatistic(GetTestStatistic())

        number p = GetProbabilityValue()
        if p < GetFormat():PRECISION_LIMIT
            summary = summary + ", p < " + GetFormat():FormatProbabilityValue(p)
        else
            summary = summary + ", p = " + GetFormat():FormatProbabilityValue(p)
        end
        return summary
    end
end