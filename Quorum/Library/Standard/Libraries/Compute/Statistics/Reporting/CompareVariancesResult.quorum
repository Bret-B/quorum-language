package Libraries.Compute.Statistics.Reporting

use Libraries.Containers.Array
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Columns.TextColumn
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Compute.Math

/*
    This class represents data that comes back from a CompareVariances calculation.

    Attribute: Author Hannah Williams
*/
class CompareVariancesResult is CompareMeansResult
    private boolean useFApproximation = false        
    private boolean useX2Approximation = true

    // Used in multivariate tests
    action UseFApproximation returns boolean
        return useFApproximation
    end

    action UseFApproximation(boolean useFApproximation)
        me:useFApproximation = useFApproximation
        me:useX2Approximation = not useFApproximation
    end

    // Used in multivariate tests
    action UseX2Approximation returns boolean
        return useX2Approximation
    end

    action UseX2Approximation(boolean useX2Approximation)
        me:useX2Approximation = useX2Approximation
        me:useFApproximation = not useX2Approximation
    end

    action GetLowerBoundCorrection returns number
        if GetSources():GetSize() > 0
            if GetInformation():GetValue(GetSources():Get(0)):HasKey("lb")
                return GetInformation():GetValue(GetSources():Get(0)):GetValue("lb")
            end
        end
        return 0
    end

    action GetGreenhouseGeisserCorrection returns number
        if GetSources():GetSize() > 0
            if GetInformation():GetValue(GetSources():Get(0)):HasKey("gg")
                return GetInformation():GetValue(GetSources():Get(0)):GetValue("gg")
            end
        end
        return 0
    end

    action GetHuynhFeldtCorrection returns number
        if GetSources():GetSize() > 0
            if GetInformation():GetValue(GetSources():Get(0)):HasKey("hf")
                return GetInformation():GetValue(GetSources():Get(0)):GetValue("hf")
            end
        end
        return 0
    end

    action GetCorrection returns number
        if IsRepeated()
            if GetProbabilityValue() <= GetSignificanceLevel() // significant result
                if GetGreenhouseGeisserCorrection() > 0.75
                    return GetHuynhFeldtCorrection()
                else
                    return GetGreenhouseGeisserCorrection()
                end
            else
                return 1.0
            end
        else
            return 0 // Needs to return correction degrees of freedom for levene's test
        end
    end

    action GetCorrectionName returns text
        if IsRepeated()
            if GetProbabilityValue() <= GetSignificanceLevel() // significant result
                if GetGreenhouseGeisserCorrection() > 0.75
                    return "Huynh-Feldt"
                else
                    return "Greenhouse-Geisser"
                end
            else
                return ""
            end
        else
            return "" // Needs to return correction degrees of freedom for levene's test?
        end
    end

    /*
        This action summarizes the result and lists it informally.
    */
    action GetSummary returns text
        CompareVariancesSummary summary
        summary:SetResult(me)
        return summary:GetSummary()
    end

    /*
        This action summarizes the result and places it into formal academic language, in 
        APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalSummary returns text
        CompareVariancesSummary summary
        summary:SetResult(me)
        return summary:GetFormalSummary()
    end

    /*
        This action summarizes the result and places it into formal academic language, in APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalNumericalResult() returns text
        CompareVariancesSummary summary
        summary:SetResult(me)
        return summary:GetFormalNumericalResult()
    end

    /* This action summarizes the result and puts it in a frame. */
    action GetSummaryDataFrame returns DataFrame
        CompareVariancesSummary summary
        summary:SetResult(me)
        return summary:GetSummaryDataFrame()
    end
end