package Libraries.Compute.Statistics.Reporting

use Libraries.Compute.Math

/*
    This class represents data that comes back from a kmo test 
    in CheckReducibilityStrength

    Attribute: Author Hannah Williams
*/
class CheckReducibilityStrengthResult is StatisticalTestResult
    Math math
    integer numberOfVariables = 0

    action GetNumberOfVariables returns integer
        return numberOfVariables
    end

    action SetNumberOfVariables(integer numberOfVariables)
        me:numberOfVariables = numberOfVariables
    end

    action GetNullHypothesis returns text
        return ""
    end

    action GetAlternativeHypothesis returns text
        return ""
    end

    /*
        This action summarizes the result and lists it informally.
    */
    action GetSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()
        integer digits = GetFormat():GetSignificantDigits()

        summary = summary + "A "+ GetFormalTestName() + " was conducted across " + numberOfVariables + " variables."

        summary = summary + lf + "Statistic (KMO): " + math:Round(GetTestStatistic(), digits)

        summary = summary + lf + "Strength: "

        // See: https://www.analysisinn.com/post/kmo-and-bartlett-s-test-of-sphericity/
        if GetTestStatistic() < 0.5
            summary = summary + "Unacceptable"
        elseif GetTestStatistic() < 0.6
            summary = summary + "Terrible"
        elseif GetTestStatistic() < 0.7
            summary = summary + "Mediocre"
        elseif GetTestStatistic() < 0.8
            summary = summary + "Average"
        elseif GetTestStatistic() < 0.9
            summary = summary + "Meritorious"
        elseif GetTestStatistic() <= 1.0
            summary = summary + "Marvelous"
        end

        if GetEffectSizeName() not= ""
            summary = summary + lf + "Effect Size (" + GetEffectSizeName() + "): " + math:Round(GetEffectSize(), digits)
        end

        return summary
    end

    /*
        This action summarizes the result and places it into formal academic language, in APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalSummary returns text
        text summary = ""
        text lf = summary:GetLineFeed()

        summary = summary + "A "+ GetFormalTestName() + " was conducted across " + numberOfVariables + " variables"

        // See: https://www.analysisinn.com/post/kmo-and-bartlett-s-test-of-sphericity/
        if GetTestStatistic() < 0.5
            summary = summary + lf + "The result was unacceptable, indicating that the data is not suitable for factor analysis"
        elseif GetTestStatistic() < 0.6
            summary = summary + lf + "The result was terrible, indicating the data may not be suitable for factor analysis"
        elseif GetTestStatistic() < 0.7
            summary = summary + lf + "The result was mediocre, indicating the data may not be suitable for factor analysis"
        elseif GetTestStatistic() < 0.8
            summary = summary + lf + "The result was average, indicating the data may or may not be suitable for factor analysis"
        elseif GetTestStatistic() < 0.9
            summary = summary + lf + "The result was meritorious, indicating the data may be suitable for factor analysis"
        elseif GetTestStatistic() <= 1.0
            summary = summary + lf + "The result was marvelous, indicating the data is suitable for factor analysis"
        end

        summary = summary + lf + GetFormalNumericalResult()

        return summary
    end

    /*
        This action returns the formal numrical result in APA format.
        For more information: https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf
    */
    action GetFormalNumericalResult() returns text
        text summary = ""

        summary = summary + "KMO = " + GetFormat():FormatTestStatistic(GetTestStatistic())

        return summary
    end
end