package Libraries.Compute.Statistics.Charts

use Libraries.Compute.Statistics.DataFrameChartCreator
use Libraries.Compute.Statistics.Inputs.ColumnInput
use Libraries.Compute.Statistics.Inputs.FactorInput
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Statistics.Columns.all
use Libraries.Interface.Controls.Charts.all
use Libraries.Containers.Array
use Libraries.Containers.HashTable
use Libraries.Compute.Statistics.Calculations.Summarize
use Libraries.Interface.Controls.Charts.Graphics.BarGroup
use Libraries.Interface.Controls.Charts.Graphics.Bar

/*
    This class is used to create a Bar Chart from columns of data in a DataFrame.
    There are four ways to make a bar chart from the data frame using this class:
        1. One factor or one text-column: Each unique item will have its own bar using its frequency as the value.
        2. One or more numerical columns without a factor: Each column will have its own bar using its sum as the value.
        3. One or more numerical columns with a factor: The values associated with each factor will be in one bar group, containing a bar for each column.
        4. One column with two factors: The values associated with both factors will get one bar, they will be grouped by factor1 and colored by factor2.

    Attribute: Authors Andreas Stefik, Gabriel Contreras, Hannah Williams, Tim Kluthe

    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Compute.Statistics.Charts.BarChartCreator

    DataFrame frame
    frame:Load("Data/Data.csv")

    //Create a Bar Chart and set some properties
    BarChartCreator creator
    creator:AddColumn(4)
    creator:AddFactor(0)
    creator:SetXSteps(4)

    Chart chart = frame:CreateChart(creator)
    chart:Display(2000,1000)
*/
class BarChartCreator is DataFrameChartCreator, ColumnInput, FactorInput

    action Create(DataFrame frame) returns Chart
        integer columns = GetColumnSize()
        integer factors = GetFactorSize()

        if columns = 1 and factors = 0
            DataFrameColumn column = frame:GetColumn(GetColumn(0))
            if column:IsNumberColumn()
                return CreateChartBySum(frame) // Create bars by sum of column
            else
                return CreateChartByCount(column) // Create bars by count
            end

        elseif columns > 1 and factors = 0
            return CreateChartBySum(frame) // Create bars by sum of each column

        elseif columns = 0 and factors = 1
            DataFrameColumn factor = frame:GetColumn(GetFactor(0))
            return CreateChartByCount(factor) // Create bars by count

        elseif columns > 0 and factors = 1
            DataFrameColumn factor = frame:GetColumn(GetFactor(0))
            if factor:IsUndefined() // If the factor is undefined don't use a factor
                return CreateChartBySum(frame)
            else
                return CreateChart(frame)
            end

        elseif columns = 1 and factors = 2
            //Make a copy of the frame so it can be sorted without altering the original
            DataFrameColumn factor1 = frame:GetColumn(GetFactor(0))
            DataFrameColumn factor2 = frame:GetColumn(GetFactor(1))
            DataFrameColumn column = frame:GetColumn(GetColumn(0))
            return CreateChart(factor1, factor2, column)

        else
            alert("BarChartCreator does not support the number of column/factors that were selected")
        end
        return undefined
    end

    private action CreateChartByCount(DataFrameColumn column) returns BarChart
        BarChart chart

        boolean dateFactor = false
        boolean numericalFactor = false
        HashTable<text, integer> hash

        Array <Series> seriesList
        Series series
        series:SetName(column:GetHeader()) 

        chart:SetTitle(column:GetHeader())
        chart:SetXAxisTitle(column:GetHeader())
        chart:SetYAxisTitle("Count")       

        Array <text> groupNames 
        if column:IsDateTimeColumn()
            dateFactor = true
            DateTimeColumn dates = cast(DateTimeColumn, column:Copy(true, true))
            integer i = 0 
            repeat while i < dates:GetSize()
                if not dates:IsUndefined(i)
                    if not hash:HasKey(dates:GetAsText(i))
                        hash:Add(dates:GetAsText(i), 0)
                        groupNames:Add(dates:GetAsText(i))
                    end
                end
                i = i + 1
            end
        else
            if column:IsNumberColumn()
                numericalFactor = true
            end
            DataFrameColumn labels = column:Copy(true, true)
            integer i = 0 
            repeat while i < labels:GetSize()
                if not labels:IsUndefined(i)
                    if not hash:HasKey(labels:GetAsText(i))
                        hash:Add(labels:GetAsText(i), 0)
                        groupNames:Add(labels:GetAsText(i))
                    end
                end
                i = i + 1
            end
        end

        i = 0 
        repeat while i < column:GetSize()
            if not column:IsUndefined(i)
                if hash:HasKey(column:GetAsText(i))
                    hash:Add(column:GetAsText(i), hash:GetValue(column:GetAsText(i)) + 1)
                end
            end
            i = i + 1
        end

        integer yMin = 0
        integer yMax = 0

        i = 0 
        repeat while i < groupNames:GetSize()
            text name = groupNames:Get(i)
            integer value = hash:GetValue(groupNames:Get(i))
            BarGroup group
            group:SetName(name)
            Bar bar
            bar:SetName(name)
            bar:SetValue(value)
            group:AddBar(bar)

            series:AddItem(bar)
            chart:AddBarGroup(group)

            if value > yMax
                yMax = value
            end
            if value < yMin
                yMin = value
            end
            i = i + 1
        end

        seriesList:Add(series)
       
        SetScale(chart, yMin, yMax, 0, groupNames:GetSize())
        chart:OverrideXLabelsWithText(groupNames)
        chart:SetFactorList(groupNames)
        chart:SetSeriesList(seriesList)
        chart:GetHorizontalPanel():NumericalOverrideLabels(numericalFactor)
        return chart
    end

    action CreateChartBySum(DataFrame frame) returns Chart
        BarChart chart
        integer columns = GetColumnSize()

        chart:SetYAxisTitle("Total")
        chart:SetXAxisTitle("Group")

        Array<text> groupNames
        HashTable<text, Series> seriesFactor
        HashTable<text, BarGroup> groupFactor
        boolean numericalGroupName = false

        number yMax = 0
        number yMin = 0

        integer i = 0
        repeat while i < columns
            DataFrameColumn column = frame:GetColumn(GetColumn(i))
            if not column:IsNumberColumn()
                alert("BarChartCreator does not support multiple columns when a text column is used. Text columns can be used alone or used as a factor.")
                return undefined
            end

            Summarize sum
            sum:Calculate(column)
            if sum:GetSum() > yMax
                yMax = sum:GetSum()
            end

            if sum:GetSum() < yMin
                yMin = sum:GetSum()
            end

            Bar bar
            bar:SetValue(sum:GetSum())
            bar:SetName(column:GetHeader())

            groupNames:Add(column:GetHeader())            
            if not seriesFactor:HasKey(column:GetHeader())
                Series series
                series:SetName(column:GetHeader())
                series:AddItem(bar)
                bar:SetSeries(series)
                seriesFactor:Add(column:GetHeader(), series)
            end
            if not groupFactor:HasKey(column:GetHeader())
                BarGroup group
                group:SetName(column:GetHeader())
                group:AddBar(bar)
                groupFactor:Add(column:GetHeader(), group)
            end
            i = i + 1
        end

        // Add the groups and series
        Array <Series> seriesList
        i = 0
        repeat while i < groupNames:GetSize()
            seriesList:Add(seriesFactor:GetValue(groupNames:Get(i)))
            chart:AddBarGroup(groupFactor:GetValue(groupNames:Get(i)))
            i = i + 1
        end

        SetScale(chart, yMin, yMax, 0, groupNames:GetSize())
        chart:OverrideXLabelsWithText(groupNames)
        chart:SetSeriesList(seriesList)
        chart:GetHorizontalPanel():NumericalOverrideLabels(numericalGroupName)
        return chart
    end

    private action CreateChart(DataFrame frame) returns BarChart
        BarChart chart
        integer columns = GetColumnSize()
        
        number max = 0.0
        number min = 0.0

        HashTable<text, BarGroup> groupFactor
        HashTable<text, Series> seriesFactor
        HashTable<text, Bar> barFactor

        boolean dateFactor = false
        boolean numericalFactor = false

        DataFrameColumn factor = frame:GetColumn(GetFactor(0))
        if columns = 1
            chart:SetYAxisTitle(frame:GetColumn(GetColumn(0)):GetHeader())
        else
            chart:SetYAxisTitle("Total")
        end
        chart:SetXAxisTitle(factor:GetHeader())

        Array <text> groupNames 
        if factor:IsDateTimeColumn()
            dateFactor = true
            DateTimeColumn dates = cast(DateTimeColumn, factor:Copy(true, true))
            integer i = 0 
            repeat while i < dates:GetSize()
                if not dates:IsUndefined(i)
                    if not groupFactor:HasKey(dates:GetAsText(i))
                        BarGroup group
                        group:SetName(dates:GetAsText(i))
                        groupNames:Add(dates:GetAsText(i))
                        groupFactor:Add(dates:GetAsText(i), group)
                    end
                end
                i = i + 1
            end
        else
            if factor:IsNumberColumn()
                numericalFactor = true
            end
            DataFrameColumn labels = factor:Copy(true, true)
            integer i = 0 
            repeat while i < labels:GetSize()
                if not labels:IsUndefined(i)
                    if not groupFactor:HasKey(labels:GetAsText(i))
                        BarGroup group
                        group:SetName(labels:GetAsText(i))
                        groupNames:Add(labels:GetAsText(i))
                        groupFactor:Add(labels:GetAsText(i), group)
                    end
                end
                i = i + 1
            end
        end

        Array<text> seriesNames
        i = 0
        repeat while i < columns
            DataFrameColumn column = frame:GetColumn(GetColumn(i))
            if not column:IsNumberColumn()
                alert("BarChartCreator does not support nonnumerical columns used with factors.")
                return undefined
            end
            if(not seriesFactor:HasKey(column:GetHeader()))
                Series series
                seriesNames:Add(column:GetHeader())
                series:SetName(column:GetHeader())
                seriesFactor:Add(column:GetHeader(), series)
            end
    
            //make chart
            number valueForName = 0.0
            integer j = 0
            repeat while j < column:GetSize()
                if not column:IsUndefined(j) and not factor:IsUndefined(j)
                    valueForName = column:GetAsNumber(j)
    
                    text barKey = factor:GetAsText(j) + " " + column:GetHeader()
                    if not barFactor:HasKey(barKey)
                        Bar bar
                        bar:SetName(barKey)
                        bar:SetValue(valueForName)
                        barFactor:Add(barKey, bar)
                        if(groupFactor:HasKey(factor:GetAsText(j)))
                            groupFactor:GetValue(factor:GetAsText(j)):AddBar(bar)
                        end
                        if(seriesFactor:HasKey(column:GetHeader()))
                            seriesFactor:GetValue(column:GetHeader()):AddItem(bar)
                            bar:SetSeries(seriesFactor:GetValue(column:GetHeader()))
                        end
                    else
                        valueForName = valueForName + barFactor:GetValue(barKey):GetValue()
                        barFactor:GetValue(barKey):SetValue(valueForName)
                    end
                    if valueForName > max
                        max = valueForName
                    end
                    if valueForName < min
                        min = valueForName
                    end
                end
                j = j + 1
            end
            i = i + 1
        end

        // Sort the bars within each group to match series legend display
        Array<text> groupKeyArray = groupFactor:CopyToKeyArray()
        i = 0
        repeat while i < groupKeyArray:GetSize()
            BarGroup group
            text key = groupKeyArray:Get(i)
            group:SetName(key)
            integer j = 0
            repeat while j < seriesNames:GetSize()
                text barKey = groupKeyArray:Get(i) + " " + seriesNames:Get(j)
                //if the bar is undefined, it cannot go in.
                Bar bar = barFactor:GetValue(barKey)
                if bar not= undefined
                    group:AddBar(bar)
                end
                j = j + 1
            end

            Array<Bar> bars = group:GetBars()
            if bars not= undefined and not bars:IsEmpty()
                groupFactor:Set(key, group)
            else 
                groupFactor:RemoveAllKeys(key) //there's no key, something was wrong like blank entries
            end
            
            i = i + 1
        end

        // Add the groups, if there's no group for the name, remove it afterward
        Array<text> removedNames
        i = 0
        repeat while i < groupNames:GetSize()
            BarGroup group = groupFactor:GetValue(groupNames:Get(i))
            if group not= undefined
                chart:AddBarGroup(group)
            else
                removedNames:Add(groupNames:Get(i))
            end
            i = i + 1
        end  

        i = 0
        repeat while i < removedNames:GetSize()
            groupNames:RemoveAll(removedNames:Get(i))
            i = i + 1
        end  

        // Add the series
        Array <Series> seriesList
        i = 0
        repeat while i < seriesNames:GetSize()
            seriesList:Add(seriesFactor:GetValue(seriesNames:Get(i)))
            i = i + 1
        end

        SetScale(chart, min, max, 0, groupNames:GetSize())
        chart:OverrideXLabelsWithText(groupNames)
        chart:SetFactorList(groupNames)
        chart:SetSeriesList(seriesList)
        chart:GetHorizontalPanel():NumericalOverrideLabels(numericalFactor)
        return chart
    end

    private action CreateChart(DataFrameColumn factor1, DataFrameColumn factor2, DataFrameColumn column) returns BarChart
        BarChart chart
        if not column:IsNumberColumn()
            alert("BarChartCreator does not support nonnumerical columns used with factors.")
            return undefined
        end
        
        chart:SetLegendTitle(factor2:GetHeader())
        chart:SetXAxisTitle(factor1:GetHeader())
        chart:SetYAxisTitle(column:GetHeader())

        HashTable<text, BarGroup> groupFactor
        HashTable<text, Series> seriesFactor
        HashTable<text, Bar> barFactor

        boolean dateFactor1 = false
        boolean numericalFactor1 = false
        boolean dateFactor2 = false
        boolean numericalFactor2 = false
        number max = 0
        number min = 0

        Array <text> groupNames 
        if factor1:IsDateTimeColumn()
            dateFactor1 = true
            DateTimeColumn dates = cast(DateTimeColumn, factor1:Copy(true, true))
            integer i = 0 
            repeat while i < dates:GetSize()
                if not dates:IsUndefined(i)
                    if not groupFactor:HasKey(dates:GetAsText(i))
                        BarGroup group
                        group:SetName(dates:GetAsText(i))
                        groupNames:Add(dates:GetAsText(i))
                        groupFactor:Add(dates:GetAsText(i), group)
                    end
                end
                i = i + 1
            end
        else
            if factor1:IsNumberColumn()
                numericalFactor1 = true
            end
            DataFrameColumn labels = factor1:Copy(true, true)
            integer i = 0 
            repeat while i < labels:GetSize()
                if not labels:IsUndefined(i)
                    if not groupFactor:HasKey(labels:GetAsText(i))
                        BarGroup group
                        group:SetName(labels:GetAsText(i))
                        groupNames:Add(labels:GetAsText(i))
                        groupFactor:Add(labels:GetAsText(i), group)
                    end
                end
                i = i + 1
            end
        end

        Array <text> seriesNames 
        if factor2:IsDateTimeColumn()
            dateFactor2 = true
            DateTimeColumn dates = cast(DateTimeColumn, factor2:Copy(true, true))
            integer i = 0 
            repeat while i < dates:GetSize()
                if not dates:IsUndefined(i)
                    if not seriesFactor:HasKey(dates:GetAsText(i))
                        Series series
                        series:SetName(dates:GetAsText(i))
                        seriesNames:Add(dates:GetAsText(i))
                        seriesFactor:Add(dates:GetAsText(i), series)
                    end
                end
                i = i + 1
            end
        else
            if factor2:IsNumberColumn()
                numericalFactor2 = true
            end
            DataFrameColumn labels = factor2:Copy(true, true)
            integer i = 0 
            repeat while i < labels:GetSize()
                if not labels:IsUndefined(i)
                    if not seriesFactor:HasKey(labels:GetAsText(i))
                        Series series
                        series:SetName(labels:GetAsText(i))
                        seriesNames:Add(labels:GetAsText(i))
                        seriesFactor:Add(labels:GetAsText(i), series)
                    end
                end
                i = i + 1
            end
        end

        // Create all bars (even the ones that will be empty)
        // This is necessary to ensure correct data display as well as uniformity when the user customizes or navigates the chart.
        i = 0
        repeat while i < groupNames:GetSize()
            j = 0
            repeat while j < seriesNames:GetSize()  
                text name = groupNames:Get(i)+" "+seriesNames:Get(j)
                if not barFactor:HasKey(name)
                    Bar innerBar
                    innerBar:SetName(seriesNames:Get(j))
                    innerBar:SetValue(0)
                    barFactor:Add(name, innerBar)
                    if groupFactor:HasKey(groupNames:Get(i))
                        groupFactor:GetValue(groupNames:Get(i)):AddBar(innerBar)
                    end   
                    if seriesFactor:HasKey(seriesNames:Get(j))
                        seriesFactor:GetValue(seriesNames:Get(j)):AddItem(innerBar)
                        innerBar:SetSeries(seriesFactor:GetValue(seriesNames:Get(j)))
                    end
                end
                j = j + 1
            end 
            i = i + 1
        end         

        i = 0
        repeat while i < column:GetSize()
            if not column:IsUndefined(i) and not factor1:IsUndefined(i) and not factor2:IsUndefined(i)
                text name = factor1:GetAsText(i)+" "+factor2:GetAsText(i)
                number valueForName = column:GetAsNumber(i)
                if barFactor:HasKey(name)
                    number newValue = barFactor:GetValue(name):GetValue() + valueForName
                    barFactor:GetValue(name):SetValue(newValue)

                    if newValue > max
                        max = newValue
                    end

                    if newValue < min
                        min = newValue
                    end
                end 
            end
            
            i = i + 1
        end

        // Add the groups
        i = 0
        repeat while i < groupNames:GetSize()
            chart:AddBarGroup(groupFactor:GetValue(groupNames:Get(i)))
            i = i + 1
        end

        // Add the series
        Array <Series> seriesList
        i = 0
        repeat while i < seriesNames:GetSize()
            seriesList:Add(seriesFactor:GetValue(seriesNames:Get(i)))
            i = i + 1
        end

        SetScale(chart, min, max, 0, groupNames:GetSize())
        chart:OverrideXLabelsWithText(groupNames)
        chart:SetFactorList(groupNames)
        chart:SetSeriesList(seriesList)
        chart:GetHorizontalPanel():NumericalOverrideLabels(numericalFactor1)
        return chart
    end

    private action SetScale(BarChart chart, number ymin, number ymax, number xmin, number xmax)
        chart:GetVerticalPanel():SetMinimum(ymin)
        chart:GetVerticalPanel():SetMaximum(ymax)
        chart:GetHorizontalPanel():SetMinimum(xmin)
        chart:GetHorizontalPanel():SetMaximum(xmax)
    end
    
end