package Libraries.Compute.Statistics.Charts

use Libraries.Containers.Array
use Libraries.Compute.Statistics.DataFrameChartCreator
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Matrix
use Libraries.Compute.MatrixTransform.EigenDecomposition
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Compute.Statistics.Inputs.ColumnInput
use Libraries.Compute.Statistics.Inputs.FactorInput
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Charts.LineChart
use Libraries.Compute.Vector


/*
    This class is used to create a Scree Plot Chart from a DataFrame. The class contains only a column
    selection, which indicates the elements to include in the scree plot.

    Attribute: Author Andreas Stefik
    Attribute: Example

    use Libraries.Compute.Statistics.DataFrame
    use Libraries.Compute.Statistics.Charts.LineChartCreator

    //Create a Scree Plot and set some properties
    DataFrame frame
    frame:Load("Data/Data.csv")

    ScreePlotCreator creator
    creator:AddColumn(1)
    creator:AddColumn(2)
    Chart chart = frame:CreateChart(creator)

    chart:SetTitle("My Scree Plot")
    chart:Display(1000, 750)
*/
class ScreePlotCreator is DataFrameChartCreator, ColumnInput, FactorInput
   
    action Create(DataFrame frame) returns Chart
        //If there are no factors to map to, just use id (row) as factor
        if GetColumnSize() > 0 and GetFactorSize() = 0
            return CalculateScreePlot(frame)
        else
            alert("ScreePlotCreator does not support the number of column/factors that were selected.")
        end

        return undefined
    end

    private action CalculateScreePlot(DataFrame frame) returns Chart
        Matrix matrix = frame:CorrelationMatrix()
        EigenDecomposition decomp
        decomp:Calculate(matrix)

        Vector array = decomp:GetEigenvalues()
        DataFrame result
        NumberColumn values
        values:SetHeader("Eigenvalue")
        NumberColumn eigen
        eigen:SetHeader("Size")

        result:AddColumn(values)
        result:AddColumn(eigen)

        i = 0
        repeat while i < array:GetSize()
            number value = array:Get(i)
            values:Add(i + 1)
            eigen:Add(value)

            i = i + 1
        end

        result:SetSelectedFactors("Eigenvalue")
        result:SetSelectedColumns("Size")
        Chart chart = result:LineChart()
        return chart
    end
end