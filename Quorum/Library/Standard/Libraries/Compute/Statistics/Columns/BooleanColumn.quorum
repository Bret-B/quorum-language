package Libraries.Compute.Statistics.Columns

use Libraries.Containers.Array
use Libraries.Compute.Statistics.DataFrameColumnCalculation
use Libraries.Compute.Statistics.DataFrameColumn

/*
    BooleanColumn is a DataFrameColumn that contains Number objects. These objects can be undefined
    or not. 

    Attribute: Author Andreas Stefik
*/
class BooleanColumn is DataFrameColumn
    /* This is the new system, which is rows. */
    Array<Boolean> rows

    action Add(text value)
        if value = undefined
            rows:Add(undefined)
            return now
        end

        check 
            boolean bool = cast(boolean, value)
            rows:Add(bool)
        detect e
            rows:Add(undefined) //add a missing value
        end
    end

    action SendValueTo(integer index, DataFrameColumnCalculation calculation)
        Boolean int = rows:Get(index)
        calculation:Add(int)
    end

    action Get(integer row) returns Boolean
        return rows:Get(row)
    end

    action GetSize returns integer
        return rows:GetSize()
    end

    action Swap(integer left, integer right)
        Boolean temp = undefined
        temp = rows:Get(left)
        rows:Set(left, rows:Get(right))
        rows:Set(right, temp)
    end

    action Copy(integer rowStart, integer rowEnd) returns DataFrameColumn
        BooleanColumn column
        column:SetHeader(GetHeader())

        i = rowStart
        repeat while i < rowEnd
            Boolean value = rows:Get(i)
            if value = undefined
                column:rows:Add(undefined)
            else
                Boolean value2
                value2:SetValue(value:GetValue())
                column:rows:Add(value2)
            end
            i = i + 1
        end

        return column
    end

    action Copy returns DataFrameColumn
        return Copy(0, rows:GetSize())
    end
end