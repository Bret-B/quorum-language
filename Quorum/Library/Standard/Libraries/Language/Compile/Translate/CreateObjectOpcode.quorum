package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.all
use Libraries.Containers.List
use Libraries.Containers.Iterator

class CreateObjectOpcode is QuorumOpcode
    //integer bytecodeLocation = -1
    //JavaBytecodeMethodWriter methodWriter = undefined
    JavaBytecodeOpcodes opcodes
    Class clazz = undefined
    Variable variable = undefined

    action SetBytecodeWriteOffsetToAllChildren(integer offset)
        SetBytecodeWriteOffset(offset)
    end

    action GetVariable returns Variable
        return variable
    end

    action SetVariable(Variable field)
        me:variable = field
    end

    action GetClass returns Class
        return clazz
    end

    action SetClass(Class clazz)
        me:clazz = clazz
        Type type
        type:SetToObject(clazz)
    end

    action WriteJavaScript returns text
        EOL = ""
        EOL = EOL:GetCarriageReturn() + EOL:GetLineFeed()
        text quote = EOL:GetDoubleQuote()
        text result = ""
        if variable:IsField()
            result = "this." + variable:GetJavaScriptName()
        else
            result = "var " + variable:GetJavaScriptName()
        end

        if clazz:IsStatic()
            result = result + " = " +
            "(global_Get_Shared_Class(" +quote+ clazz:GetStaticKey()+ quote+
            ") == null ? global_Add_Shared_Class("+quote +clazz:GetStaticKey() + quote +
            ", new "+clazz:ConvertStaticKeyToUnderScore()+"()) : global_Get_Shared_Class("+quote+clazz:GetStaticKey()+quote+"));"
            + EOL
        else
            result = result + " = new " + clazz:ConvertStaticKeyToUnderScore() + "();" + EOL
        end
        
        return result
    end

    action Write
        if clazz not= undefined
            VisitLineNumber()
            JavaBytecodeMethodWriter methodWriter = GetMethodWriter()
            if variable:IsField()
                //Class fieldHolder = variable:GetParentClass()
                methodWriter:VisitVariable(opcodes:GetObjectLoad(), 0)
                //methodWriter:VisitType(opcodes:GetCheckCast(), fieldHolder:ConvertStaticKeyToBytecodeInterfacePath())
            end
            

            if clazz:IsStatic() //"Lplugins/quorum/" + staticKeySlashes + ";"
                //first get the static class, if it exists and duplicate the reference
                methodWriter:VisitConstant(clazz:GetStaticKey())
                text className = "plugins/quorum/Libraries/Language/Object"
                methodWriter:VisitMethodInvoke(opcodes:GetInvokeStatic(), className, "GetStaticClass", "(Ljava/lang/String;)Ljava/lang/Object;", false)
                
                //now check if it's null. If it is, create the object and toss it in the static hash.
                JavaBytecodeLabel endLabel
                methodWriter:VisitJump(opcodes:GetIfNonNull(), endLabel) //jump to the end if it's there

                //it's not there, so load a string, then the object, and put it in the hash
                methodWriter:VisitConstant(clazz:GetStaticKey())
                methodWriter:VisitType(opcodes:GetNew(), clazz:ConvertStaticKeyToBytecodePath()) //one left on the stack
                methodWriter:VisitInstruction(opcodes:GetDuplicate())
                methodWriter:VisitMethodInvoke(opcodes:GetInvokeSpecial(), clazz:ConvertStaticKeyToBytecodePath(), "<init>", "()V", false)
                methodWriter:VisitMethodInvoke(opcodes:GetInvokeStatic(), className, "PutStaticClass", "(Ljava/lang/String;Ljava/lang/Object;)V", false)
                methodWriter:VisitLabel(endLabel)

                methodWriter:VisitConstant(clazz:GetStaticKey())
                methodWriter:VisitMethodInvoke(opcodes:GetInvokeStatic(), className, "GetStaticClass", "(Ljava/lang/String;)Ljava/lang/Object;", false)
                                
            else
                methodWriter:VisitType(opcodes:GetNew(), clazz:ConvertStaticKeyToBytecodePath())
                methodWriter:VisitInstruction(opcodes:GetDuplicate())
                methodWriter:VisitMethodInvoke(opcodes:GetInvokeSpecial(), clazz:ConvertStaticKeyToBytecodePath(), "<init>", "()V", false)
            end

            if variable:IsField()
                Class fieldHolder = variable:GetParentClass()
                path = fieldHolder:ConvertStaticKeyToBytecodePath()
                //path = clazz:ConvertStaticKeyToBytecodeInterfacePath()
                setterName = fieldHolder:ConvertToActionNameFromField(variable, false)
                Type type = variable:GetType()
                text methodName = ""
                if not type:IsPrimitive() and clazz:IsError()
                    methodName = type:ConvertToSignatureFromField(false)
                else
                    methodName = type:ConvertToSignatureFromFieldInterface(false)
                end
                
                //cast this thing to the interface type
                //methodWriter:VisitType(opcodes:GetCheckCast(), clazz:ConvertStaticKeyToBytecodeInterfacePath())

                methodWriter:VisitMethodInvoke(opcodes:GetInvokeVirtual(), 
                    path, setterName, methodName, false)
            else
                methodWriter:VisitVariable(opcodes:GetObjectStore(), variable:GetBytecodeLocation() + CalculateBytecodeOffset(variable))
            end
            
        end
    end

//    action GetMethodWriter returns JavaBytecodeMethodWriter
//        return methodWriter
//    end
//
//    action SetMethodWriter(JavaBytecodeMethodWriter writer)
//        methodWriter = writer
//    end

    action GetTemplateCopy returns QuorumOpcode
        CreateObjectOpcode con
        con:SetClass(GetClass())
        
        return con
    end
end