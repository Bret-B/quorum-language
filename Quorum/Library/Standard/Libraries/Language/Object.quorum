package Libraries.Language

/*
The Object class is the basic building block of all classes. This means 
everything is an Object and some of it's basic functionality is available
to all classes.

Attribute: Example

class Main
   action Main
      Object o
      Object i
      if o:Equals(i)
         output "Equal objects"
      end
   end
end
*/
class Object
    /*
        This action determines if two objects are equal based on their
        hash code values.

        Attribute: Parameter object The to be compared.

        Attribute: Returns True if the hash codes are equal and false if they
        are not equal. 

        Attribute: Example
        use Libraries.Language.Object
        use Libraries.Language.Types.Text
        Object o
        Text t
        boolean result = o:Equals(t)
    */ 
    action Equals(Object object) returns boolean
        integer myHash = GetHashCode()
        integer otherHash = object:GetHashCode()
        return myHash = otherHash
    end 

    /*
        This action gets the hash code for an object. 

        Attribute: Returns The integer hash code of the object.

        Attribute: Example

        Object o
        integer hash = o:GetHashCode()
    */ 
    system action GetHashCode() returns integer

    /*
        This action compares two object hash codes and returns an integer.
        The result is larger if this hash code is larger than
        the object passed as a parameter, smaller, or equal. In this case,
        -1 means smaller, 0 means equal, and 1 means larger. This action was changed
        in Quorum 7 to return an integer, instead of a CompareResult object, because
        the previous implementation was causing efficiency issues.

        Attribute: Parameter object The object to compare to.
        Attribute: Returns The Compare result, Smaller, Equal, or Larger. 

        Attribute: Example
        Object o
        Object t
        integer result = o:Compare(t) //1 (larger), 0 (equal), or -1 (smaller)
    */ 
    action Compare(Object object) returns integer
        integer myHash = me:GetHashCode()
        integer oHash = object:GetHashCode()

        if myHash < oHash
            return -1
        elseif myHash = oHash
            return 0
        else
            return 1
        end
    end
end