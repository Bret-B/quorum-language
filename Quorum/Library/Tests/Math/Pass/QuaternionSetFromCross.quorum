use Libraries.Compute.Quaternion
use Libraries.Compute.Vector3

class QuaternionSetFromCross 
    action Main
        Quaternion quaternion

        Vector3 first
        Vector3 second

        first:Set(2, 3, 4)
        second:Set(5, 7, 1)

        quaternion:SetFromCross(first, second)

        number x = quaternion:GetX() + 0.0
        number y = quaternion:GetY() + 0.0
        number z = quaternion:GetZ() + 0.0
        number w = quaternion:GetW() + 0.0

        output "The quaternion is [" + x + ", " + y + ", " + z + ", " + w + "]"

        quaternion:SetFromCross(2, 3, 4, 5, 7, 1)

        x = quaternion:GetX() + 0.0
        y = quaternion:GetY() + 0.0
        z = quaternion:GetZ() + 0.0
        w = quaternion:GetW() + 0.0

        output "The quaternion is [" + x + ", " + y + ", " + z + ", " + w + "]"        
    end
end