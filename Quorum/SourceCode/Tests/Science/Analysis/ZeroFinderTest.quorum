package Science.Tests
use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Containers.Array
use Libraries.Compute.Statistics.Tests.Regression
use Libraries.Compute.Statistics.DataFrameColumn
use Libraries.Compute.Vector
use Libraries.Compute.Analysis.RootFinder
use Libraries.Compute.Analysis.UnivariateAction
use Libraries.Compute.Statistics.Analysis.InverseCumulativeDistributionAction
use Libraries.Compute.Statistics.Distributions.HeavyTailNormalDistribution

class ZeroFinderTest is Test, UnivariateAction

    on create
        SetName("Test Root Finder (Brent's method)")
    end

    action Run
        RootFinder zero
        zero:SetFunction(me)

        zero:SetInitial(0)
        zero:SetMaximum(4.0/3.0)
        zero:SetMinimum(-4)

        number result = zero:Find()
        Check(result, -3.0)

        HeavyTailNormalDistribution t
        t:Setup(20)

        InverseCumulativeDistributionAction act
        act:SetSubtractConstant(1.0 - 0.875)
        act:SetDistribution(t)

        RootFinder solver
        solver:SetFunction(act)
        solver:SetMinimum(-2.7888667551135855)
        solver:SetMaximum(0.3984095364447979)
        solver:SetDefaultInitial()
        solver:SetAbsoluteAccuracy(t:GetSolverAbsoluteAccuracy())
        integer max = 0
        solver:SetMaxIterations(max:GetMaximumValue())
        number x = solver:Find()
        Check(x, -1.184761434357498)
    end

    action Calculate(number value) returns number
        return (value + 3) * ((value - 1) * (value - 1))
    end
end