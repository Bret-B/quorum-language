package Science.Tests

use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Tests.CompareMeansPairwise
use Libraries.Compute.Statistics.Reporting.CompareMeansResult

/*
    This class tests a bonferroni procedure on pairwise comparisons with bonferroni corrections
*/
class CompareMeansPairwiseUnfittedStrictCorrectionTest is Test

    on create
        SetName("Calculate CompareMeansPairwiseUnfittedStrictCorrectionTest")
    end

    action Run
        ColumnCalculationTest framer
        DataFrame frame = framer:GetDefaultDataFrame()
        frame:AddSelectedColumnRange(0,2)

        // T-test (pooled SD)
        CompareMeansPairwise compare
        compare:AssumeEqualVariances(true)
        compare:UseUnfittedApproach(true)
        compare:UseStrictCorrection(true)
        frame:Calculate(compare)
        // Compare y-x1
        CompareMeansResult result0 = compare:GetResults():Get(0)
        Check(result0:GetTestStatistic(), -0.3348809561713313)
        Check(result0:GetDegreesOfFreedom(), 15.0)
        Check(result0:GetProbabilityValue(), 1.0)
        // Compare y-x2
        CompareMeansResult result1 = compare:GetResults():Get(1)
        Check(result1:GetTestStatistic(), 4.975374205974067)
        Check(result1:GetDegreesOfFreedom(), 15.0)
        Check(result1:GetProbabilityValue(), 4.983472510126957e-4)
        // Compare x1-x2
        CompareMeansResult result2 = compare:GetResults():Get(2)
        Check(result2:GetTestStatistic(), 5.310255162145399)
        Check(result2:GetDegreesOfFreedom(), 15.0)
        Check(result2:GetProbabilityValue(), 2.6199380936196766e-4)

        // Welch T-test 
        CompareMeansPairwise compare2
        compare2:AssumeEqualVariances(false)
        compare2:UseUnfittedApproach(true)
        compare2:UseStrictCorrection(true)
        frame:Calculate(compare2)
        // Compare y-x1
        CompareMeansResult result3 = compare2:GetResults():Get(0)
        Check(result3:GetTestStatistic(), -0.3854541397819923)
        Check(result3:GetDegreesOfFreedom(), 9.996467122178753)
        Check(result3:GetProbabilityValue(), 1.0)
        // Compare y-x2
        CompareMeansResult result4 = compare2:GetResults():Get(1)
        Check(result4:GetTestStatistic(), -4.681076771500411)
        Check(result4:GetDegreesOfFreedom(), 9.074870440383508)
        Check(result4:GetProbabilityValue(), 0.0033751540917961566)
        // Compare x1-x2
        CompareMeansResult result5 = compare2:GetResults():Get(2)
        Check(result5:GetTestStatistic(), -5.027825732483661)
        Check(result5:GetDegreesOfFreedom(), 8.985191528246991)
        Check(result5:GetProbabilityValue(), 0.0021451371370181395)

        // Paired T-test 
        CompareMeansPairwise compare3
        compare3:Paired(true)
        compare3:UseUnfittedApproach(true)
        compare3:UseStrictCorrection(true)
        frame:Calculate(compare3)
        // Compare y-x1
        CompareMeansResult result6 = compare3:GetResults():Get(0)
        Check(result6:GetTestStatistic(), -2.4445060351935237)
        Check(result6:GetDegreesOfFreedom(), 5.0)
        Check(result6:GetProbabilityValue(), 0.17498790841878784)
        // Compare y-x2
        CompareMeansResult result7 = compare3:GetResults():Get(1)
        Check(result7:GetTestStatistic(), -5.279800058694819)
        Check(result7:GetDegreesOfFreedom(), 5.0)
        Check(result7:GetProbabilityValue(), 0.009736446026497397)
        // Compare x1-x2
        CompareMeansResult result8 = compare3:GetResults():Get(2)
        Check(result8:GetTestStatistic(), -6.266088279995422)
        Check(result8:GetDegreesOfFreedom(), 5.0)
        Check(result8:GetProbabilityValue(), 0.004557005331774909)

        // Mann Whitney Wilcox Test (not exact)
        CompareMeansPairwise compare4
        compare4:Ranked(true)
        compare4:UseUnfittedApproach(true)
        compare4:UseStrictCorrection(true)
        frame:Calculate(compare4)
        // Compare y-x1
        CompareMeansResult result9 = compare4:GetResults():Get(0)
        Check(result9:GetTestStatistic(), 13.5)
        Check(result9:GetProbabilityValue(), 1.0)
        // Compare y-x2
        CompareMeansResult result10 = compare4:GetResults():Get(1)
        Check(result10:GetTestStatistic(), 0.0)
        Check(result10:GetProbabilityValue(), 0.015224604293820665)
        // Compare x1-x2
        CompareMeansResult result11 = compare4:GetResults():Get(2)
        Check(result11:GetTestStatistic(), 0.0)
        Check(result11:GetProbabilityValue(), 0.01499437429524697)

        // Paired Wilcox Test (not exact)
        CompareMeansPairwise compare5
        compare5:Ranked(true)
        compare5:Paired(true)
        compare5:UseUnfittedApproach(true)
        compare5:UseStrictCorrection(true)
        frame:Calculate(compare5)
        // Compare y-x1
        CompareMeansResult result12 = compare5:GetResults():Get(0)
        Check(result12:GetTestStatistic(), 1.7153800557404717)
        Check(result12:GetProbabilityValue(), 0.2588267087475884)
        // Compare y-x2
        CompareMeansResult result13 = compare5:GetResults():Get(1)
        Check(result13:GetTestStatistic(), 2.102353324910547)
        Check(result13:GetProbabilityValue(), 0.10656700987024226)
        // Compare x1-x2
        CompareMeansResult result14 = compare5:GetResults():Get(2)
        Check(result14:GetTestStatistic(), 2.096569673443837)
        Check(result14:GetProbabilityValue(), 0.10809505865469982)
    end
end