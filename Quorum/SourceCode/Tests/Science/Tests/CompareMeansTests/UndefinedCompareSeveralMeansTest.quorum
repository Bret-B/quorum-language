package Science.Tests

use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Tests.CompareMeans
use Libraries.Compute.Statistics.Reporting.CompareMeansResult
use Libraries.Containers.Support.Pair
/*
    This class tests an anova (standard anova and welch anova)
*/
class UndefinedCompareSeveralMeansTest is Test

    on create
        SetName("Calculate UndefinedCompareSeveralMeansTest")
    end

    action Run
        ColumnCalculationTest framer
        DataFrame frame
        frame:LoadFromCommaSeparatedValue("y,x1,x2,x3
        2.0,4.0,-9.0,9
        6.0,,-19.0,19
        3.0,4.0,-18.0,18
        9.0,8.0,-16.0,16
        15.0,17.0,-2.0,2
        1.0,3.0,-4.0,4")
        frame:AddSelectedColumnRange(0,3)

        // Standard anova (equal variances)
        CompareMeans compare
        frame:Calculate(compare)
        
        CompareMeansResult result = compare:GetResult()
        text source = result:GetSources():Get(0)
        Check(result:GetInformation():GetValue("Groups"):GetValue("F"), 13.876895510815793)
        Check(result:GetInformation():GetValue("Groups"):GetValue("df"), 3.0)
//output "DF" + result:GetInformation():GetValue("Groups"):GetValue("df")
        Check(result:GetInformation():GetValue("Groups"):GetValue("error df"), 19.0)
//output "error df" + result:GetInformation():GetValue("Groups"):GetValue("error df")
        Check(result:GetInformation():GetValue("Groups"):GetValue("p"), 4.988684011986155e-5)
//output "p" + result:GetInformation():GetValue("Groups"):GetValue("p")
        Check(result:GetInformation():GetValue("Groups"):GetValue("eta-squared"), 0.6866273320221785)
//output "etaswaured" + result:GetInformation():GetValue("Groups"):GetValue("eta-squared")
        Check(result:GetInformation():GetValue("Groups"):GetValue("partial-eta-squared"), 0.6866273320221785)
//output "partial-eta-squared" + result:GetInformation():GetValue("Groups"):GetValue("partial-eta-squared")
        Check(result:GetInformation():GetValue("Groups"):GetValue("generalized-eta-squared"), 0.6866273320221785)
//output "g-eta-squared" + result:GetInformation():GetValue("Groups"):GetValue("generalized-eta-squared")
        Check(result:GetInformation():GetValue("Groups"):GetValue("omega-squared"), 0.62680928456166165)
//output "o-eta-squared" + result:GetInformation():GetValue("Groups"):GetValue("omega-squared")
        Check(result:GetInformation():GetValue("Groups"):GetValue("partial-omega-squared"), 0.6268092845616616)
//output "partial-omega-squared" + result:GetInformation():GetValue("Groups"):GetValue("partial-omega-squared")
        Check(result:GetInformation():GetValue("Groups"):GetValue("generalized-omega-squared"), 0.6268092845616616)
//output "generalized-eta-squared" + result:GetInformation():GetValue("Groups"):GetValue("generalized-omega-squared")

        text summary = result:GetSummary()
        text formalsummary = result:GetFormalSummary()
        Check(true, summary not= "")
        Check(true, formalsummary not= "")

        // Welch anova (unequal variances)
        CompareMeans compare2
        compare2:AssumeEqualVariances(false)
        frame:Calculate(compare2)
        
        CompareMeansResult result2 = compare2:GetResult()
        Check(result2:GetInformation():GetValue("Groups"):GetValue("F"), 10.136054790155757)
//output result2:GetInformation():GetValue("Groups"):GetValue("F")
        Check(result2:GetInformation():GetValue("Groups"):GetValue("df"), 3.0)
output result2:GetInformation():GetValue("Groups"):GetValue("df")
        Check(result2:GetInformation():GetValue("Groups"):GetValue("error df"), 10.372838086343801)
output result2:GetInformation():GetValue("Groups"):GetValue("error df")
        Check(result2:GetInformation():GetValue("Groups"):GetValue("p"), 0.0020118102468669186)
output result2:GetInformation():GetValue("Groups"):GetValue("p")
        Check(result2:GetInformation():GetValue("Groups"):GetValue("omega-squared"), 0.5437247063597687)
output result2:GetInformation():GetValue("Groups"):GetValue("omega-squared")

        text summary2 = result2:GetSummary()
        text formalsummary2 = result2:GetFormalSummary()
        Check(true, summary2 not= "")
        Check(true, formalsummary2 not= "")
    end
end