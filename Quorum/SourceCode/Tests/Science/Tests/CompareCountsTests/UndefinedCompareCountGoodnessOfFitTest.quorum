package Science.Tests
use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Tests.CompareCounts
use Libraries.Compute.Statistics.Reporting.CompareCountsResult
use Libraries.Compute.Statistics.Columns.TextColumn
use Libraries.Compute.Statistics.Columns.NumberColumn
use Libraries.Compute.Statistics.Tests.ExperimentalDesign

/*
    This class tests pearson chi-squared goodness of fit.
*/
class UndefinedCompareCountsGoodnessOfFitTest is Test

    on create
        SetName("Undefined Compare Counts Goodness of Fit Test - Pearson Chi-Squared")
    end

    action Run
        DataFrame frame
        frame:LoadFromCommaSeparatedValue("id,t1,t2,t3,t4,t5,t6,t7,t8
        1,no,no,yes,no,maybe,maybe,no,yes
        2,no,no,yes,maybe,maybe,no,maybe,yes
        3,no,no,yes,no,maybe,no,no,yes
        4,no,no,yes,yes,maybe,maybe,maybe,yes
        5,no,no,yes,no,maybe,maybe,maybe,yes
        6,no,no,,maybe,maybe,maybe,maybe,yes
        7,no,no,no,maybe,yes,yes,maybe,yes
        8,no,no,no,maybe,no,no,maybe,yes
        9,no,no,no,no,no,yes,maybe,yes
        10,no,no,no,maybe,no,no,no,yes
        11,no,no,yes,yes,yes,maybe,no,yes
        12,no,no,yes,no,yes,no,no,yes
        13,no,no,yes,yes,no,maybe,no,yes
        14,no,no,yes,yes,yes,yes,no,yes
        15,no,no,yes,yes,no,maybe,maybe,yes
        16,no,yes,yes,yes,maybe,yes,maybe,yes
        17,no,yes,no,no,no,yes,maybe,yes
        18,no,yes,no,yes,no,no,no,yes
        19,no,yes,no,yes,maybe,no,no,yes
        20,no,yes,yes,maybe,yes,no,maybe,yes
        21,no,yes,yes,no,no,no,maybe,yes
        22,no,yes,yes,no,yes,no,no,yes
        23,no,yes,yes,maybe,yes,yes,maybe,yes
        24,no,yes,yes,no,yes,yes,maybe,yes
        25,no,yes,yes,yes,no,maybe,maybe,yes
        26,no,yes,no,yes,no,no,no,yes
        27,no,yes,no,no,maybe,maybe,maybe,yes
        28,no,yes,no,no,maybe,no,no,yes
        29,no,yes,yes,no,maybe,no,no,yes
        30,no,yes,yes,yes,maybe,maybe,maybe,yes
        31,yes,no,yes,yes,no,yes,no,yes
        32,yes,no,yes,yes,yes,yes,no,yes
        33,yes,no,yes,maybe,no,no,maybe,yes
        34,yes,no,yes,maybe,yes,no,no,yes
        35,yes,no,yes,yes,maybe,maybe,maybe,yes
        36,yes,no,yes,maybe,no,maybe,maybe,yes
        37,yes,no,yes,yes,yes,maybe,no,yes
        38,yes,no,yes,no,yes,maybe,maybe,yes
        39,yes,no,yes,maybe,yes,no,maybe,yes
        40,yes,no,yes,no,yes,yes,maybe,yes
        41,yes,yes,yes,yes,maybe,no,no,yes
        42,yes,yes,no,no,yes,no,no,yes
        43,yes,yes,no,maybe,yes,no,maybe,yes
        44,yes,yes,no,no,no,maybe,no,yes
        45,yes,yes,no,yes,yes,no,maybe,yes
        46,yes,yes,no,maybe,yes,yes,no,yes
        47,yes,yes,no,no,maybe,no,no,yes
        48,yes,yes,no,maybe,maybe,yes,no,yes
        49,yes,yes,no,no,yes,yes,no,yes
        50,yes,yes,no,maybe,no,no,maybe,yes")
        
        // Frame approach: Equal distribution test
        frame:AddSelectedColumns("t4")
        CompareCounts compare1 = frame:CompareCounts()
        CompareCountsResult result1 = compare1:GetResult()
        Check(result1:GetTestStatistic(), 0.2799999999999999)
        Check(result1:GetDegreesOfFreedom(), 2.0)
        Check(result1:GetProbabilityValue(), 0.8693582353988059)
        Check(true, result1:GetSummary() not= "")
        Check(true, result1:GetFormalSummary() not= "")
        Check(true, compare1:GetSummary() not= "")
        Check(true, compare1:GetFormalSummary() not= "")  

        // Frame approach: Expected percent test
        NumberColumn percents
        percents:Add(0.5)
        percents:Add(0.25)
        percents:Add(0.25)

        CompareCounts compare3
        compare3:GoodnessOfFitAgainstExpectedPercents(frame, percents)
        CompareCountsResult result3 = compare3:GetResult()
        Check(result3:GetTestStatistic(), 8.04)
        Check(result3:GetDegreesOfFreedom(), 2.0)
        Check(result3:GetProbabilityValue(), 0.017952964939502825)
        Check(true, result3:GetSummary() not= "")
        Check(true, result3:GetFormalSummary() not= "")
        Check(true, compare3:GetSummary() not= "")
        Check(true, compare3:GetFormalSummary() not= "") 

        // Frame approach: Expected count test
        TextColumn levels
        levels:Add("maybe")
        levels:Add("no")
        levels:Add("yes")
        NumberColumn counts
        counts:Add(16)
        counts:Add(22)
        counts:Add(12)
        DataFrame countsFrame
        countsFrame:AddColumn(levels)
        countsFrame:AddColumn(counts)

        CompareCounts compare4
        compare4:GoodnessOfFitAgainstExpectedCounts(frame, countsFrame)
        CompareCountsResult result4 = compare4:GetResult()
        Check(result4:GetTestStatistic(), 2.8731060606060606)
        Check(result4:GetDegreesOfFreedom(), 2.0)
        Check(result4:GetProbabilityValue(), 0.23774585064575404)
        Check(true, result4:GetSummary() not= "")
        Check(true, result4:GetFormalSummary() not= "")
        Check(true, compare4:GetSummary() not= "")
        Check(true, compare4:GetFormalSummary() not= "")  

        // Frame approach: Expected count test (try a different ordering)
        TextColumn levels2
        levels2:Add("yes")
        levels2:Add("no")
        levels2:Add("maybe")
        NumberColumn counts2
        counts2:Add(16)
        counts2:Add(22)
        counts2:Add(12)
        DataFrame countsFrame2
        countsFrame2:AddColumn(levels2)
        countsFrame2:AddColumn(counts2)

        CompareCounts compare5
        compare5:GoodnessOfFitAgainstExpectedCounts(frame, countsFrame2)
        CompareCountsResult result5 = compare5:GetResult()
        Check(result5:GetTestStatistic(), 1.5397727272727273)
        Check(result5:GetDegreesOfFreedom(), 2.0)
        Check(result5:GetProbabilityValue(), 0.46306568642223567)
        Check(true, result5:GetSummary() not= "")
        Check(true, result5:GetFormalSummary() not= "")
        Check(true, compare5:GetSummary() not= "")
        Check(true, compare5:GetFormalSummary() not= "")  

        // Design approach: Equal distribution test
        frame:EmptySelectedColumns()
        ExperimentalDesign design
        design:AddBetweenSubjectsFactor("iv","t4")
        CompareCounts compare2 = frame:CompareCounts(design)
        CompareCountsResult result2 = compare2:GetResult()
        Check(result2:GetTestStatistic(), 0.2799999999999999)
        Check(result2:GetDegreesOfFreedom(), 2.0)
        Check(result2:GetProbabilityValue(), 0.8693582353988059)
        Check(true, result2:GetSummary() not= "")
        Check(true, result2:GetFormalSummary() not= "")
        Check(true, compare2:GetSummary() not= "")
        Check(true, compare2:GetFormalSummary() not= "")  

        // Design approach: Equal distribution test
        design:Empty()
        design:AddDependentVariable("t4")
        CompareCounts compare6 = frame:CompareCounts(design)
        CompareCountsResult result6 = compare6:GetResult()
        Check(result6:GetTestStatistic(), 0.2799999999999999)
        Check(result6:GetDegreesOfFreedom(), 2.0)
        Check(result6:GetProbabilityValue(), 0.8693582353988059)
        Check(true, result6:GetSummary() not= "")
        Check(true, result6:GetFormalSummary() not= "")
        Check(true, compare6:GetSummary() not= "")
        Check(true, compare6:GetFormalSummary() not= "")  
    end
end