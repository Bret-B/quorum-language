package Science.Tests
use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Tests.CompareCounts
use Libraries.Compute.Statistics.Reporting.CompareCountsResult
use Libraries.Compute.Statistics.Tests.ExperimentalDesign
use Libraries.Compute.Statistics.Tests.CompareCountsPairwise
use Libraries.Containers.Array

/*
    This class tests pairwise mcnemar test with familywise error correction.
*/
class CompareRelatedCountsPairwiseTest is Test

    on create
        SetName("CompareRelatedCountsPairwiseTest - McNemar Test + Bonferroni")
    end

    action Run
        DataFrame frame
        frame:LoadFromCommaSeparatedValue("id,t1,t2,t3,t4,t5,t6,t7,t8
        1,no,no,yes,no,maybe,maybe,no,yes
        2,no,no,yes,maybe,maybe,no,maybe,yes
        3,no,no,yes,no,maybe,no,no,yes
        4,no,no,yes,yes,maybe,maybe,maybe,yes
        5,no,no,yes,no,maybe,maybe,maybe,yes
        6,no,no,yes,maybe,maybe,maybe,maybe,yes
        7,no,no,no,maybe,yes,yes,maybe,yes
        8,no,no,no,maybe,no,no,maybe,yes
        9,no,no,no,no,no,yes,maybe,yes
        10,no,no,no,maybe,no,no,no,yes
        11,no,no,yes,yes,yes,maybe,no,yes
        12,no,no,yes,no,yes,no,no,yes
        13,no,no,yes,yes,no,maybe,no,yes
        14,no,no,yes,yes,yes,yes,no,yes
        15,no,no,yes,yes,no,maybe,maybe,yes
        16,no,yes,yes,yes,maybe,yes,maybe,yes
        17,no,yes,no,no,no,yes,maybe,yes
        18,no,yes,no,yes,no,no,no,yes
        19,no,yes,no,yes,maybe,no,no,yes
        20,no,yes,yes,maybe,yes,no,maybe,yes
        21,no,yes,yes,no,no,no,maybe,yes
        22,no,yes,yes,no,yes,no,no,yes
        23,no,yes,yes,maybe,yes,yes,maybe,yes
        24,no,yes,yes,no,yes,yes,maybe,yes
        25,no,yes,yes,yes,no,maybe,maybe,yes
        26,no,yes,no,yes,no,no,no,yes
        27,no,yes,no,no,maybe,maybe,maybe,yes
        28,no,yes,no,no,maybe,no,no,yes
        29,no,yes,yes,no,maybe,no,no,yes
        30,no,yes,yes,yes,maybe,maybe,maybe,yes
        31,yes,no,yes,yes,no,yes,no,yes
        32,yes,no,yes,yes,yes,yes,no,yes
        33,yes,no,yes,maybe,no,no,maybe,yes
        34,yes,no,yes,maybe,yes,no,no,yes
        35,yes,no,yes,yes,maybe,maybe,maybe,yes
        36,yes,no,yes,maybe,no,maybe,maybe,yes
        37,yes,no,yes,yes,yes,maybe,no,yes
        38,yes,no,yes,no,yes,maybe,maybe,yes
        39,yes,no,yes,maybe,yes,no,maybe,yes
        40,yes,no,yes,no,yes,yes,maybe,yes
        41,yes,yes,yes,yes,maybe,no,no,yes
        42,yes,yes,no,no,yes,no,no,yes
        43,yes,yes,no,maybe,yes,no,maybe,yes
        44,yes,yes,no,no,no,maybe,no,yes
        45,yes,yes,no,yes,yes,no,maybe,yes
        46,yes,yes,no,maybe,yes,yes,no,yes
        47,yes,yes,no,no,maybe,no,no,yes
        48,yes,yes,no,maybe,maybe,yes,no,yes
        49,yes,yes,no,no,yes,yes,no,yes
        50,yes,yes,no,maybe,no,no,maybe,yes")

        // Frame approach: 3 groups x 2 categories
        frame:AddSelectedColumns("t1,t2,t3")
        CompareCountsPairwise compare2 = frame:CompareRelatedCountsPairwise() 

        Array<CompareCountsResult> result2 = compare2:GetResults()
        Check(result2:Get(0):GetTestStatistic(), 1.0)
        Check(result2:Get(0):GetDegreesOfFreedom(), 1.0)
        Check(result2:Get(0):GetProbabilityValue(), 0.9519315235887424) 
        Check(result2:Get(1):GetTestStatistic(), 4.172413793103448)
        Check(result2:Get(1):GetDegreesOfFreedom(), 1.0)
        Check(result2:Get(1):GetProbabilityValue(), 0.1232616735834623) 
        Check(result2:Get(2):GetTestStatistic(), 1.0)
        Check(result2:Get(2):GetDegreesOfFreedom(), 1.0)
        Check(result2:Get(2):GetProbabilityValue(), 0.9519315235887424) 
        Check(true, compare2:GetSummary() not= "")
        Check(true, compare2:GetFormalSummary() not= "")
        Check(true, compare2:GetPairwiseSummary() not= "")

        // Design approach: 3 groups x 2 categories (should be equivelent to test above) 
        ExperimentalDesign design
        design:AddWithinSubjectsFactor("iv","dv","t1,t2,t3")
        CompareCountsPairwise compare3 = frame:CompareCountsPairwise(design)

        Array<CompareCountsResult> result3 = compare3:GetResults()
        Check(result3:Get(0):GetTestStatistic(), 1.0)
        Check(result3:Get(0):GetDegreesOfFreedom(), 1.0)
        Check(result3:Get(0):GetProbabilityValue(), 0.9519315235887424) 
        Check(result3:Get(1):GetTestStatistic(), 4.172413793103448)
        Check(result3:Get(1):GetDegreesOfFreedom(), 1.0)
        Check(result3:Get(1):GetProbabilityValue(), 0.1232616735834623) 
        Check(result3:Get(2):GetTestStatistic(), 1.0)
        Check(result3:Get(2):GetDegreesOfFreedom(), 1.0)
        Check(result3:Get(2):GetProbabilityValue(), 0.9519315235887424) 
        Check(true, compare3:GetSummary() not= "")
        Check(true, compare3:GetFormalSummary() not= "")
        Check(true, compare3:GetPairwiseSummary() not= "")

        // Design approach: 3 groups x 2 categories using no correction
        CompareCountsPairwise compare4
        compare4:SetExperimentalDesign(design)
        compare4:UseStrictCorrection(false)
        compare4:UseLenientCorrection(false)
        compare4:Calculate(frame)

        Array<CompareCountsResult> result4 = compare4:GetResults()
        Check(result4:Get(0):GetTestStatistic(), 1.0)
        Check(result4:Get(0):GetDegreesOfFreedom(), 1.0)
        Check(result4:Get(0):GetProbabilityValue(), 0.31731050786291415) 
        Check(result4:Get(1):GetTestStatistic(), 4.172413793103448)
        Check(result4:Get(1):GetDegreesOfFreedom(), 1.0)
        Check(result4:Get(1):GetProbabilityValue(), 0.041087224527820765) 
        Check(result4:Get(2):GetTestStatistic(), 1.0)
        Check(result4:Get(2):GetDegreesOfFreedom(), 1.0)
        Check(result4:Get(2):GetProbabilityValue(), 0.31731050786291415) 
        Check(true, compare4:GetSummary() not= "")
        Check(true, compare4:GetFormalSummary() not= "")
        Check(true, compare4:GetPairwiseSummary() not= "")
    end
end