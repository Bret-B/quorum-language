package Science.Tests

use Libraries.Testing.Test
use Libraries.Compute.Statistics.DataFrame
use Libraries.Compute.Statistics.Tests.CompareVariances
use Libraries.Compute.Statistics.Reporting.CompareVariancesResult

/*
    This class tests a levene's homogeneity test
*/
class CompareIndependentVariancesTest is Test

    on create
        SetName("Calculate CompareIndependentVariances")
    end

    action Run
        ColumnCalculationTest framer
        DataFrame frame = framer:GetDefaultDataFrame()
        frame:SelectAllColumns()


        // Median as center
        CompareVariances compare
        frame:Calculate(compare)
        
        CompareVariancesResult result = compare:GetResult()
        Check(result:GetTestStatistic(), 1.275736252280429)
        Check(result:GetDegreesOfFreedomTable():GetValue(result:GetSources():Get(0)):GetValue("numerator"), 3.0)
        Check(result:GetDegreesOfFreedomTable():GetValue(result:GetSources():Get(0)):GetValue("denominator"), 20.0)
        Check(result:GetProbabilityValue(), 0.30972657586910013)

        text summary = result:GetSummary()
        text formalsummary = result:GetFormalSummary()
        Check(true, summary not= "")
        Check(true, formalsummary not= "")

        // Mean as center
        CompareVariances compare2
        compare2:UseMeanAsCenter()
        frame:Calculate(compare2)
        
        CompareVariancesResult result2 = compare2:GetResult()
        Check(result2:GetTestStatistic(), 1.6138848191141646)
        Check(result2:GetDegreesOfFreedomTable():GetValue(result:GetSources():Get(0)):GetValue("numerator"), 3.0)
        Check(result2:GetDegreesOfFreedomTable():GetValue(result:GetSources():Get(0)):GetValue("denominator"), 20.0)
        Check(result2:GetProbabilityValue(), 0.2177022863231628)

        text summary2 = result2:GetSummary()
        text formalsummary2 = result2:GetFormalSummary()
        Check(true, summary2 not= "")
        Check(true, formalsummary2 not= "")
    end
end