use Libraries.Language.Compile.Compiler
use Libraries.Language.Compile.Library
use Libraries.Language.Compile.CompilerErrorManager
use Libraries.System.File
use Libraries.Containers.Array
use Libraries.Language.Compile.CompilerRequest
use Libraries.Language.Compile.CompilerResult
class DoubleBootstrapQuorumStudio

    File main = undefined
    action Main
        output "Compiling Quorum Studio with compiled compiler."
        Compiler compiler

        File standardLibraryFolder = compiler:GetStandardLibraryFolder()
        compiler:SetStandardLibraryFolder(standardLibraryFolder)

        File outputLocation
        outputLocation:SetPath("Library/Studio")

        output "Scanning"
        Library library
        library:outputJavaScript = true
        library:SetCachingLibraryOpcodes(true)
        library:SetLocation(standardLibraryFolder)
        //library:SetOutputFolder(outputLocation)
        CompilerErrorManager errors = library:Scan()
        output "Gathering Quorum Studio Files."

        File studio
        studio = studio:GetParentDirectory():GetParentDirectory()
        studio:SetPath("quorum-studio")


        File studioSource
        studioSource:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/SourceCode")
        output studioSource:GetAbsolutePath()
        Array<File> files = studioSource:GetDirectoryListing()
        files = Deflate(files)
        files:Add(0, main)
//        i = 0
//        repeat while i < files:GetSize()
//            File file = files:Get(i)
//            output file:GetFileName()
//            i = i + 1
//        end

        File theOutput
        theOutput:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run2")
        if theOutput:Exists()
            theOutput:Delete(true)
            theOutput:CreateDirectories()
        else
            theOutput:CreateDirectories()
        end
        compiler:SetOutputFolder(theOutput)
        compiler:SetName("QuorumStudio")
        ManageJars(compiler, studio)
        ManagePlugins(compiler, studio)

        //compiler:AddJar
        //now we've gathered all of the files, so compile Quorum Studio
        CompilerRequest request
        
        
        request:files = files
        request:library = library
        
        request:main = main
        CompilerResult result = compiler:Compile(request)
        CompilerErrorManager manager = result:compilerErrorManager
        
        if manager:IsCompilationErrorFree()
            output "Build Successful"
        else
            output manager:GetCompilerErrorsAsText()
            return now
        end
    end

    action ManagePlugins(Compiler compiler, File studio)
        File plugins
        plugins:SetWorkingDirectory(studio:GetAbsolutePath() + "/QuorumStudioPlugins/build/classes/java/main/")
        plugins:SetPath("plugins")

        File com
        com:SetWorkingDirectory(studio:GetAbsolutePath() + "/QuorumStudioPlugins/build/classes/java/main/")
        com:SetPath("com")

        compiler:AddPluginFolder(plugins)
        compiler:AddPluginFolder(com)
    end
    /*
        librarie
 s/OmniscientDebugger.jar libraries/tools.jar libraries/org.eclipse.jgit
 -5.6.1.202002131546-r.jar libraries/slf4j-api-1.7.30.jar libraries/slf4
 j-simple-1.7.30.jar libraries/Bouncy.jar libraries/jsch-0.1.52.jar
    */
    action ManageJars(Compiler compiler, File studio)
        File debugger
        debugger:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/OmniscientDebugger.jar")

        File tools
        tools:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/libraries/tools.jar")

        File git
        git:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/org.eclipse.jgit-5.6.1.202002131546-r.jar")

        File slf
        slf:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/slf4j-api-1.7.30.jar")

        File slfs
        slfs:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/slf4j-simple-1.7.30.jar")
        
        File bouncy
        bouncy:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/Bouncy.jar")

        File jsch
        jsch:SetAbsolutePath(studio:GetAbsolutePath() + "/QuorumStudio/Run/libraries/jsch-0.1.52.jar")

        compiler:AddJar(debugger)
        compiler:AddJar(tools)
        compiler:AddJar(git)
        compiler:AddJar(slf)
        compiler:AddJar(slfs)
        compiler:AddJar(bouncy)
        compiler:AddJar(jsch)
    end

    action Deflate(Array<File> files) returns Array<File>
        Array<File> returnMe
        i = 0
        repeat while i < files:GetSize()
            File file = files:Get(i)
            if file:IsDirectory()
                Array<File> more = Deflate(file:GetDirectoryListing())
                j = 0
                repeat while j < more:GetSize()
                    returnMe:Add(more:Get(j))
                    j = j + 1
                end
            else
                if file:GetFileName() = "main.quorum" //don't add it, just let it know it is the main
                    main = file
                else
                    returnMe:Add(file)
                end
            end
            i = i + 1
        end

        return returnMe
    end

end