package Libraries.Data.Formats

use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.System.File
use Libraries.Data.Formats.JavaScriptObjectNotationDefaultListener
use Libraries.Data.Formats.JavaScriptObjectNotationLexer
use Libraries.Data.Formats.JavaScriptObjectNotationParser

/*
This class can read in JavaScriptObjectNotation (JSON) formatted data from text values or 
from disk. When it reads them in, the data is stored inside this object. Alternatively, this 
class allows the programmer to set a listener object that can receive information about how 
the JSON file is being parsed as it occurs. 

Attribute: Example

use Libraries.Data.Formats.JavaScriptObjectNotation

class Main
   action Main
        text dq = ""
        dq = dq:GetDoubleQuote()
        text myValue = "{" + dq + "data" + dq + ": [21.5, 22.7, 23.9]}"
        JavaScriptObjectNotation json
        json:Read(myValue)
        i = 0
        repeat while i < json:GetSize()
            JavaScriptObjectNotation next = json:Get(i)
            if next:GetKey() = "data"
                output "data"
                JavaScriptObjectNotation array = next:Get(0)
                j = 0
                repeat while j < array:GetSize()
                    JavaScriptObjectNotation item = array:Get(j)
                    output item:GetNumber()
                    j = j + 1
                end
            end
            i = i + 1
        end
   end
end
*/

class JavaScriptObjectNotation
    private Array<JavaScriptObjectNotation> array
    private text textValue = ""
    private number numberValue = 0.0
    private integer integerValue = 0
    private boolean booleanValue = false
    private integer type = 0
    private constant integer INTEGER = 1
    private constant integer NUMBER = 2
    private constant integer TEXT = 3
    private constant integer BOOLEAN = 4
    private constant integer UNDEFINED = 5
    private constant integer ARRAY = 6
    private constant integer OBJECT = 7
    private constant integer PARENT = 8
    private text key = ""
    private boolean object = false
    private integer spaces = 4
    private boolean prettyPrint = true

    action Add(JavaScriptObjectNotation object)
        object:SetPrettyPrint(IsPrettyPrint())
        array:Add(object)
    end

    /*
    Use this method to add a nested JavaScriptObjectNotation object with a key.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation data
            data:Add("item1", "a")
            data:Add("item2", "b")
            data:Add("item3", "c")

            JavaScriptObjectNotation json
            json:Add("data1", "A")
            json:Add("data2", "B")
            json:Add("detail", data)

            output json:ToText()
       end
    end
    */

    action Add(text key, JavaScriptObjectNotation value)
        JavaScriptObjectNotation object
        object:SetPrettyPrint(IsPrettyPrint())
        object:Add(value)
        object:SetKey(key)
        array:Add(object)
    end

    /*
    Use this method to add a boolean item to a JavaScriptObjectNotation object.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", true)
            json:Add("item2", false)
            output json:ToText()
       end
    end
    */

    action Add(text key, boolean value) 
        JavaScriptObjectNotation object
        object:SetPrettyPrint(IsPrettyPrint())
        object:SetBoolean(value)
        object:SetKey(key)
        array:Add(object)
    end

    /*
    Use this method to add an integer item to a JavaScriptObjectNotation object.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2)
            output json:ToText()
       end
    end
    */

    action Add(text key, integer value) 
        JavaScriptObjectNotation object
        object:SetPrettyPrint(IsPrettyPrint())
        object:SetInteger(value)
        object:SetKey(key)
        array:Add(object)
    end

    /*
    Use this method to add a number item to a JavaScriptObjectNotation object.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1.1)
            json:Add("item2", 2.2)
            output json:ToText()
       end
    end
    */

    action Add(text key, number value) 
        JavaScriptObjectNotation object
        object:SetPrettyPrint(IsPrettyPrint())
        object:SetNumber(value)
        object:SetKey(key)
        array:Add(object)
    end

    /*
    Use this method to add a text item to a JavaScriptObjectNotation object.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", "First Name")
            json:Add("item2", "Last Name")
            output json:ToText()
       end
    end
    */

    action Add(text key, text value) 
        JavaScriptObjectNotation object
        object:SetPrettyPrint(IsPrettyPrint())
        object:SetText(value)
        object:SetKey(key)
        array:Add(object)
    end

    /*
    Use this method to return one of the items in the json object by it's index number

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", true)
            json:Add("item2", 5)

            JavaScriptObjectNotation item = json:Get(0)
            if item:GetBoolean() = true
                output "Item 1 was true"
            else
                output "Item 1 was false"
            end
       end
    end
    */

    action Get(integer index) returns JavaScriptObjectNotation
        JavaScriptObjectNotation value = array:Get(index)
        return value
    end

    /*
    Use this method to get the boolean value of a JavaScriptObjectNotation object

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", true)

            JavaScriptObjectNotation item = json:Get(0)
            output item:GetBoolean()
       end
    end
    */

    action GetBoolean returns boolean
        return booleanValue
    end

    /*
    Use this method to get the key (or name) of a JavaScriptObjectNotation object

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", true)

            JavaScriptObjectNotation item = json:Get(0)
            output item:GetKey()
       end
    end
    */

    action GetKey returns text
        return key
    end

    /*
    This method returns an array of the key names inside a JavaScriptObjectNotation object

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.Containers.Array

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2)
            json:Add("item3", 3)

            Array<text> keys = json:GetKeys()
            i = 0
            repeat keys:GetSize() times
                key = keys:Get(i)
                output key + " => " + json:GetValue(key)
                i = i + 1
            end
       end
    end
    */

    action GetKeys returns Array<text>
        Array<text> result
        Iterator<JavaScriptObjectNotation> it = me:GetIterator()
        repeat while it:HasNext()
            JavaScriptObjectNotation child = it:Next()
            result:Add(child:GetKey())
        end
        return result
    end

    /*
    This method returns an integer value of a JavaScriptObjectNotation object containing an integer type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2)
            json:Add("item3", 3)

            sum = 0
            i = 0
            repeat json:GetSize() times
                sum = sum + json:Get(i):GetInteger()
                i = i + 1
            end
            output sum
       end
    end
    */

    action GetInteger returns integer
        return integerValue
    end

    /*
    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.Containers.Iterator

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1.1)
            json:Add("item2", 2.2)
            json:Add("item3", 3.3)

            number sum = 0
            i = 0
            Iterator<JavaScriptObjectNotation> myIterator = json:GetIterator()

            repeat while myIterator:HasNext()
                JavaScriptObjectNotation nextItem = myIterator:Next()
                sum = sum + nextItem:GetNumber()
                i = i + 1
            end
            output sum
       end
    end
    */

    action GetIterator returns Iterator<JavaScriptObjectNotation>
        return array:GetIterator()
    end

    /*
    This method returns a number value of a JavaScriptObjectNotation object containing a number type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1.1)
            json:Add("item2", 2.2)
            json:Add("item3", 3.3)

            number sum = 0
            i = 0
            repeat json:GetSize() times
                sum = sum + json:Get(i):GetNumber()
                i = i + 1
            end
            output sum
       end
    end
    */

    action GetNumber returns number
        return numberValue
    end

/*
    This method returns a number of children in a JavaScriptObjectNotation object

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1.1)
            json:Add("item2", 2.2)
            json:Add("item3", 3.3)

            output json:GetSize()
       end
    end
    */

    action GetSize returns integer
        return array:GetSize()
    end

    /*
    This method returns a text value of a JavaScriptObjectNotation object containing a text type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", "one")
            json:Add("item2", "two")
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):GetText()
                i = i + 1
            end
       end
    end
    */

    action GetText returns text
        return textValue
    end

    /*
    This method returns a type of a JavaScriptObjectNotation object.
    INTEGER = 1
    NUMBER = 2
    TEXT = 3
    BOOLEAN = 4
    UNDEFINED = 5
    ARRAY = 6
    OBJECT = 7
    PARENT = 8

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", "one")
            json:Add("item2", 1)
            json:Add("item3", 1.1)
            json:Add("item4", true)

            i = 0
            repeat json:GetSize() times
                output json:Get(i):GetType()
                i = i + 1
            end
       end
    end
    */

    action GetType returns integer
        return type
    end

    /*
    This method returns the value of a JavaScriptObjectNotation object by the key name in text format

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            output json:GetValue("item1")
            output json:GetValue("item2")
            output json:GetValue("item3")
       end
    end
    */

    action GetValue(text key) returns text
        Iterator<JavaScriptObjectNotation> it = me:GetIterator()
        repeat while it:HasNext()
            JavaScriptObjectNotation child = it:Next()
            if child:GetKey() = key
                return child:GetValue()
            end
        end
        return "No item called " + key + " found"
    end

    /*
    This method returns the value of a JavaScriptObjectNotation object by the key name in text format

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
       action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            output json:GetValue("item1")
            output json:GetValue("item2")
            output json:GetValue("item3")
       end
    end
    */

    action GetValue returns text
        if IsText()
            return textValue
        elseif IsNumber()
            return cast(text, numberValue)
        elseif IsInteger()
            return cast(text, integerValue)
        elseif IsBoolean()
            return cast(text, booleanValue)
        elseif IsObject()
            return me:array:Get(0):ToText()
        elseif IsArray()
            return me:array:Get(0):ToText()
        elseif IsUndefined()
            return "null"
        elseif type = 0
            return me:array:Get(0):ToText()
        end
        return ""
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is an array or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsArray()
                i = i + 1
            end
       end
    end
    */

    action IsArray returns boolean
        return type = ARRAY
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is a boolean value or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", true)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsBoolean()
                i = i + 1
            end
       end
    end
    */

    action IsBoolean returns boolean
        return type = BOOLEAN
    end

    /*
    This method returns true if a JavaScriptObjectNotation object contains values or false otherwise
    use Libraries.Data.Formats.JavaScriptObjectNotation
    class Main
        action Main
            JavaScriptObjectNotation json
            output json:IsEmpty()
            json:Add("item1", 1)
            output json:IsEmpty()
       end
    end
    */
    action IsEmpty returns boolean
        return array:IsEmpty()
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is an integer value or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", true)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsInteger()
                i = i + 1
            end
       end
    end
    */

    action IsInteger returns boolean
        return type = INTEGER
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is an integer value or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsNumber()
                i = i + 1
            end
       end
    end
    */

    action IsNumber returns boolean
        return type = NUMBER
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is an object or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsObject()
                i = i + 1
            end
       end
    end
    */

    action IsObject returns boolean
        return type = OBJECT
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is the parent or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsObject()
                i = i + 1
            end
       end
    end
    */

    action IsParent returns boolean
        return type = PARENT
    end

    action IsPrettyPrint returns boolean
        return prettyPrint
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is a text or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsText()
                i = i + 1
            end
       end
    end
    */

    action IsText returns boolean
        return type = TEXT
    end

    /*
    This method returns true if a JavaScriptObjectNotation object is a text or false otherwise.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")

            i = 0
            repeat json:GetSize() times
                output json:Get(i):IsUndefined()
                i = i + 1
            end
       end
    end
    */

    action IsUndefined returns boolean
        return type = UNDEFINED
    end

    /*
    This method will read in the contents of a file to a JavaScriptObjectNotation object.

    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.System.File

    class Main
        action Main
            JavaScriptObjectNotation json
            File myFile
            myFile:SetPath("response.json")
            json:Read(myFile)
            output json:ToText()
       end
    end
    */

    action Read(File file)
        if file not= undefined and file:Exists() and file:IsFile()
            text value = file:Read()
            Read(value)
        else
            output "File: " + file:GetFileName() + " is not found"
        end
    end

    /*
    This method will read a text value to a JavaScriptObjectNotation object.

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
        text dq = ""
        dq = dq:GetDoubleQuote()
        text myValue = "{" + dq + "item1" + dq + ": 1," + dq + "item2" + dq + ": 2}"
        JavaScriptObjectNotation json
        json:Read(myValue)
        output json:ToText()
       end
    end
    */

    action Read(text data)
        // load object with JSON formatted text data 
        JavaScriptObjectNotation json = ReadToObject(data)
        me:type = PARENT
        Iterator<JavaScriptObjectNotation> it = json:GetIterator()
        repeat while it:HasNext()
            JavaScriptObjectNotation object = it:Next()
            Add(object)
        end
    end

    /*
    This method will read a hash table to a JavaScriptObjectNotation object.

    use Libraries.Data.Formats.JavaScriptObjectNotation
    use Libraries.Containers.HashTable

    class Main
        action Main
        JavaScriptObjectNotation json
        HashTable<text, text> table
        table:Add("1", "one")
        table:Add("2", "two ")
        table:Add("3", "three")
        json:Read(table)
        output json:ToText()
       end
    end
    */

    action Read(HashTable<text, text> data)
        // load object with HashTable data
        me:type = PARENT
        Iterator<text> it = data:GetKeyIterator()
        repeat while it:HasNext()
            text key = it:Next()
            text value = data:GetValue(key)
            Add(key, value)
        end
    end

    private action ReadToObject(text value) returns JavaScriptObjectNotation
        if value = undefined
            return undefined
        end
        JavaScriptObjectNotationDefaultListener listen
        JavaScriptObjectNotationLexer lex
        JavaScriptObjectNotationParser parse

        lex:SetListener(listen)
        parse:SetListener(listen)
        lex:Read(value)
        parse:Parse(lex)
        return listen:GetObject()
    end

    /*
    This method removes an item from a JavaScriptObjectNotation object.

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Remove(1)
            output json:ToText()
       end
    end
    */

    action Remove(integer index)
        array:RemoveAt(index)
    end

    /*
    This method sets a JavaScriptObjectNotation object to boolean type with a specified value

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetBoolean(false)
            output json:ToText()
       end
    end
    */

    action SetBoolean(boolean value)
        booleanValue = value
        type = BOOLEAN
    end

    /*
    This method sets a JavaScriptObjectNotation object to integer type with a specified value

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetBoolean(false)
            output json:ToText()
       end
    end
    */

    action SetInteger(integer value)
        integerValue = value
        type = INTEGER
    end

    /*
    This method sets a JavaScriptObjectNotation object to number type with a specified value

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetNumber(10.0)
            output json:ToText()
       end
    end
    */

    action SetNumber(number value)
        numberValue = value
        type = NUMBER
    end

    /*
    This method sets a JavaScriptObjectNotation object to object type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:SetObject()
       end
    end
    */

    action SetObject
        type = OBJECT
    end

    /*
    This method sets a JavaScriptObjectNotation object to parent type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:SetParent()
       end
    end
    */

    action SetParent
        type = PARENT
    end

    action SetPrettyPrint(boolean print)
        prettyPrint = print
    end

    /*
    This method sets the name of a key of a JavaScriptObjectNotation object

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetKey("number2")
            output json:ToText()
       end
    end
    */

    action SetKey(text key)
        me:key = key
    end

    /*
    This method sets a JavaScriptObjectNotation object to text type with a specified value

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetText("two")
            output json:ToText()
       end
    end
    */

    action SetText(text value)
        textValue = value
        type = TEXT
    end

    /*
    This method sets a JavaScriptObjectNotation object to undefined type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:SetUndefined()
       end
    end
    */

    action SetUndefined
        type = UNDEFINED
    end

    /*
    This method sets a JavaScriptObjectNotation object to array type

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:SetArray()
       end
    end
    */

    action SetArray
        type = ARRAY
    end

    private action GetSpaces(integer level) returns text
        text space = ""
        repeat spaces * level times
            space = space + " "
        end
        return space
    end

    /*
    This method prints a JavaScriptObjectNotation object in text format

    Attribute: Example

    use Libraries.Data.Formats.JavaScriptObjectNotation

    class Main
        action Main
            JavaScriptObjectNotation json
            json:Add("item1", 1)
            json:Add("item2", 2.2)
            json:Add("item3", "three")
            json:Get(1):SetText("two")
            output json:ToText()
       end
    end
    */

    action ToText returns text
        return ToText(0)
    end

    private action ToText(integer level) returns text
        text result = ""
        text dq = result:GetDoubleQuote()
        text line = ""
        text space = ""
        if IsPrettyPrint()
            space = GetSpaces(level)
            line = result:GetCarriageReturn()
        end
        
        if key not= undefined and not key:IsEmpty()
            result = result + space + dq + key + dq + ": " 
        end

        if IsParent() and level = 0
            if IsPrettyPrint()
                result = result + "{" + line
            else
                result = result + "{"
            end
        end

        if IsObject()
            if level > 0
                result = result + space + "{" + line
            else
                result = result + "{" + line
            end
        elseif IsArray() 
            result = result + "["
        elseif IsText()
            result = result + dq + textValue + dq
        elseif IsBoolean()
            result = result + booleanValue
        elseif IsNumber()
            result = result + numberValue
        elseif IsInteger()
            result = result + integerValue
        elseif IsUndefined()
            result = result + "null"
        end
        
        //get all children
        i = 0
        repeat while i < array:GetSize()
            JavaScriptObjectNotation value = array:Get(i)
            value:SetPrettyPrint(IsPrettyPrint())
            if IsArray()
                result = result + value:ToText(level)
            elseif IsObject()
                result = result + value:ToText(level)
            else
                result = result + value:ToText(level + 1)
            end

            if i not= array:GetSize() - 1
                text isNext = ", "
                if not IsArray()
                    isNext = isNext + line
                end
                result = result + isNext
            end
            i = i + 1
        end

        if IsObject()
            result = result + line + space + "}"
        elseif IsArray() 
            result = result + "]"
        end

        if IsParent() and level = 0
            if IsPrettyPrint()
                result = result + line + "}"
            else
                result = result + "}"
            end
        end

        return result
    end

end