// The Keys class is based on the nested Input.Keys class from libgdx. The
// class contains a very large group of constants, representing keyboard and 
// game controller inputs with integer flags. These constants have no meaning
// on their own, however, and will require a lower-level input class that
// handles OS-specific input to map keys to this list of constants.
//
// For programmers using this code once the porting is finished, this class will
// provide OS-independent flags for input, and thus you should use this rather
// than the low-level input classes that feed into this.
//
// Note that unlike the libgdx class Input.Keys, the qlibgdx Keys class is a
// parent of Input.
//
// DEVELOPMENT NOTE: The class Games.Libraries.Utils.ObjectIntMap must be
// implemented before this class is complete.

package Libraries.Games

use Libraries.Language.Errors.Error
use Libraries.Containers.HashTable

class Keys 
    public constant integer ANY_KEY = -1
    public constant integer NUM_0 = 7
    public constant integer NUM_1 = 8
    public constant integer NUM_2 = 9
    public constant integer NUM_3 = 10
    public constant integer NUM_4 = 11
    public constant integer NUM_5 = 12
    public constant integer NUM_6 = 13
    public constant integer NUM_7 = 14
    public constant integer NUM_8 = 15
    public constant integer NUM_9 = 16
    public constant integer A = 29
    public constant integer ALT_LEFT = 57
    public constant integer ALT_RIGHT = 58
    public constant integer APOSTROPHE = 75
    public constant integer AT = 77
    public constant integer B = 30
    public constant integer BACK = 4
    public constant integer BACKSLASH = 73
    public constant integer C = 31
    public constant integer CALL = 5
    public constant integer CAMERA = 27
    public constant integer CLEAR = 28
    public constant integer COMMA = 55
    public constant integer D = 32
    public constant integer DEL = 67
    public constant integer BACKSPACE = 67
    public constant integer FORWARD_DEL = 112
    public constant integer DPAD_CENTER = 23
    public constant integer DPAD_DOWN = 20
    public constant integer DPAD_LEFT = 21
    public constant integer DPAD_RIGHT = 22
    public constant integer DPAD_UP = 19
    public constant integer CENTER = 23
    public constant integer DOWN = 20
    public constant integer LEFT = 21
    public constant integer RIGHT = 22
    public constant integer UP = 19
    public constant integer E = 33
    public constant integer ENDCALL = 6
    public constant integer ENTER = 66
    public constant integer ENVELOPE = 65
    public constant integer EQUALS = 70
    public constant integer EXPLORER = 64
    public constant integer F = 34
    public constant integer FOCUS = 80
    public constant integer G = 35
    public constant integer GRAVE = 68
    public constant integer H = 36
    public constant integer HEADSETHOOK = 79
    public constant integer HOME = 3
    public constant integer I = 37
    public constant integer J = 38
    public constant integer K = 39
    public constant integer L = 40
    public constant integer LEFT_BRACKET = 71
    public constant integer M = 41
    public constant integer MEDIA_FAST_FORWARD = 90
    public constant integer MEDIA_NEXT = 87
    public constant integer MEDIA_PLAY_PAUSE = 85
    public constant integer MEDIA_PREVIOUS = 88
    public constant integer MEDIA_REWIND = 89
    public constant integer MEDIA_STOP = 86
    public constant integer MENU = 82
    public constant integer MINUS = 69
    public constant integer MUTE = 91
    public constant integer N = 42
    public constant integer NOTIFICATION = 83
    public constant integer NUM = 78
    public constant integer O = 43
    public constant integer P = 44
    public constant integer PERIOD = 56
    public constant integer PLUS = 81
    public constant integer POUND = 18
    public constant integer POWER = 26
    public constant integer Q = 45
    public constant integer R = 46
    public constant integer RIGHT_BRACKET = 72
    public constant integer S = 47
    public constant integer SEARCH = 84
    public constant integer SEMICOLON = 74
    public constant integer SHIFT_LEFT = 59
    public constant integer SHIFT_RIGHT = 60
    public constant integer SLASH = 76
    public constant integer SOFT_LEFT = 1
    public constant integer SOFT_RIGHT = 2
    public constant integer SPACE = 62
    public constant integer STAR = 17
    public constant integer SYM = 63
    public constant integer T = 48
    public constant integer TAB = 61
    public constant integer U = 49
    public constant integer UNKNOWN = 0
    public constant integer V = 50
    public constant integer VOLUME_DOWN = 25
    public constant integer VOLUME_UP = 24
    public constant integer W = 51
    public constant integer X = 52
    public constant integer Y = 53
    public constant integer Z = 54
    public constant integer META_ALT_LEFT_ON = 16
    public constant integer META_ALT_ON = 2
    public constant integer META_ALT_RIGHT_ON = 32
    public constant integer META_SHIFT_LEFT_ON = 64
    public constant integer META_SHIFT_ON = 1
    public constant integer META_SHIFT_RIGHT_ON = 128
    public constant integer META_SYM_ON = 4
    public constant integer CONTROL_LEFT = 129
    public constant integer CONTROL_RIGHT = 130
    public constant integer ESCAPE = 131
    public constant integer END = 132
    public constant integer INSERT = 133
    public constant integer PAGE_UP = 92
    public constant integer PAGE_DOWN = 93
    public constant integer PICTSYMBOLS = 94
    public constant integer SWITCH_CHARSET = 95
    public constant integer BUTTON_CIRCLE = 255
    public constant integer BUTTON_A = 96
    public constant integer BUTTON_B = 97
    public constant integer BUTTON_C = 98
    public constant integer BUTTON_X = 99
    public constant integer BUTTON_Y = 100
    public constant integer BUTTON_Z = 101
    public constant integer BUTTON_L1 = 102
    public constant integer BUTTON_R1 = 103
    public constant integer BUTTON_L2 = 104
    public constant integer BUTTON_R2 = 105
    public constant integer BUTTON_THUMBL = 106
    public constant integer BUTTON_THUMBR = 107
    public constant integer BUTTON_START = 108
    public constant integer BUTTON_SELECT = 109
    public constant integer BUTTON_MODE = 110
    public constant integer NUMPAD_0 = 144
    public constant integer NUMPAD_1 = 145
    public constant integer NUMPAD_2 = 146
    public constant integer NUMPAD_3 = 147
    public constant integer NUMPAD_4 = 148
    public constant integer NUMPAD_5 = 149
    public constant integer NUMPAD_6 = 150
    public constant integer NUMPAD_7 = 151
    public constant integer NUMPAD_8 = 152
    public constant integer NUMPAD_9 = 153
    public constant integer COLON = 243
    public constant integer F1 = 244
    public constant integer F2 = 245
    public constant integer F3 = 246
    public constant integer F4 = 247
    public constant integer F5 = 248
    public constant integer F6 = 249
    public constant integer F7 = 250
    public constant integer F8 = 251
    public constant integer F9 = 252
    public constant integer F10 = 253
    public constant integer F11 = 254
    public constant integer F12 = 255

    HashTable<integer, text> textHash
    HashTable<integer, text> textShiftHash

    on create
        InitializeTextHash()
        InitializeTextShiftHash()
    end

    action ToText(integer keycode, boolean shiftPressed) returns text
        if shiftPressed
            return ToTextShift(keycode)
        end
        return ToText(keycode)
    end

    action ToText(integer keycode) returns text
        if keycode < 0
            Error error
            error:SetErrorMessage("Keycode cannot be negative, keycode: " + keycode)
            alert(error)
        end
        
        if keycode > 255
            Error error
            error:SetErrorMessage("Keycode cannot be greater than 255, keycode: " + keycode)
            alert(error)
        end

        text result = textHash:GetValue(keycode)
        if result not= undefined
            return result
        end
        // If it has reached this point, the key name was not found.
        // Quorum doesn't allow returning "undefined" when text is expected,
        // so an empty string is returned instead.
        return ""
    end

    action ToTextShift(integer keycode) returns text
        if keycode < 0
            Error error
            error:SetErrorMessage("Keycode cannot be negative, keycode: " + keycode)
            alert(error)
        end
        
        if keycode > 255
            Error error
            error:SetErrorMessage("Keycode cannot be greater than 255, keycode: " + keycode)
            alert(error)
        end

        text result = textShiftHash:GetValue(keycode)
        if result not= undefined
            return result
        end
        // If it has reached this point, the key name was not found.
        // Quorum doesn't allow returning "undefined" when text is expected,
        // so an empty string is returned instead.
        return ""
    end

    /* private ObjectIntMap<text> keyNames
    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // The above code requires Games.Libraries.Utils.ObjectIntMap
    // Same goes for the below Actions. Remove these comments once
    // the ObjectIntMap is implemented.

    action ValueOf (text keyName) returns integer
        if keyNames = undefined
            me:InitializeKeyNames()
        end
        return keyNames:get(keyName, -1)
    end

    action InitializeKeyNames
        integer index = 0
        repeat while index < 256
            text name = ToText(index)
            if name not= undefined
                keyNames:put(index, index)
            end
        end
    end

    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    */
    private action InitializeTextHash()
        textHash:Add(UNKNOWN, "Unknown")
        textHash:Add(SOFT_LEFT, "SoftLeft")
        textHash:Add(SOFT_RIGHT, "SoftRight")
        textHash:Add(HOME, "Home")
        textHash:Add(BACK, "Back")
        textHash:Add(CALL, "Call")
        textHash:Add(ENDCALL, "EndCall")
        textHash:Add(NUM_0, "0")
        textHash:Add(NUM_1, "1")
        textHash:Add(NUM_2, "2")
        textHash:Add(NUM_3, "3")
        textHash:Add(NUM_4, "4")
        textHash:Add(NUM_5, "5")
        textHash:Add(NUM_6, "6")
        textHash:Add(NUM_7, "7")
        textHash:Add(NUM_8, "8")
        textHash:Add(NUM_9, "9")
        textHash:Add(STAR, "*")
        textHash:Add(POUND, "#")
        textHash:Add(UP, "Up")
        textHash:Add(DOWN, "Down")
        textHash:Add(LEFT, "Left")
        textHash:Add(RIGHT, "Right")
        textHash:Add(CENTER, "Center")
        textHash:Add(VOLUME_UP, "VolumeUp")
        textHash:Add(VOLUME_DOWN, "VolumeDown")
        textHash:Add(POWER, "Power")
        textHash:Add(CAMERA, "Camera")
        textHash:Add(CLEAR, "Clear")
        textHash:Add(A, "a")
        textHash:Add(B, "b")
        textHash:Add(C, "c")
        textHash:Add(D, "d")
        textHash:Add(E, "e")
        textHash:Add(F, "f")
        textHash:Add(G, "g")
        textHash:Add(H, "h")
        textHash:Add(I, "I")
        textHash:Add(J, "j")
        textHash:Add(K, "k")
        textHash:Add(L, "l")
        textHash:Add(M, "m")
        textHash:Add(N, "n")
        textHash:Add(O, "o")
        textHash:Add(P, "p")
        textHash:Add(Q, "q")
        textHash:Add(R, "r")
        textHash:Add(S, "s")
        textHash:Add(T, "t")
        textHash:Add(U, "u")
        textHash:Add(V, "v")
        textHash:Add(W, "w")
        textHash:Add(X, "x")
        textHash:Add(Y, "y")
        textHash:Add(Z, "z")
        textHash:Add(COMMA, ",")
        textHash:Add(PERIOD, ".")
        textHash:Add(ALT_LEFT, "L-Alt")
        textHash:Add(ALT_RIGHT, "R-Alt")
        textHash:Add(SHIFT_LEFT, "L-Shift")
        textHash:Add(SHIFT_RIGHT, "R-Shift")
        textHash:Add(TAB, "Tab")
        textHash:Add(SPACE, "Space")
        textHash:Add(SYM, "SYM")
        textHash:Add(EXPLORER, "Explorer")
        textHash:Add(ENVELOPE, "Envelope")
        textHash:Add(ENTER, "Enter")
        textHash:Add(DEL, "Delete")
        textHash:Add(GRAVE, "`")
        textHash:Add(MINUS, "-")
        textHash:Add(EQUALS, "=")
        textHash:Add(LEFT_BRACKET, "[")
        textHash:Add(RIGHT_BRACKET, "]")
        textHash:Add(BACKSLASH, "\")
        textHash:Add(SEMICOLON, ";")
        textHash:Add(APOSTROPHE, "'")
        textHash:Add(SLASH, "/")
        textHash:Add(AT, "@")
        textHash:Add(NUM, "Num")
        textHash:Add(HEADSETHOOK, "HeadsetHook")
        textHash:Add(FOCUS, "Focus")
        textHash:Add(PLUS, "Plus")
        textHash:Add(MENU, "Menu")
        textHash:Add(NOTIFICATION, "Notification")
        textHash:Add(SEARCH, "Search")
        textHash:Add(MEDIA_PLAY_PAUSE, "Play/Pause")
        textHash:Add(MEDIA_STOP, "StopMedia")
        textHash:Add(MEDIA_NEXT, "NextMedia")
        textHash:Add(MEDIA_PREVIOUS, "PrevMedia")
        textHash:Add(MEDIA_REWIND, "Rewind")
        textHash:Add(MEDIA_FAST_FORWARD, "FastForward")
        textHash:Add(MUTE, "Mute")
        textHash:Add(PAGE_UP        , "PageUp")
        textHash:Add(PAGE_DOWN, "PageDown")
        textHash:Add(PICTSYMBOLS, "PICTSYMBOLS")
        textHash:Add(SWITCH_CHARSET, "SWITCH_CHARSET")
        textHash:Add(BUTTON_A, "AButton")
        textHash:Add(BUTTON_B, "BButton")
        textHash:Add(BUTTON_C, "CButton")
        textHash:Add(BUTTON_X, "XButton")
        textHash:Add(BUTTON_Y, "YButton")
        textHash:Add(BUTTON_Z, "ZButton")
        textHash:Add(BUTTON_L1, "L1Button")
        textHash:Add(BUTTON_R1, "R1Button")
        textHash:Add(BUTTON_L2, "L2Button")
        textHash:Add(BUTTON_R2, "R2Button")
        textHash:Add(BUTTON_THUMBL, "LeftThumb")
        textHash:Add(BUTTON_THUMBR, "RightThumb")
        textHash:Add(BUTTON_START, "Start")
        textHash:Add(BUTTON_SELECT, "Select")
        textHash:Add(BUTTON_MODE, "ButtonMode")
        textHash:Add(FORWARD_DEL, "ForwardDelete")
        textHash:Add(CONTROL_LEFT, "L-Ctrl")
        textHash:Add(CONTROL_RIGHT, "R-Ctrl")
        textHash:Add(ESCAPE, "Escape")
        textHash:Add(END, "End")
        textHash:Add(INSERT, "Insert")
        textHash:Add(NUMPAD_0, "Numpad0")
        textHash:Add(NUMPAD_1, "Numpad1")
        textHash:Add(NUMPAD_2, "Numpad2")
        textHash:Add(NUMPAD_3, "Numpad3")
        textHash:Add(NUMPAD_4, "Numpad4")
        textHash:Add(NUMPAD_5, "Numpad5")
        textHash:Add(NUMPAD_6, "Numpad6")
        textHash:Add(NUMPAD_7, "Numpad7")
        textHash:Add(NUMPAD_8, "Numpad8")
        textHash:Add(NUMPAD_9, "Numpad9")
        textHash:Add(COLON, ":")
        textHash:Add(F1, "F1")
        textHash:Add(F2, "F2")
        textHash:Add(F3, "F3")
        textHash:Add(F4, "F4")
        textHash:Add(F5, "F5")
        textHash:Add(F6, "F6")
        textHash:Add(F7 , "F7")
        textHash:Add(F8, "F8")
        textHash:Add(F9, "F9")
        textHash:Add(F10, "F10")
        textHash:Add(F11, "F11")
        textHash:Add(F12, "F12")
    end

    private action InitializeTextShiftHash()
        text t = ""
        textShiftHash:Add(UNKNOWN, "Unknown")
        textShiftHash:Add(SOFT_LEFT, "SoftLeft")
        textShiftHash:Add(SOFT_RIGHT, "SoftRight")
        textShiftHash:Add(HOME, "Home")
        textShiftHash:Add(BACK, "Back")
        textShiftHash:Add(CALL, "Call")
        textShiftHash:Add(ENDCALL, "EndCall")
        textShiftHash:Add(NUM_0, ")")
        textShiftHash:Add(NUM_1, "!")
        textShiftHash:Add(NUM_2, "@")
        textShiftHash:Add(NUM_3, "#")
        textShiftHash:Add(NUM_4, "$")
        textShiftHash:Add(NUM_5, "%")
        textShiftHash:Add(NUM_6, "^")
        textShiftHash:Add(NUM_7, "&")
        textShiftHash:Add(NUM_8, "*")
        textShiftHash:Add(NUM_9, "(")
        textShiftHash:Add(STAR, "*")
        textShiftHash:Add(POUND, "#")
        textShiftHash:Add(UP, "Up")
        textShiftHash:Add(DOWN, "Down")
        textShiftHash:Add(LEFT, "Left")
        textShiftHash:Add(RIGHT, "Right")
        textShiftHash:Add(CENTER, "Center")
        textShiftHash:Add(VOLUME_UP, "VolumeUp")
        textShiftHash:Add(VOLUME_DOWN, "VolumeDown")
        textShiftHash:Add(POWER, "Power")
        textShiftHash:Add(CAMERA, "Camera")
        textShiftHash:Add(CLEAR, "Clear")
        textShiftHash:Add(A, "A")
        textShiftHash:Add(B, "B")
        textShiftHash:Add(C, "C")
        textShiftHash:Add(D, "D")
        textShiftHash:Add(E, "E")
        textShiftHash:Add(F, "F")
        textShiftHash:Add(G, "G")
        textShiftHash:Add(H, "H")
        textShiftHash:Add(I, "I")
        textShiftHash:Add(J, "J")
        textShiftHash:Add(K, "K")
        textShiftHash:Add(L, "L")
        textShiftHash:Add(M, "M")
        textShiftHash:Add(N, "N")
        textShiftHash:Add(O, "O")
        textShiftHash:Add(P, "P")
        textShiftHash:Add(Q, "Q")
        textShiftHash:Add(R, "R")
        textShiftHash:Add(S, "S")
        textShiftHash:Add(T, "T")
        textShiftHash:Add(U, "U")
        textShiftHash:Add(V, "V")
        textShiftHash:Add(W, "W")
        textShiftHash:Add(X, "X")
        textShiftHash:Add(Y, "Y")
        textShiftHash:Add(Z, "Z")
        textShiftHash:Add(COMMA, "<")
        textShiftHash:Add(PERIOD, ">")
        textShiftHash:Add(ALT_LEFT, "L-Alt")
        textShiftHash:Add(ALT_RIGHT, "R-Alt")
        textShiftHash:Add(SHIFT_LEFT, "L-Shift")
        textShiftHash:Add(SHIFT_RIGHT, "R-Shift")
        textShiftHash:Add(TAB, "Tab")
        textShiftHash:Add(SPACE, "Space")
        textShiftHash:Add(SYM, "SYM")
        textShiftHash:Add(EXPLORER, "Explorer")
        textShiftHash:Add(ENVELOPE, "Envelope")
        textShiftHash:Add(ENTER, "Enter")
        textShiftHash:Add(DEL, "Delete")
        textShiftHash:Add(GRAVE, "~")
        textShiftHash:Add(MINUS, "_")
        textShiftHash:Add(EQUALS, "+")
        textShiftHash:Add(LEFT_BRACKET, "{")
        textShiftHash:Add(RIGHT_BRACKET, "}")
        textShiftHash:Add(BACKSLASH, "|")
        textShiftHash:Add(SEMICOLON, ":")
        textShiftHash:Add(APOSTROPHE, t:GetDoubleQuote())
        textShiftHash:Add(SLASH, "?")
        textShiftHash:Add(AT, "@")
        textShiftHash:Add(NUM, "Num")
        textShiftHash:Add(HEADSETHOOK, "HeadsetHook")
        textShiftHash:Add(FOCUS, "Focus")
        textShiftHash:Add(PLUS, "Plus")
        textShiftHash:Add(MENU, "Menu")
        textShiftHash:Add(NOTIFICATION, "Notification")
        textShiftHash:Add(SEARCH, "Search")
        textShiftHash:Add(MEDIA_PLAY_PAUSE, "Play/Pause")
        textShiftHash:Add(MEDIA_STOP, "StopMedia")
        textShiftHash:Add(MEDIA_NEXT, "NextMedia")
        textShiftHash:Add(MEDIA_PREVIOUS, "PrevMedia")
        textShiftHash:Add(MEDIA_REWIND, "Rewind")
        textShiftHash:Add(MEDIA_FAST_FORWARD, "FastForward")
        textShiftHash:Add(MUTE, "Mute")
        textShiftHash:Add(PAGE_UP        , "PageUp")
        textShiftHash:Add(PAGE_DOWN, "PageDown")
        textShiftHash:Add(PICTSYMBOLS, "PICTSYMBOLS")
        textShiftHash:Add(SWITCH_CHARSET, "SWITCH_CHARSET")
        textShiftHash:Add(BUTTON_A, "AButton")
        textShiftHash:Add(BUTTON_B, "BButton")
        textShiftHash:Add(BUTTON_C, "CButton")
        textShiftHash:Add(BUTTON_X, "XButton")
        textShiftHash:Add(BUTTON_Y, "YButton")
        textShiftHash:Add(BUTTON_Z, "ZButton")
        textShiftHash:Add(BUTTON_L1, "L1Button")
        textShiftHash:Add(BUTTON_R1, "R1Button")
        textShiftHash:Add(BUTTON_L2, "L2Button")
        textShiftHash:Add(BUTTON_R2, "R2Button")
        textShiftHash:Add(BUTTON_THUMBL, "LeftThumb")
        textShiftHash:Add(BUTTON_THUMBR, "RightThumb")
        textShiftHash:Add(BUTTON_START, "Start")
        textShiftHash:Add(BUTTON_SELECT, "Select")
        textShiftHash:Add(BUTTON_MODE, "ButtonMode")
        textShiftHash:Add(FORWARD_DEL, "ForwardDelete")
        textShiftHash:Add(CONTROL_LEFT, "L-Ctrl")
        textShiftHash:Add(CONTROL_RIGHT, "R-Ctrl")
        textShiftHash:Add(ESCAPE, "Escape")
        textShiftHash:Add(END, "End")
        textShiftHash:Add(INSERT, "Insert")
        textShiftHash:Add(NUMPAD_0, "Numpad0")
        textShiftHash:Add(NUMPAD_1, "Numpad1")
        textShiftHash:Add(NUMPAD_2, "Numpad2")
        textShiftHash:Add(NUMPAD_3, "Numpad3")
        textShiftHash:Add(NUMPAD_4, "Numpad4")
        textShiftHash:Add(NUMPAD_5, "Numpad5")
        textShiftHash:Add(NUMPAD_6, "Numpad6")
        textShiftHash:Add(NUMPAD_7, "Numpad7")
        textShiftHash:Add(NUMPAD_8, "Numpad8")
        textShiftHash:Add(NUMPAD_9, "Numpad9")
        textShiftHash:Add(COLON, ":")
        textShiftHash:Add(F1, "F1")
        textShiftHash:Add(F2, "F2")
        textShiftHash:Add(F3, "F3")
        textShiftHash:Add(F4, "F4")
        textShiftHash:Add(F5, "F5")
        textShiftHash:Add(F6, "F6")
        textShiftHash:Add(F7 , "F7")
        textShiftHash:Add(F8, "F8")
        textShiftHash:Add(F9, "F9")
        textShiftHash:Add(F10, "F10")
        textShiftHash:Add(F11, "F11")
        textShiftHash:Add(F12, "F12")
    end

end