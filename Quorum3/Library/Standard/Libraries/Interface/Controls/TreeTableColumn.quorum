package Libraries.Interface.Controls
use Libraries.Containers.Array
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Layouts.LayoutProperties

class TreeTableColumn is Control
    Array<Cell> cells
    boolean hasHeader = false
    TreeTable treeTable = undefined

    on create
        FlowLayout layout
        SetLayout(layout)

        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:STANDARD)
        properties:SetVerticalLayoutMode(properties:FIT_CONTENTS)

        properties:SetPixelWidth(100)
    end

    action Add(Cell cell)
        cells:Add(cell)

        parent:Control:Add(cell)
    end

    action Add(integer position, Cell cell)
        cells:Add(position, cell)

        parent:Control:Add(position, cell)
    end

    action GetCell(integer i) returns Cell
        return cells:Get(i)
    end

    action RemoveCell(Cell cell)
        cells:Remove(cell)
        parent:Item2D:Remove(cell)
    end

    action RemoveCellAt(integer column)
        Cell c = cells:RemoveAt(column)
        parent:Item2D:Remove(column)
    end

    action GetSize returns integer
        return cells:GetSize()
    end

    action IsCellsEmpty returns boolean
        return cells:IsEmpty()
    end

    action SetTreeTable(TreeTable table)
        treeTable = table
    end

    action GetTreeTable returns TreeTable
        return treeTable
    end

    /*
    This action will return the index of the given Cell within the Column, or
    returns -1 if the Cell wasn't in this Column.
    */
    action GetCellIndex(Cell cell) returns integer
        return cells:GetFirstLocation(cell)
    end

    action Empty 
        cells:Empty()
        parent:Item2D:Empty()
    end

    action SetCell(integer index, text value)
        Cell cell = cells:Get(index)
        cell:SetText(value)
    end
end