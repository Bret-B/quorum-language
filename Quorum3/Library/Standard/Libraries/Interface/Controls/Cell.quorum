package Libraries.Interface.Controls
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Label
use Libraries.Game.Graphics.ColorGroup

class Cell is Control
    text value = ""
    constant integer DEFAULT_PADDING = 6
    Label label

    on create
        FlowLayout layout
        SetLayout(layout)

        LayoutProperties properties = GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:STANDARD)
        properties:SetVerticalLayoutMode(properties:FIT_FONT)

        properties:SetPercentageWidth(1)

        Font font
        text defaultFontName = GetDefaultFontName()
        if defaultFontName not= undefined
            font:LoadFont(defaultFontName)
            integer defaultFontSize = GetDefaultFontSize()
            font:SetSize(defaultFontSize)
            properties:SetFont(font)
            properties:SetFontSize(defaultFontSize)
        end

        SetInputGroup("SpreadsheetCell")
        SetClipping(true)
        Add(label)
        SetAccessibilityCode(parent:Item:CELL)
        SetName("Cell")
    end

    action GetDefaultFontName returns text
        Font font
        if font:FontIsAvailable("Arial")
            return "Arial"
        else
            return parent:Control:GetDefaultFontName()
        end
    end

    action LoadGraphics(LayoutProperties properties)
        parent:Control:LoadGraphics(properties)
        LabelBoxView view
        Color color
        view:Initialize(color:White(), color:Black())
        view:SetBorderThickness(1)

        label:SetLeftPadding(DEFAULT_PADDING)
        label:SetFont(properties:GetFont())
        label:SetSize(cast(integer, properties:GetFontSize() * properties:GetInterfaceScale()))

        SetView2D(view)
    end


    action SetText(text value)
        me:value = value
        label:SetText(value)
    end

    action GetText returns text
        return value
    end

    action GainedSelection
        parent:Control:GainedSelection()
        if GetView2D() is LabelBoxView
            LabelBoxView view = cast(LabelBoxView, GetView2D())
            LayoutProperties properties = GetDefaultLayoutProperties()
            ColorGroup useColor = properties:GetSelectionColor()
            if useColor not= undefined
                view:SetBackgroundColor(useColor)
            end
        end

    end

    action LostSelection
        parent:Control:LostSelection()
        if GetView2D() is LabelBoxView
            LabelBoxView view = cast(LabelBoxView, GetView2D())
            LayoutProperties properties = GetDefaultLayoutProperties()
            if properties:GetBackgroundColor() not= undefined
                view:SetBackgroundColor(properties:GetBackgroundColor())
            end
        end
    end

    action ClickDown

    end

    action TouchDown

    end
end