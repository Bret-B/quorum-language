package Libraries.Interface.Layouts

use Libraries.Language.Support.CompareResult
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.ColorGroup
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Texture

class LayoutProperties 
    
    public number FILL = -1.0
    public number FIT_CONTENTS = -2.0
    public number FIT_FONT = -3.0

    number xPercentage = 0.0
    number yPercentage = 0.0
    number offsetX = 0
    number offsetY = 0
    number widthPercentage = 0.0
    number heightPercentage = 0.0
    number widthOffset = 0
    number heightOffset = 0
    number minimumWidth = 0
    number minimumHeight = 0
    number maximumWidth = widthPercentage:GetPositiveInfinityValue()
    number maximumHeight = heightPercentage:GetPositiveInfinityValue()
    number maximumContainerWidth = widthPercentage:GetPositiveInfinityValue()
    number maximumContainerHeight = heightPercentage:GetPositiveInfinityValue()

    number leftPadding = 0
    number rightPadding = 0
    number bottomPadding = 0
    number topPadding = 0

    ColorGroup backgroundColor = undefined
    ColorGroup borderColor = undefined
    number borderThickness = 0
    // Border edging value here -- bitmask, pseudo-enum, object?
    
    Font font = undefined
    integer baseFontSize = 14
    Color fontColor
    text labelText = ""

    // For simplicity, may want to replace this with a Drawable instead, or have
    // helper actions for using a Drawable for this. Texture has performance
    // advantages, however.
    Texture icon = undefined

    number zoomFactor = 1.0

    /*
    What point along the Item2D, as a percentage, should be placed at the given
    x and y coordinates defined by the x/y percentage and offsets. For example,
    a value of 0.5 for the origin x and y percent will center the Item at the
    given position.
    */
    number originPercentageX = 0
    number originPercentageY = 0

    boolean setX = false
    boolean setY = false
    boolean setWidth = false
    boolean setHeight = false

    on create
        fontColor = fontColor:Black()
    end

    action SetPercentageX(number x)
        xPercentage = x
        setX = true
    end

    action GetPercentageX returns number
        return xPercentage
    end

    action SetPercentageY(number y)
        yPercentage = y
        setY = true
    end

    action GetPercentageY returns number
        return yPercentage
    end

    action SetOffsetX(number x)
        offsetX = x
        setX = true
    end

    action GetOffsetX returns number
        return offsetX
    end

    action SetOffsetY(number y)
        offsetY = y
        setY = true
    end

    action GetOffsetY returns number
        return offsetY
    end

    action SetPercentageWidth(number width)
        widthPercentage = width
        setWidth = true
    end

    action GetPercentageWidth returns number
        return widthPercentage
    end

    action SetPercentageHeight(number height)
        heightPercentage = height
        setHeight = true
    end

    action GetPercentageHeight returns number
        return heightPercentage
    end

    action SetWidthOffset(number width)
        widthOffset = width
        setWidth = true
    end

    action GetWidthOffset returns number
        return widthOffset
    end

    action SetHeightOffset(number height)
        heightOffset = height
        setHeight = true
    end

    action GetHeightOffset returns number
        return heightOffset
    end

    action SetMinimumWidth(number width)
        minimumWidth = width
    end

    action GetMinimumWidth returns number
        return minimumWidth
    end

    action SetMinimumHeight(number height)
        minimumHeight = height
    end

    action GetMinimumHeight returns number
        return minimumHeight
    end

    action SetMaximumWidth(number width)
        maximumWidth = width
    end

    action GetMaximumWidth returns number
        return maximumWidth
    end

    action SetMaximumHeight(number height)
        maximumHeight = height
    end

    action GetMaximumHeight returns number
        return maximumHeight
    end

    action SetMaximumContainerWidth(number maximum)
        maximumContainerWidth = maximum
    end

    action GetMaximumContainerWidth returns number
        return maximumContainerWidth
    end

    action SetMaximumContainerHeight(number maximum)
        maximumContainerHeight = maximum
    end

    action GetMaximumContainerHeight returns number
        return maximumContainerHeight
    end

    action SetPercentageOriginX(number x)
        originPercentageX = x
        setX = true
    end

    action GetPercentageOriginX returns number
        return originPercentageX
    end

    action SetPercentageOriginY(number y)
        originPercentageY = y
        setY = true
    end

    action GetPercentageOriginY returns number
        return originPercentageY
    end

    action IsPositioningInX returns boolean
        return setX
    end

    action IsPositioningInY returns boolean
        return setY
    end

    action IsSettingWidth returns boolean
        return setWidth
    end

    action IsSettingHeight returns boolean
        return setHeight
    end

    action SetPositioningInX(boolean enable)
        setX = enable
    end

    action SetPositioningInY(boolean enable)
        setY = enable
    end

    action SetWidthSetting(boolean enable)
        setWidth = enable
    end

    action SetHeightSetting(boolean enable)
        setHeight = enable
    end

    action SetLeftPadding(number padding)
        leftPadding = padding
    end

    action SetRightPadding(number padding)
        rightPadding = padding
    end

    action SetBottomPadding(number padding)
        bottomPadding = padding
    end

    action SetTopPadding(number padding)
        topPadding = padding
    end

    action GetLeftPadding returns number
        return leftPadding
    end

    action GetRightPadding returns number
        return rightPadding
    end

    action GetBottomPadding returns number
        return bottomPadding
    end

    action GetTopPadding returns number
        return topPadding
    end

    action SetBackgroundColor(ColorGroup color)
        backgroundColor = color
    end

    action GetBackgroundColor returns ColorGroup
        return backgroundColor
    end

    action SetBorderColor(ColorGroup color)
        borderColor = color
    end

    action GetBorderColor returns ColorGroup
        return borderColor
    end

    action SetBorderThickness(number thickness)
        borderThickness = thickness
    end

    action GetBorderThickness returns number
        return borderThickness
    end

    /*
    Font font = undefined
    integer baseFontSize = 14
    Color fontColor
    */

    action SetFont(Font font)
        me:font = font
        if font not= undefined
            font:SetSize(cast(integer, baseFontSize * zoomFactor))
        end
    end

    action GetFont returns Font
        return font
    end

    action SetFontSize(integer size)
        baseFontSize = size
        if font not= undefined
            font:SetSize(cast(integer, baseFontSize * zoomFactor))
        end
    end

    action GetFontSize returns integer
        return baseFontSize
    end

    action SetFontColor(Color color)
        fontColor = color
    end

    action GetFontColor returns Color
        return fontColor
    end

    action SetLabelText(text value)
        labelText = value
    end

    action GetLabelText returns text
        return labelText
    end

    action SetZoomFactor(number zoom)
        zoomFactor = zoom
    end

    action GetZoomFactor returns number
        return zoomFactor
    end

    action Compare(Object object) returns CompareResult
        if object is LayoutProperties
            LayoutProperties layout = cast(LayoutProperties, object)
            number myWidth = GetMaximumContainerWidth()
            number testWidth = layout:GetMaximumContainerWidth()
            CompareResult result

            if myWidth < testWidth
                result:result = result:SMALLER
            elseif myWidth = testWidth
                number myHeight = GetMaximumContainerHeight()
                number testHeight = layout:GetMaximumContainerHeight()

                if myHeight < testHeight
                    result:result = result:SMALLER
                elseif myHeight = testHeight
                    result:result = result:EQUAL
                else
                    result:result = result:LARGER
                end
            else
                result:result = result:LARGER
            end

            return result
        else
            return parent:Object:Compare(object)
        end
    end
end