package Libraries.Interface.Layouts

use Libraries.Interface.Item2D
use Libraries.Containers.Array
use Libraries.Language.Support.CompareResult

class Layout 

    action Apply(Item2D item, number containerWidth, number containerHeight)

        LayoutProperties properties = undefined
        Array<LayoutProperties> array = item:GetLayoutProperties()
        integer counter = array:GetSize()

        /*
        Layouts are sorted by minimum width, or minimum height if minimum
        widths are equal. When we find an invalid layout, it's assumed that
        all following layouts will also be invalid.
        */
        repeat while counter > 0
            counter = counter - 1
            LayoutProperties temp = array:Get(counter)
            if (temp:GetMaximumContainerWidth() >= containerWidth and temp:GetMaximumContainerHeight() >= containerHeight)
                properties = temp
            end
        end

        if properties not= undefined
            number width = item:GetWidth()
            number height = item:GetHeight()

            if properties:IsSettingWidth()
                width = containerWidth * properties:GetPercentageWidth() + properties:GetWidthOffset() 
            end

            if properties:IsSettingHeight()
                height = containerHeight * properties:GetPercentageHeight() + properties:GetHeightOffset()
            end

            if width < properties:GetMinimumWidth()
                width = properties:GetMinimumWidth()
            elseif width > properties:GetMaximumWidth()
                width = properties:GetMaximumWidth()
            end

            if height < properties:GetMinimumHeight()
                height = properties:GetMinimumHeight()
            elseif height > properties:GetMaximumHeight()
                height = properties:GetMaximumHeight()
            end

            if properties:IsPositioningInX()
                if properties:IsPositioningInY()
                    item:SetPosition(containerWidth * properties:GetPercentageX() + properties:GetOffsetX() - width * properties:GetPercentageOriginX(),
                        containerHeight * properties:GetPercentageY() + properties:GetOffsetY() - height * properties:GetPercentageOriginY())
                else
                    item:SetX(containerWidth * properties:GetPercentageX() + properties:GetOffsetX() - width * properties:GetPercentageOriginX())
                end
            elseif properties:IsPositioningInY()
                item:SetY(containerHeight * properties:GetPercentageY() + properties:GetOffsetY() - height * properties:GetPercentageOriginY())
            end

            if properties:IsSettingWidth()
                if properties:IsSettingHeight()
                    item:SetSize(width, height)
                else
                    item:SetWidth(width)
                end
            elseif properties:IsSettingHeight()
                item:SetHeight(height)
            end
        end

        Layout(item)

        counter = 0
        Array<Item2D> children = item:GetChildren()
        repeat while counter < children:GetSize()
            children:Get(counter):Resize()
            counter = counter + 1
        end
    end

    action Layout(Item2D item)
        
    end
end