package Libraries.Interface.Events

use Libraries.Containers.List
use Libraries.Containers.Blueprints.Iterator

class KeyboardProcessor
    
    /*  The Update action will check if any keyboard events have occured, and if
        there are any, it will add them to the events list. This will be called
        on every frame of a game. */
    system action Update

    List<KeyboardEvent> events
    List<KeyboardListener> listeners

    action AddListener(KeyboardListener listener)
        listeners:Add(listener)
   end

    action RemoveListener(KeyboardListener listener)
        listeners:Remove(listener)
    end

    action ProcessEvents

        if not events:IsEmpty() and not listeners:IsEmpty()

            Iterator<KeyboardListener> listenIterator = listeners:GetIterator()
            KeyboardEvent currentEvent = undefined
            KeyboardListener currentListener = undefined
            
            repeat while not events:IsEmpty()
                currentEvent = events:RemoveFromFront()

                repeat while listenIterator:HasNext()
                    currentListener = listenIterator:Next()
                    if currentEvent:eventType = currentEvent:PRESSED_KEY
                        currentListener:PressedKey(currentEvent)
                    elseif currentEvent:eventType = currentEvent:RELEASED_KEY
                        currentListener:ReleasedKey(currentEvent)
                    end
                end

                listenIterator:Rewind()
            end
        end
    end
end