package Libraries.Interface.Events

use Libraries.Containers.List
use Libraries.Containers.Blueprints.Iterator

class MouseProcessor

    List<MouseEvent> events
    List<MouseListener> listeners
    List<MouseMovementListener> moveListeners
    List<MouseWheelListener> wheelListeners

    /*  Deletes any old events that may be in the events list, then gets all
        current events, puts them in the events variable, and returns it. */
    action GetCurrentEvents returns List<MouseEvent>
        events:Empty()
        GetCurrentEventsNative()
        return events
    end
        
    system action GetCurrentEventsNative

    action AddListener(MouseListener listener)
        listeners:Add(listener)
   end

    action RemoveListener(MouseListener listener)
        listeners:Remove(listener)
    end

    action ProcessEvents

        if not events:IsEmpty()

            Iterator<MouseListener> clickIterator = listeners:GetIterator()
            Iterator<MouseMovementListener> moveIterator = moveListeners:GetIterator()
            Iterator<MouseWheelListener> wheelIterator = wheelListeners:GetIterator()

            MouseEvent currentEvent = undefined
            
            repeat while not events:IsEmpty()
                currentEvent = events:RemoveFromFront()

                if currentEvent:eventType = currentEvent:MOVED_MOUSE
                    repeat while moveIterator:HasNext()
                        moveIterator:Next():MovedMouse(currentEvent)
                    end
                    moveIterator:Rewind()
                elseif currentEvent:eventType = currentEvent:DRAGGED_MOUSE
                    repeat while moveIterator:HasNext()
                        moveIterator:Next():DraggedMouse(currentEvent)
                    end
                    moveIterator:Rewind()
                elseif currentEvent:eventType = currentEvent:CLICKED_MOUSE
                    repeat while clickIterator:HasNext()
                        clickIterator:Next():ClickedMouse(currentEvent)
                    end
                    clickIterator:Rewind()
                elseif currentEvent:eventType = currentEvent:RELEASED_MOUSE
                    repeat while clickIterator:HasNext()
                        clickIterator:Next():ReleasedMouse(currentEvent)
                    end
                    clickIterator:Rewind()
                elseif currentEvent:eventType = currentEvent:SCROLLED_MOUSE
                    repeat while wheelIterator:HasNext()
                        wheelIterator:Next():ScrolledMouse(currentEvent)
                    end
                    wheelIterator:Rewind()
                end
            end
        end
    end

end