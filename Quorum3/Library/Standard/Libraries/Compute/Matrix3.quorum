package Libraries.Compute

use Libraries.Compute.all
use Libraries.Containers.Array
use Libraries.Language.Errors.MatrixError

/*
Matrix3 is a class representing a 3x3 matrix.

Attribute: Author Amanda Austin

Attribute: Example

use Libraries.Compute.Matrix3

Matrix3 matrix

matrix:Set(2, 5, 0, 1, 3, 0, 0, 0, 1)
matrix:Inverse()

number a00 = matrix:a00
number a01 = matrix:a01
number a02 = matrix:a02
number a10 = matrix:a10
number a11 = matrix:a11
number a12 = matrix:a12
number a20 = matrix:a20
number a21 = matrix:a21
number a22 = matrix:a22

output "The new matrix is:"
output "|" + a00 + ", " + a01 + ", " + a02 + "|"
output "|" + a10 + ", " + a11 + ", " + a12 + "|"
output "|" + a20 + ", " + a21 + ", " + a22 + "|"

*/
class Matrix3 
    public number a00 = 1
    public number a01 = 0
    public number a02 = 0
    public number a10 = 0
    public number a11 = 1
    public number a12 = 0
    public number a20 = 0
    public number a21 = 0
    public number a22 = 1

    Math math

    /*
    This action sets the matrix to the identity matrix.

    Attribute: Author Amanda Austin

    Attribute: Returns The matrix as the identity matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    matrix:IdentityMatrix()

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action IdentityMatrix returns Matrix3
        a00 = 1
        a01 = 0
        a02 = 0
        a10 = 0
        a11 = 1
        a12 = 0
        a20 = 0
        a21 = 0
        a22 = 1
        return me
    end

    /*
    This action performs the matrix multiplication matrixA * matrixB. The result
    is stored in the calling matrix. Calling C:Multiply(A, B) results in C = AB.

    Attribute: Author Amanda Austin

    Attribute: Parameter matrixA The left hand matrix to multiply
    Attribute: Parameter matrixB The right hand matrix to multiply

    Attribute: Returns The product of the two matrices

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrixA
    Matrix3 matrixB
    Matrix3 product

    matrixA:Set(0, 2, 4, 6, 8, 10, 12, 14, 16)
    matrixB:Set(1, 3, 5, 7, 9, 11, 13, 15, 17)

    product:Multiply(matrixA, matrixB)

    number a00 = product:a00
    number a01 = product:a01
    number a02 = product:a02
    number a10 = product:a10
    number a11 = product:a11
    number a12 = product:a12
    number a20 = product:a20
    number a21 = product:a21
    number a22 = product:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
     action Multiply(Matrix3 matrixA, Matrix3 matrixB) returns Matrix3
        number v00 = matrixA:a00 * matrixB:a00 + matrixA:a01 * matrixB:a10 + matrixA:a02 * matrixB:a20
        number v01 = matrixA:a00 * matrixB:a01 + matrixA:a01 * matrixB:a11 + matrixA:a02 * matrixB:a21
        number v02 = matrixA:a00 * matrixB:a02 + matrixA:a01 * matrixB:a12 + matrixA:a02 * matrixB:a22

        number v10 = matrixA:a10 * matrixB:a00 + matrixA:a11 * matrixB:a10 + matrixA:a12 * matrixB:a20
        number v11 = matrixA:a10 * matrixB:a01 + matrixA:a11 * matrixB:a11 + matrixA:a12 * matrixB:a21
        number v12 = matrixA:a10 * matrixB:a02 + matrixA:a11 * matrixB:a12 + matrixA:a12 * matrixB:a22

        number v20 = matrixA:a20 * matrixB:a00 + matrixA:a21 * matrixB:a10 + matrixA:a22 * matrixB:a20
        number v21 = matrixA:a20 * matrixB:a01 + matrixA:a21 * matrixB:a11 + matrixA:a22 * matrixB:a21
        number v22 = matrixA:a20 * matrixB:a02 + matrixA:a21 * matrixB:a12 + matrixA:a22 * matrixB:a22

        a00 = v00
        a01 = v01
        a02 = v02
        a10 = v10
        a11 = v11
        a12 = v12
        a20 = v20
        a21 = v21
        a22 = v22

        return me
    end
 
    /*
    This action multiplies the calling matrix by the passed matrix and stores
    the result in the calling matrix. Calling A:Multiply(B) results in A = AB.

    Attribute: Author Amanda Austin

    Attribute: Parameter matrix The matrix to multiply by

    Attribute: Returns The calling matrix after multiplication

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrixA
    Matrix3 matrixB

    matrixA:Set(0, 2, 4, 6, 8, 10, 12, 14, 16)
    matrixB:Set(1, 3, 5, 7, 9, 11, 13, 15, 17)

    matrixA:Multiply(matrixB)

    number a00 = matrixA:a00
    number a01 = matrixA:a01
    number a02 = matrixA:a02
    number a10 = matrixA:a10
    number a11 = matrixA:a11
    number a12 = matrixA:a12
    number a20 = matrixA:a20
    number a21 = matrixA:a21
    number a22 = matrixA:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action Multiply(Matrix3 matrix) returns Matrix3
        number v00 = a00 * matrix:a00 + a01 * matrix:a10 + a02 * matrix:a20
        number v01 = a00 * matrix:a01 + a01 * matrix:a11 + a02 * matrix:a21
        number v02 = a00 * matrix:a02 + a01 * matrix:a12 + a02 * matrix:a22

        number v10 = a10 * matrix:a00 + a11 * matrix:a10 + a12 * matrix:a20
        number v11 = a10 * matrix:a01 + a11 * matrix:a11 + a12 * matrix:a21
        number v12 = a10 * matrix:a02 + a11 * matrix:a12 + a12 * matrix:a22

        number v20 = a20 * matrix:a00 + a21 * matrix:a10 + a22 * matrix:a20
        number v21 = a20 * matrix:a01 + a21 * matrix:a11 + a22 * matrix:a21
        number v22 = a20 * matrix:a02 + a21 * matrix:a12 + a22 * matrix:a22

        a00 = v00
        a01 = v01
        a02 = v02
        a10 = v10
        a11 = v11
        a12 = v12
        a20 = v20
        a21 = v21
        a22 = v22

        return me
    end

    /*
    This action sets the matrix to the rotation matrix for the passed angle in
    degrees counter-clockwise. A rotation matrix is often used in graphics
    programming to represent rotations.

    Attribute: Author Amanda Austin

    Attribute: Parameter degrees The angle in degrees

    Attribute: Returns The matrix as a rotation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:SetToRotation(45)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action SetToRotation(number degrees) returns Matrix3
        return SetToRotationInRadians(math:DegreesToRadians(degrees))
    end

    /*
    This action sets the matrix to the rotation matrix for the passed angle in
    degrees counter-clockwise about the passed axis. A rotation matrix is often 
    used in graphics programming to represent rotations.

    Attribute: Author Amanda Austin

    Attribute: Parameter axis The rotation axis
    Attribute: Parameter degrees The angle in degrees

    Attribute: Returns The matrix as a rotation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector3

    Matrix3 matrix
    Vector3 axis
    
    axis:Set(0, 0, 1)
    matrix:SetToRotation(axis, 45)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action SetToRotation(Vector3 axis, number degrees) returns Matrix3
        return SetToRotation(axis, math:Cosine(math:DegreesToRadians(degrees)), math:Sine(math:DegreesToRadians(degrees)))
    end

    /*
    This action sets the matrix to a rotation matrix about the passed axis using
    the cosine and sine of the angle of rotation. A rotation matrix is often
    used in graphics programming to represent rotations.

    Attribute: Author Amanda Austin

    Attribute: Parameter axis The rotation axis
    Attribute: Parameter cosine The cosine of the angle
    Attribute: Parameter sine The sine of the angle

    Attribute: Returns The matrix as a rotation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector3
    use Libraries.Compute.Math

    Math math

    Matrix3 matrix
    Vector3 axis

    number cosine = math:SquareRoot(2) / 2
    number sine = math:SquareRoot(2) / 2

    axis:Set(0, 0, 1)

    matrix:SetToRotation(axis, cosine, sine)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetToRotation(Vector3 axis, number cosine, number sine) returns Matrix3        
        number oc = 1.0 - cosine
        a00 = oc * axis:GetX() * axis:GetX() + cosine
        a01 = oc * axis:GetX() * axis:GetY() - axis:GetZ() * sine
        a02 = oc * axis:GetZ() * axis:GetX() + axis:GetY() * sine
        a10 = oc * axis:GetX() * axis:GetY() + axis:GetZ() * sine
        a11 = oc * axis:GetY() * axis:GetY() + cosine
        a12 = oc * axis:GetY() * axis:GetZ() - axis:GetX() * sine
        a20 = oc * axis:GetZ() * axis:GetX() - axis:GetY() * sine
        a21 = oc * axis:GetY() * axis:GetZ() + axis:GetX() * sine
        a22 = oc * axis:GetZ() * axis:GetZ() + cosine

        return  me
    end

    /*
    This action sets the matrix to the rotation matrix for the passed angle in
    radians. A rotation matrix is often used in graphics programming to 
    represent rotations.

    Attribute: Author Amanda Austin

    Attribute: Parameter radians The angle in radians

    Attribute: Returns The matrix as a rotation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Math

    Math math

    Matrix3 matrix

    matrix:SetToRotationInRadians(math:pi / 4)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action SetToRotationInRadians(number radians) returns Matrix3
        number cosine = math:Cosine(radians)
        number sine = math:Sine(radians)
        
        a00 = cosine
        a10 = sine
        a20 = 0

        a01 = sine * -1
        a11 = cosine
        a21 = 0

        a02 = 0
        a12 = 0
        a22 = 1

        return me
    end
        
    /*
    This action sets the matrix to a translation matrix by the given x and y
    values. A translation matrix is often used in graphics programming to 
    represent translations.

    Attribute: Author Amanda Austin

    Attribute: Parameter x The x value of the translation
    Attribute: Parameter y The y value of the translation

    Attribute: Returns The matrix as a translation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:SetToTranslation(4, 5)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action SetToTranslation(number x, number y) returns Matrix3
        a00 = 1
        a10 = 0
        a20 = 0
        a01 = 0
        a11 = 1
        a21 = 0
        a02 = x
        a12 = y
        a22 = 1

        return me
    end

    /*
    This action sets the matrix to a translation matrix by the given vector
    representing the translation. A translation matrix is often used in graphics
    programming to represent translations.

    Attribute: Author Amanda Austin
    
    Attribute: Parameter translation The translation vector

    Attribute: Returns The matrix as a translation matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 translation

    translation:Set(4, 5)

    matrix:SetToTranslation(translation)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetToTranslation(Vector2 translation) returns Matrix3
        a00 = 1
        a10 = 0
        a20 = 0
        a01 = 0
        a11 = 1
        a21 = 0
        a02 = translation:GetX()
        a12 = translation:GetY()
        a22 = 1

        return me
    end

    /*
    This action ses the matrix to a scaling matrix with the passed scales in the
    x and y directions. A scaling matrix is often used in graphics programming
    to represent a scale.

    Attribute: Author Amanda Austin

    Attribute: Parameter scaleX The scale in the x-direction
    Attribute: Parameter scaleY The scale in the y-direction

    Attribute: Returns The matrix as a scale matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:SetToScaling(2, 2)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetToScaling(number scaleX, number scaleY) returns Matrix3
        a00 = scaleX
        a01 = 0
        a02 = 0
        a10 = 0
        a11 = scaleY
        a12 = 0
        a20 = 0
        a21 = 0
        a22 = 1

        return me
    end

    /*
    This action ses the matrix to a scaling matrix with the passed vector as the
    scale vector. A scaling matrix is often used in graphics programming
    to represent a scale.

    Attribute: Author Amanda Austin

    Attribute: Parameter scale The vector representing the scale

    Attribute: Returns The matrix as a scale matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 scale

    scale:Set(2, 2)

    matrix:SetToScaling(scale)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetToScaling(Vector2 scale) returns Matrix3
        a00 = scale:GetX()
        a01 = 0
        a02 = 0
        a10 = 0
        a11 = scale:GetY()
        a12 = 0
        a20 = 0
        a21 = 0
        a22 = 1

        return me
    end

    /*
    This action computes the determinant of the matrix.

    Attribute: Example Amanda Austin

    Attribute: Returns The determinant of the matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:Set(2, 5, 0, 1, 3, 0, 0, 0, 1)

    number determinant = matrix:Determinant()

    output "The determinant of the matrix is " + determinant

    */
    action Determinant returns number
        return a00 * a11 * a22 + 
               a01 * a12 * a20 + 
               a02 * a10 * a21 -
               a00 * a12 * a21 -
               a01 * a10 * a22 -
               a02 * a11 * a20
    end

    /*
    This action computes the inverse of the matrix.

    Attribute: Author Amanda Austin

    Attribute: Returns The inverse of the matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:Set(2, 5, 0, 1, 3, 0, 0, 0, 1)

    matrix:Inverse()

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action Inverse returns Matrix3
        number determinant = Determinant()
        
        if determinant = 0
            MatrixError matrix
            matrix:SetErrorMessage("Matrix is not invertable if the determinant computes to 0.")
            alert(matrix)
        end

        number inverseDeterminant = 1.0 / determinant
        
        t00 = a11 * a22 - a21 * a12
        t10 = a20 * a12 - a10 * a22
        t20 = a10 * a21 - a20 * a11
        t01 = a21 * a02 - a01 * a22
        t11 = a00 * a22 - a20 * a02
        t21 = a20 * a01 - a00 * a21
        t02 = a01 * a12 - a11 * a02
        t12 = a10 * a02 - a00 * a12
        t22 = a00 * a11 - a10 * a01
        
        a00 = inverseDeterminant * t00
        a10 = inverseDeterminant * t10
        a20 = inverseDeterminant * t20
        a01 = inverseDeterminant * t01
        a11 = inverseDeterminant * t11
        a21 = inverseDeterminant * t21
        a02 = inverseDeterminant * t02
        a12 = inverseDeterminant * t12
        a22 = inverseDeterminant * t22

        return me
    end


    /*
    This action sets the values of the matrix using the values of the passed
    array. The values of the array are used in order to set the matrix values
    row by row. For example, the first element in the array is used to set the
    cell of the matrix in the first row and first column, the second element is
    used to set the cell of the matrix in the first row and second column, the
    third element for the first row and third column, the fourth element for the
    second row and first column, etc.

    Attribute: Author Amanda Austin

    Attribute: Parameter array The array that contains the values to set as the matrix values

    Attribute: Returns The matrix with the values from the array
    
    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Containers.Array

    Matrix3 matrix
    Array<number> array

    integer i = 0
    repeat 9 times
        array:Add(i)
        i = i + 1
    end

    matrix:Set(array)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Set(Array<number> array) returns Matrix3
        if array:GetSize() not= 9
            MatrixError matrix
            matrix:SetErrorMessage("The array must have exactly 9 values to be converted to a Matrix3 object.")
            alert(matrix)
        end

        a00 = array:Get(0)
        a01 = array:Get(1)
        a02 = array:Get(2)
        a10 = array:Get(3)
        a11 = array:Get(4)
        a12 = array:Get(5)
        a20 = array:Get(6)
        a21 = array:Get(7)
        a22 = array:Get(8)
        return me
    end

    /*
    This action sets the values of the array to the passed values.

    Attribute: Author Amanda Austin

    Attribute: Parameter a00 The value of the first row, first column
    Attribute: Parameter a01 The value of the first row, second column
    Attribute: Parameter a02 The value of the first row, third column
    Attribute: Parameter a10 The value of the second row, first column
    Attribute: Parameter a11 The value of the second row, second column
    Attribute: Parameter a12 The value of the second row, third column
    Attribute: Parameter a20 The value of the third row, first column
    Attribute: Parameter a21 The value of the third row, second column
    Attribute: Parameter a22 The value of the third row, third column

    Attribute: Returns The matrix with the passed values

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    matrix:Set(0, 1, 2, 3, 4, 5, 6, 7, 8)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Set(number a00, number a01, number a02, number a10, number a11, number a12, number a20, number a21, number a22) returns Matrix3
        me:a00 = a00
        me:a01 = a01
        me:a02 = a02
        me:a10 = a10
        me:a11 = a11
        me:a12 = a12
        me:a20 = a20
        me:a21 = a21
        me:a22 = a22
        return me
    end

    /*
    This action sets the matrix to be a copy of the passed matrix.

    Attribute: Author Amanda Austin

    Attribute: Parameter matrix The matrix to set this matrix as

    Attribute: Returns The matrix with the values from the other matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    Matrix3 copyMatrix

    copyMatrix:Set(8, 7, 6, 5, 4, 3, 2, 1, 0)
    matrix:Set(copyMatrix)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Set(Matrix3 matrix) returns Matrix3
        a00 = matrix:a00
        a01 = matrix:a01
        a02 = matrix:a02
        a10 = matrix:a10
        a11 = matrix:a11
        a12 = matrix:a12
        a20 = matrix:a20
        a21 = matrix:a21
        a22 = matrix:a22

        return me
    end

    /*
    This action creates and returns a new matrix that is a copy of the calling
    matrix

    Attribute: Author Amanda Austin

    Attribute: Returns A new matrix that is a copy of this matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    Matrix3 copyMatrix

    copyMatrix:Set(8, 7, 6, 5, 4, 3, 2, 1, 0)
    matrix = copyMatrix:Copy()

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Copy returns Matrix3
        Matrix3 matrix
        matrix:a00 = a00
        matrix:a01 = a01
        matrix:a02 = a02
        matrix:a10 = a10
        matrix:a11 = a11
        matrix:a12 = a12
        matrix:a20 = a20
        matrix:a21 = a21
        matrix:a22 = a22

        return matrix
    end

    /*
    This action sets the matrix using the values of the passed Affine2. An
    Affine2 is essentially a 3-by-3 matrix used to represent transformations
    where the last row is always (0, 0, 1).

    Attribute: Author Amanda Austin

    Attribute: Parameter affine The affine to use to set the matrix

    Attribute: Returns The matrix with the values from the affine

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Affine2

    Matrix3 matrix
    Affine2 affine

    affine:Identity()
    
    matrix:Set(affine)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Set(Affine2 affine) returns Matrix3
        a00 = affine:M00
        a10 = affine:M10
        a20 = 0
        a01 = affine:M01
        a11 = affine:M11
        a21 = 0
        a02 = affine:M02
        a12 = affine:M12
        a22 = 1

        return me
    end

    /*
    This action sets the matrix to the values of the passed 4-by-4 matrix. The
    last row and last column of the passed 4-by-4 matrix are not used to set
    this matrix.

    Attribute: Author Amanda Austin

    Attribute: Parameter matrix The 4-by-4 matrix used to set the values of this matrix
    
    Attribute: Returns The matrix with the values from the 4-by-4 matrix

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Matrix4

    Matrix3 matrix
    Matrix4 biggerMatrix

    biggerMatrix:Set(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)

    matrix:Set(biggerMatrix)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Set(Matrix4 matrix) returns Matrix3
        a00 = matrix:values:Get(matrix:M00)
        a10 = matrix:values:Get(matrix:M10)
        a20 = matrix:values:Get(matrix:M20)
        a01 = matrix:values:Get(matrix:M01)
        a11 = matrix:values:Get(matrix:M11) 
        a21 = matrix:values:Get(matrix:M21)
        a02 = matrix:values:Get(matrix:M02)
        a12 = matrix:values:Get(matrix:M12)
        a22 = matrix:values:Get(matrix:M22)
        return me
    end


    /*
    This action adds a translational component to the matrix. This action is
    mainly used in graphics programming to represent translations.

    Attribute: Author Amanda Austin

    Attribute: Parameter vector The vector to use as the translational component
    
    Attribute: Returns The matrix with the translational component
    
    Attribute: Example
    
    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 translation

    matrix:IdentityMatrix()
    translation:Set(4, 5)

    matrix:AddTranslationalComponent(translation)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action AddTranslationalComponent(Vector2 vector) returns Matrix3
        a02 = a02 + vector:GetX()
        a12 = a12 + vector:GetY()
        return me
    end

    /*
    This action adds a translational component to the matrix. This action is
    mainly used in graphics programming to represent translations.

    Attribute: Author Amanda Austin

    Attribute: Parameter x The x component of the translation
    Attribute: Parameter y The y component of the translation
    
    Attribute: Returns The matrix with the translational component
    
    Attribute: Example
    
    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:IdentityMatrix()

    matrix:AddTranslationalComponent(4, 5)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"
    
    */
    action AddTranslationalComponent(number x, number y) returns Matrix3
        a02 = a02 + x
        a12 = a12 + y
        return me
    end
    
    /*
    This action adds a translational component to the matrix. This action is
    mainly used in graphics programming to represent translations.

    Attribute: Author Amanda Austin

    Attribute: Parameter vector The vector to use as the translational component
    
    Attribute: Returns The matrix with the translational component
    
    Attribute: Example
    
    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 translation

    matrix:IdentityMatrix()
    translation:Set(4, 5)

    matrix:AddTranslationalComponent(translation)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action AddTranslationalComponent(Vector3 vector) returns Matrix3
        a02 = a02 + vector:GetX()
        a12 = a12 + vector:GetY()
        return me
    end

    /*
    This action translates the matrix by the given x and y translations.

    Attribute: Author Amanda Austin

    Attribute: Parameter x The x component of the translation
    Attribute: Parameter y The y component of the translation

    Attribute: Returns The matrix after translation

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    matrix:IdentityMatrix()

    matrix:Translate(4, 5)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Translate(number x, number y) returns Matrix3
        Matrix3 temporary

        temporary:a00 = 1
        temporary:a10 = 0
        temporary:a20 = 0
        temporary:a01 = 0
        temporary:a11 = 1
        temporary:a21 = 0
        temporary:a02 = x
        temporary:a12 = y
        temporary:a22 = 1
        
        Multiply(me, temporary)

        return me
    end

    /*
    This action translates the matrix by the given translation vector.

    Attribute: Author Amanda Austin

    Attribute: Parameter translation The translation vector

    Attribute: Returns The matrix after translation

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 translation

    matrix:IdentityMatrix()
    translation:Set(4, 5)

    matrix:Translate(translation)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */   
    action Translate(Vector2 translation) returns Matrix3
        Matrix3 temporary

        temporary:a00 = 1
        temporary:a10 = 0
        temporary:a20 = 0
        temporary:a01 = 0
        temporary:a11 = 1
        temporary:a21 = 0
        temporary:a02 = translation:GetX()
        temporary:a12 = translation:GetY()
        temporary:a22 = 1
        
        Multiply(me, temporary)
        
        return me
    end

    /*
    This action rotates the matrix by the given angle in degrees.

    Attribute: Author Amanda Austin

    Attribute: Parameter degrees The angle in degrees

    Attribute: Returns The matrix after rotation

    Attribute: Example

    use Libraries.Compute.Matrix3
    
    Matrix3 matrix
    matrix:IdentityMatrix()

    matrix:Rotate(45)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Rotate(number degrees) returns Matrix3
       return RotateInRadians(math:DegreesToRadians(degrees))
    end

    /*
    This action rotates the matrix by the given angle in radians.

    Attribute: Author Amanda Austin

    Attribute: Parameter radians The angle in radians

    Attribute: Returns The matrix after rotation

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Math

    Math math
    
    Matrix3 matrix
    matrix:IdentityMatrix()

    matrix:Rotate(math:pi / 4)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action RotateInRadians(number radians) returns Matrix3
        if radians = 0
            return me
        end

        number cos = math:Cosine(radians)
        number sin = math:Sine(radians)

        Matrix3 temporary

        temporary:a00 = cos
        temporary:a10 = sin
        temporary:a20 = 0
        temporary:a01 = sin * -1
        temporary:a11 = cos
        temporary:a21 = 0
        temporary:a02 = 0
        temporary:a12 = 0
        temporary:a22 = 1

        Multiply(me, temporary)

        return me
    end

    /*
    This action scales the matrix by the given scale values in the x and y
    directions.

    Attribute: Author Amanda Austin

    Attribute: Parameter scaleX The scale in the x-direction
    Attribute: Parameter scaleY The scale in the y-direction

    Attribute: Returns The matrix after scaling

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix
    matrix:IdentityMatrix()
    
    matrix:Scale(2, 2)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Scale(number scaleX, number scaleY) returns Matrix3
        Matrix3 temporary
        temporary:a00 = scaleX
        temporary:a10 = 0
        temporary:a20 = 0
        temporary:a01 = 0
        temporary:a11 = scaleY
        temporary:a21 = 0
        temporary:a02 = 0
        temporary:a12 = 0
        temporary:a22 = 1
        
        Multiply(me, temporary)

        return me
    end

    /*
    This action scales the matrix by the given scale vector.

    Attribute: Author Amanda Austin

    Attribute: Parameter scale The scale vector

    Attribute: Returns The matrix after scaling

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 scale

    matrix:IdentityMatrix()
    scale:Set(2, 2)
    
    matrix:Scale(scale)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Scale(Vector2 scale) returns Matrix3
        Matrix3 temporary
        temporary:a00 = scale:GetX()
        temporary:a10 = 0
        temporary:a20 = 0
        temporary:a01 = 0
        temporary:a11 = scale:GetY()
        temporary:a21 = 0
        temporary:a02 = 0
        temporary:a12 = 0
        temporary:a22 = 1
        
        Multiply(me, temporary)
        
        return me
    end

    /*
    This action gets the translational component of the matrix.

    Attribute: Author Amanda Austin

    Attribute: Returns The translational component as a 2D vector (Vector2)

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 translation

    matrix:IdentityMatrix()

    matrix:AddTranslationalComponent(4, 5)

    translation = matrix:GetTranslation()

    output "The translation is [" + translation:GetX() + ", " + translation:GetY() + "]"

    */
    action GetTranslation returns Vector2
        Vector2 position
        position:Set(a02, a12)
        return position
    end

    /*
    This action gets the scale component of the matrix.

    Attribute: Author Amanda Austin

    Attribute: Returns The scale component as a 2D vector (Vector2)

    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 scale

    matrix:IdentityMatrix()

    matrix:SetToScaling(2, 2)

    scale = matrix:GetScale()

    output "The scale is [" + scale:GetX() + ", " + scale:GetY() + "]"

    */
    action GetScale returns Vector2
        Vector2 scale
        scale:Set(math:SquareRoot(a00 * a00 + a01 * a01),
                  math:SquareRoot(a10 * a10 + a11 * a11))

        return scale
    end

    /*
    This action gets the rotation of the matrix in degrees.

    Attribute: Author Amanda Austin

    Attribute: Returns The rotation in degrees of the matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:IdentityMatrix()
    matrix:SetToRotation(45)

    number rotation = matrix:GetRotation()

    output "The rotation is " + rotation + " degrees."

    */
    action GetRotation returns number
        return math:RadiansToDegrees(math:InverseTangent(a10, a00))
    end

    /*
    This action gets the rotation of the matrix in radians.

    Attribute: Author Amanda Austin

    Attribute: Returns The rotation in radians of the matrix

    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:IdentityMatrix()
    matrix:SetToRotation(45)

    number rotation = matrix:GetRotationInRadians()

    output "The rotation is " + rotation + " radians."

    */
    action GetRotationInRadians returns number
        return math:InverseTangent(a10, a00)
    end

    /*
    This action sets the scale component of the matrix to the passed scale
    value.

    Attribute: Author Amanda Austin

    Attribute: Parameter scale The scale value to set

    Attribute: Returns The matrix with the scale component set
    
    Attribute: Example

    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:IdentityMatrix()

    matrix:SetScale(2)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetScale(number scale) returns Matrix3
        a00 = a00 * scale
        a11 = a11 * scale

        return me
    end

    /*
    This action sets the scale component of the matrix to the passed scale
    vector, which is a 3D vector. The z-component of the vector is ignored.

    Attribute: Author Amanda Austin

    Attribute: Parameter scale The scale vector to set as the scale component

    Attribute: Returns The matrix with the scale component set
    
    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector3

    Matrix3 matrix
    Vector3 scale

    matrix:IdentityMatrix()
    scale:Set(2, 2, 2)

    matrix:SetScale(scale)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetScale(Vector3 scale) returns Matrix3
        a00 = a00 * scale:GetX()
        a11 = a11 * scale:GetY()

        return me
    end

    /*
    This action sets the scale component of the matrix to the passed scale
    vector, which is a 2D vector. 

    Attribute: Author Amanda Austin

    Attribute: Parameter scale The scale vector to set as the scale component

    Attribute: Returns The matrix with the scale component set
    
    Attribute: Example

    use Libraries.Compute.Matrix3
    use Libraries.Compute.Vector2

    Matrix3 matrix
    Vector2 scale

    matrix:IdentityMatrix()
    scale:Set(2, 2)

    matrix:SetScale(scale)

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action SetScale(Vector2 scale) returns Matrix3
        a00 = a00 * scale:GetX()
        a11 = a11 * scale:GetY()

        return me
    end

    /*
    This action transposes the matrix.

    Attribute: Author Amanda Austin

    Attribute: Returns The transpose of the matrix

    Attribute: Example
    
    use Libraries.Compute.Matrix3

    Matrix3 matrix

    matrix:Set(0, 1, 2, 3, 4, 5, 6, 7, 8)

    matrix:Transpose()

    number a00 = matrix:a00
    number a01 = matrix:a01
    number a02 = matrix:a02
    number a10 = matrix:a10
    number a11 = matrix:a11
    number a12 = matrix:a12
    number a20 = matrix:a20
    number a21 = matrix:a21
    number a22 = matrix:a22

    output "The new matrix is:"
    output "|" + a00 + ", " + a01 + ", " + a02 + "|"
    output "|" + a10 + ", " + a11 + ", " + a12 + "|"
    output "|" + a20 + ", " + a21 + ", " + a22 + "|"

    */
    action Transpose returns Matrix3
        number v01 = a10
        number v02 = a20
        number v10 = a01
        number v12 = a21
        number v20 = a02
        number v21 = a12

        a01 = v01
        a02 = v02
        a10 = v10
        a12 = v12
        a20 = v20
        a21 = v21

        return me
    end
    
end