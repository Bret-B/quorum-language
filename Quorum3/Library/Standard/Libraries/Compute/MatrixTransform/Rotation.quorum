package Libraries.Compute.MatrixTransform

use Libraries.Compute.MatrixTransform.MatrixTransform
use Libraries.Compute.Matrix
use Libraries.Containers.Array

class Rotation is MatrixTransform
    private constant integer RIGHT = 1
    private constant integer LEFT = -1
    private integer direction = 0

    action Right()
        direction = RIGHT
    end

    action Left()
        direction = LEFT
    end


    action Transform(Matrix matrix) returns Matrix
        Matrix newMatrix
        newMatrix:SetSize(matrix:GetColumns(), matrix:GetRows())

        if direction = RIGHT
            col = matrix:GetRows() - 1
            row = 0
            repeat matrix:GetRows() times
                newMatrix:SetColumn(col, matrix:GetRow(row))
                col = col - 1
                row = row + 1
            end
        else
            col = 0
            row = 0
            repeat matrix:GetRows() times
                newMatrix:SetColumn(col, Reverse(matrix:GetRow(row)))
                col = col + 1
                row = row + 1
            end
        end

        return newMatrix
    end

    private action Reverse(Array<number> array) returns Array<number>
        Array<number> reversedArray
        repeat array:GetSize() times
            reversedArray:AddToFront(array:RemoveFromFront())
        end
        return reversedArray
    end
end