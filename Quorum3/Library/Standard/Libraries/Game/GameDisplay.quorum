package Libraries.Game

/*
    GameDisplay is responsible for handling information about LWJGL's Display
    object, which represents the game screen.
  
  source:
  https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
 */

/*
This class represents the game window. This class is handled automatically by
the Game class. Most users will never need to interact with this class directly.
*/
class GameDisplay 
    boolean resize = true

    /* This boolean represents whether the GameDisplay currently needs to render
    something new on the screen. */
    public boolean shouldrender = false

    private DesktopConfiguration config = undefined
    private boolean vsync = false
    
    /* 
    This action sets the DesktopConfiguration being used by the game,
    which includes data for the screen. 
    */
    action SetConfig(DesktopConfiguration conf)
        config = conf
    end

    /*
    This action returns the DesktopConfiguration being used by the
    GameDisplay.
    */
    action GetConfig returns DesktopConfiguration
        return config
    end

    /*
    This action initializes the GameDisplay.
    */
    system action SetupDisplay()

    /*
    This action sets the width and height of the GameDisplay, and optionally
    makes the game full screen.
    */
    system action SetDisplayMode(integer width, integer height, 
                                 boolean fullscreen) returns boolean

    /*
    This action returns the width of the GameDisplay.
    */
    system action GetWidth() returns integer

    /*
    This action returns the height of the GameDisplay.
    */
    system action GetHeight() returns integer
    //system action GetDisplayMode(DisplayMode disp) returns boolean

    /*
    This action sets vSync on or off for the GameDisplay.
    */
    system action SetVSync(boolean vsync)

    /*
    This action returns whether the GameDisplay is resizable or not.
    */
    action GetResize returns boolean
        return resize
    end

    /*
    This action sets whether the GameDisplay should be resizable or not.
    */
    action SetResize(boolean resize)
        me:resize = resize
    end

    /*
    This action checks for input events and processes them.
    */
    system action ProcessMessages

    /*
    This action determines if the user has tried to close the window by clicking
    the window's red close button.
    */
    system action IsCloseRequested returns boolean

    /*
    This action returns whether or not the GameDisplay is the currently active
    application on the system.
    */
    system action IsActive returns boolean

    /*
    This action returns the screen x coordinate of the GameDisplay.
    */
    system action GetDisplayX returns integer

    /*
    This action returns the screen y coordinate of the GameDisplay.
    */
    system action GetDisplayY returns integer

    /*
    This action returns whether or not the GameDisplay has been resized.
    */
    system action WasResized returns boolean

    /*
    This action tells the GameDisplay to render to the screen.
    */
    system action RequestRendering

    /*
    This action closes the window.
    */
    system action Destroy

    /*
    This action updates the game's timekeeping information.
    */
    system action UpdateTime

    /*
    This action records the time when the action is called, and stores it.
    */
    system action SetLastTime

    /*
    This action updates the game screen without polling the input.
    */
    system action UpdateFalse

    /*
    This action tests how many seconds have passed since the last time that the
    time was updated.
    */
    system action GetSecondsBetweenFrames returns number

    /*
    This action returns the ratio between screen coordinates and pixels.
    */
    system action GetPixelScaleFactor returns number
end