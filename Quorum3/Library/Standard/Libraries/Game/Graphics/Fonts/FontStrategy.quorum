package Libraries.Game.Graphics.Fonts

use Libraries.System.File
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Game.Graphics.Glyph
use Libraries.Game.Graphics.Color
use Libraries.System.Properties
use Libraries.Containers.Iterator

/*
The Font class is used to load a font from the system. 

Attribute: Example

    use Libraries.Game.Graphics.Font
    use Libraries.Game.Graphics.Label
    use Libraries.Game.Game

    class Main is Game

        action Main
            StartGame()
        end

        action CreateGame
            Font font
            Label label
            if not font:FontIsAvailable("Veranda")
                output "The font could not be found!"
                return now
            end
            font:LoadFont("Veranda")
            font:SetSize(18)
            label:SetFont(font)
            Add(label)
        end

    end
*/
class FontStrategy 
   
    
    /*
    This action loads a font from a given font file. 

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.System.File
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                File file
                file:SetPath("CustomFont.ttf")
                font:LoadFont(file)
            end

        end
    */
    blueprint action LoadFont(File fontFile)

    /*
    This action will load a font by name from the system. On Windows, this will
    search for fonts in "C:\Windows\Fonts". On Mac, this will search for fonts
    in "/Library/Fonts".

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:LoadFont("Arial")
            end

        end
    */
    blueprint action LoadFont(text fontName)


    /*
    This action will look in the default system font folder and look for a font
    of the given name. If a font is found with the same name, the action will
    return true. Otherwise, it returns false.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                boolean hasFont = font:FontIsAvailable("Times New Roman")
            end

        end
    */
   blueprint action FontIsAvailable(text fontName) returns boolean

    /*
    This action will set the size of the font. The default font size is 14.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:SetSize(16)
            end

        end
    */
    blueprint action SetSize (integer newSize)



    /*
    This action will return the current size of the font. The default font size
    is 14.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                output "The default font size is " + font:GetSize()
            end

        end
    */
    blueprint action GetSize returns integer


    /*
    This action will rotate the characters produced by this font by the given
    number of degrees.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:Rotate(45)
            end

        end
    */
    blueprint action Rotate(number rotation)

    /*
    This action will set the angle in degrees of the characters produced by this
    font.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:SetAngle(90)
            end

        end
    */
    blueprint action SetAngle(number newAngle)


    /*
    This action will set the color of the characters produced by this font.

    Attribute: Parameter newColor The color to use for this font.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Graphics.Color
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                Color color
                font:SetColor(color:Orange())
            end

        end
    */
    blueprint action SetColor(Color newColor)

    /*
    This action will return the color of the characters produced by this font.

    Attribute: Returns The color being used by this font.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Graphics.Color
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                Color color = font:GetColor()
            end

        end
    */
    blueprint action GetColor returns Color

    /*
    This action will return the current angle of the font. The default angle is
    0 degrees.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                output "The font has an angle of " + font:GetAngle() + " degrees."
            end

        end
    */
    blueprint action GetAngle returns number

    /*
    This action will release the resources used by a loaded font. The Font 
    object will no longer be usable until another font is loaded.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:LoadFont("Arial")
                font:Dispose()
            end

        end
    */
    blueprint action Dispose


    /*
    This action will return a Glyph object for this font's representation of the
    given character. 

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Graphics.Glyph
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:LoadFont("Arial")
                Glyph a = font:GetGlyph("a")
            end

        end
    */
    blueprint action GetGlyph(text character) returns Glyph



    blueprint action GetKerning(text currentCharacter, text nextCharacter) returns integer


    /*
    This action will check if the font has been loaded yet. If the font has
    been loaded, this will return true. Otherwise, it will return false.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:LoadFont("Arial")
                boolean loaded = font:IsLoaded()
            end

        end
    */
    blueprint action IsLoaded returns boolean


    /*
    This action will the height of each line of text produced by this font.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                font:LoadFont("Arial")
                integer height = font:GetLineHeight()
            end

        end
    */
    blueprint action GetLineHeight returns integer


    /*
    This action will return an array of all files found in the system's default
    font folder.

    Attribute: Example

        use Libraries.Game.Graphics.Font
        use Libraries.System.File
        use Libraries.Containers.Array
        use Libraries.Game.Game

        class Main is Game

            action Main
                StartGame()
            end

            action CreateGame
                Font font
                Array<File> fontFiles = font:GetAvailableFonts()
                integer index = 0
                output "The following fonts are available on the system: "
                repeat fontFiles:GetSize() times
                    File temp = fontFiles:Get(index)
                    output temp:GetPath()
                    index = index + 1
                end
            end

        end
    */
    blueprint action GetAvailableFonts returns Array<File>

end