package Libraries.Game.Graphics.Fonts

use Libraries.Containers.Array

/*
The TrueTypeCollectionData class maintains all of the relevant information needed
to access individual fonts within TrueTypeCollection (.ttc) font files. This is
primarily indecies to the various font tables (head, glyf, and so on) for the fonts,
but also some global font file information. Since .ttc files store multiple fonts
in the file, maintaining this information allows us to swap between different styles,
such as bold and italic, by just changing the corresponding TrueTypeFileInformation
values to those stored here. This avoids having to reread the font file when changing
styles. 

Attribute: Example

    use Libraries.Game.Game
    use Libraries.Game.Graphics.Fonts.all

    class Main is Game
        action Main
            StartGame()
        end

        action CreateGame
            TrueTypeFileInformation fileInformation
            TrueTypeCollectionData data
            data:SetAllTrueTypeInformation(fileInformation)
        end
    end
*/
class TrueTypeCollectionData
    /*Array of NameRecords for the font.*/
    Array<NameRecord> records
    /*A value in the font files that determines if the file is truly a TrueType
    font or not.*/
    integer scalerType = -1
    /*The number of tables in the font file.*/
    integer numberOfTables = -1
    /*The maximum index range for reading a table.*/
    integer searchRange = -1
    /*The index of the current entry in the table.*/
    integer entrySelector = -1
    /*How much each index of the table needs to be shifted by to get to the next
    index.*/
    integer rangeShift = -1
    /*The offset needed to access the glyph outline table.*/
    integer glyphOutlineTablePosition = -1
    /*The offset needed to access the character map table.*/
    integer characterMapTablePosition = -1
    /*The offset needed to access the glyph data table.*/
    integer glyphDataLocationTablePosition = -1
    /*The offset needed to access the kerning table.*/
    integer kerningTablePosition = -1
    /*The offset needed to access the kerning values table.*/
    integer kerningValuesTablePosition = -1
    /*The format that the character map table is in.*/
    integer characterMapFormat = -1 
    /*The offset needed to access the horizontal header table.*/
    integer horizontalHeaderTablePosition = -1
    /*The units per EM of the font.*/
    integer unitsPerEm = -1
    /*The leftmost x-coordinate position for a glyph in the font.*/
    Signed16BitFontUnit xMinimum
    /*The lowermost y-coordinate position for a glyph in the font.*/
    Signed16BitFontUnit yMinimum
    /*The rightmost x-coordinate position for a glyph in the font.*/
    Signed16BitFontUnit xMaximum
    /*The uppermost y-coordinate position for a glyph in the font.*/
    Signed16BitFontUnit yMaximum
    /*The maximum ascent of a font. This is the height from the baseline to the
    top of the highest glyph in the font.*/
    integer maximumAscent = -1
    /*The maximum descent of a font. This is the height from the baseline to the
    bottom of the lowest glyph in the font.*/
    integer maximumDescent = -1
    /*The line gap value used between two lines of characters. This is used in
    conjunction with maximumAscent and maximumDescent to find the proper spacing
    between lines.*/
    integer lineGap = -1
    /*The lowest recommended amount of pixels per EM to use for the font, which
    means the lowest recommended resolution.*/
    integer lowestRecommendedPixelsPerEm = - 1
    /*The direction to hint the font in.*/
    integer fontDirectionHint = -1
    /*The format of indecies used to access the location table.*/
    integer indexToLocationTableFormat = -1
    /*Flags that set some general information about the font file. See the
    GlobalFontInformationFlags class for details on these flags, or visit the
    Apple documentation on the "head" table.*/
    GlobalFontInformationFlags globalFontInformationFlags
    /*Flags that are specifically used when rendering the fonts on Mac. See the
    MacStyleFlags class for details on these flags, or visit the Apple documentation
    on the "head" table.*/
    MacStyleFlags macStyleFlags
    /*TrueTypeCollectionRecords maintains human readable information about the font file.*/
   
    /*
    This action returns the array of NameRecords for the font.

    Attribute: Returns Returns the array of NameRecords for the font.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Containers.Array

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                Array<NameRecord> records = data:GetNameRecords()
            end
        end
    */
    action GetNameRecords() returns Array<NameRecord>
        return records
    end
    
    /*
    This action returns the scaler type for the font.

    Attribute: Returns Returns the scaler type for the font.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetScalerType()
            end
        end
    */
    action GetScalerType() returns integer
        return scalerType
    end

    /*
    This action returns the number of tables for the font.

    Attribute: Returns Returns the number of tables for the font.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetNumberOfTables()
            end
        end
    */
    action GetNumberOfTables() returns integer
        return numberOfTables
    end

    /*
    This action returns the maximum index range for reading a table of the font.

    Attribute: Returns Returns the maximum index range for reading a table of the font.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetSearchRange()
            end
        end
    */
    action GetSearchRange() returns integer
        return searchRange
    end

    /*
    This action returns the index of the current entry in the table being read from.

    Attribute: Returns Returns the index of the current entry in the table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetEntrySelector()
            end
        end
    */
    action GetEntrySelector() returns integer
        return entrySelector
    end

    /*
    This action returns the value that each index of the table needs to be increased
    by to get the next index.

    Attribute: Returns Returns the value to adjust the index by.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetRangeShift()
            end
        end
    */
    action GetRangeShift() returns integer
        return rangeShift
    end

    /*
    This action returns the offset needed to access the glyph outline table.

    Attribute: Returns Returns the offset needed to access the glyph outline table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetGlyphOutlineTablePosition()
            end
        end
    */
    action GetGlyphOutlineTablePosition() returns integer
        return glyphOutlineTablePosition
    end

    /*
    This action returns the offset needed to access the character map table.

    Attribute: Returns Returns the offset needed to access the character map table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetCharacterMapTablPosition()
            end
        end
    */
    action GetCharacterMapTablePosition() returns integer
        return characterMapTablePosition
    end

    /*
    This action returns the offset needed to access the glyph data table.

    Attribute: Returns Returns the offset needed to access the glyph data table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetGlyphDataLocationTablePosition()
            end
        end
    */
    action GetGlyphDataLocationTablePosition() returns integer
        return glyphDataLocationTablePosition
    end

    /*
    This action returns the offset needed to access the kerning table.

    Attribute: Returns Returns the offset needed to access the kerning table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetKerningSubtablePosition()
            end
        end
    */
    action GetKerningSubtablePosition() returns integer
        return kerningTablePosition
    end

    /*
    This action returns the offset needed to access the kerning values table.

    Attribute: Returns Returns the offset needed to access the kerning values table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetKerningValuesTablePosition()
            end
        end
    */
    action GetKerningValuesTablePosition() returns integer
        return kerningValuesTablePosition
    end

    /*
    This action returns the format that the character map table is in.

    Attribute: Returns Returns the format that the character map table is in.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetCharacterMapFormat()
            end
        end
    */
    action GetCharacterMapFormat() returns integer
        return characterMapFormat
    end
    
    /*
    This action returns the offset needed to access the horizontal header table.

    Attribute: Returns Returns the offset needed to access the horizontal header table.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetHorizontalHeaderTablePosition()
            end
        end
    */
    action GetHorizontalHeaderTablePosition() returns integer
        return horizontalHeaderTablePosition
    end

    /*
    This action returns the units per EM of the font.

    Attribute: Returns Returns the units per EM of the font.

    Attribute: Example

        use Libraries.Game.Game
        use Libraries.Game.Graphics.Fonts.all

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData data
                output data:GetUnitsPerEm()
            end
        end
    */
    action GetUnitsPerEm() returns integer
        return unitsPerEm
    end

    /*
    This action returns the leftmost x-coordinate position of the font; no glyph in
    the font should be father left than this point.

    Attribute: Returns Returns the leftmost x-coordinate position of the font.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                Signed16BitFontUnit fontUnit
                fontUnit = information:GetXMinimum()
            end
        end 
    */
    action GetXMinimum() returns Signed16BitFontUnit
        return xMinimum
    end

    /*
    This action returns the lowermost y-coordinate position of the font; no glyph
    in the font should be below this point.

    Attribute: Returns Returns the lowermost y-coordinate position of the font.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                Signed16BitFontUnit fontUnit
                fontUnit = information:GetYMinimum()
            end
        end 
    */
    action GetYMinimum () returns Signed16BitFontUnit
       return yMinimum
    end

    /*
    This action returns the rightmost x-coordinate position of the font; no glyph
    in the font should be farther to the right than this point.

    Attribute: Returns Returns the rightmost x-coordinate position of the font.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                Signed16BitFontUnit fontUnit
                fontUnit = information:GetXMaximum()
            end
        end 
    */
    action GetXMaximum () returns Signed16BitFontUnit
        return me:xMaximum
    end

    /*
    This action returns the uppermost y-coordinate position of the font; no glyph
    in the font should be above this point.

    Attribute: Returns Returns the uppermost y-coordinate position of the font.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                Signed16BitFontUnit fontUnit
                fontUnit = information:GetYMaximum()
            end
        end 
    */
    action GetYMaximum() returns Signed16BitFontUnit
        return me:yMaximum
    end

    /*
    This action returns the maximum ascent, the distance from the baseline of the font
    to the highest point of the tallest glyph of the font, of the font, in pixels.

    Attribute: Returns Returns the maximum ascent of the font, in pixels.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                output information:GetMaximumAscent()
            end
        end
    */
    action GetMaximumAscent() returns integer
        return me:maximumAscent
    end

    /*
    This action returns the maximum descent, the distance from the baseline of the font
    to the lowest point of the lowest glyph of the font, of the font, in pixels.

    Attribute: Returns Returns the maximum descent of the font, in pixels.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                output information:GetMaximumDescent()
            end
        end
    */  
    action GetMaximumDescent() returns integer
        return me:maximumDescent
    end

    /*
    This action returns the line gap value to use when creating space between two
    lines of text.

    Attribute: Returns Returns the line gap value to use when creating space between
    two lines of text.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                information:GetLineGap()
            end
        end
    */
    action GetLineGap() returns integer
        return me:lineGap
    end

    /*
    This action returns the lowest recommended pixels per EM of the font.

    Attribute: Returns Returns the lowest recommended pixels per EM of the font.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                output information:GetLowestRecommendedPixelsPerEm()
            end
        end 
    */
    action GetLowestRecommendedPixelsPerEm() returns integer
        return me:lowestRecommendedPixelsPerEm
    end

    /*
    This action returns the direction to adjust pixels when performing hinting.

    Attribute: Returns Returns the direction to adjust pixels when performing hinting.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                output information:GetFontDirectionHint()
            end
        end 
    */
    action GetFontDirectionHint() returns integer
        return me:fontDirectionHint
    end

    /*
    This action returns the format of the indecies used to access the location table.

    Attribute: Returns Returns the format of the indecies used to access the location table.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeCollectionData information
                output information:GetIndexToLocationTableFormat()
            end
        end 
    */
    action GetIndexToLocationTableFormat() returns integer
        return me:indexToLocationTableFormat
    end

    /*
    This action sets all of the font information using a TrueTypeFileInformation
    object. This is primarily used when dealing with TrueTypeCollection (.ttc) format
    font files and you need to swap between different styles for the font. Rather than
    reloading and rereading the font, we store all of the appropriate information
    for each font style and just swap out the values as they are needed.

    Attribute: Parameter information The TrueTypeFileInformation to use for
    copying values into this font data.

    Attribute: Example

        use Libraries.Game.Graphics.Fonts.all
        use Libraries.Game.Game

        class Main is Game
            action Main
                StartGame()
            end

            action CreateGame
                TrueTypeFileInformation information
                TrueTypeCollectionData data
                data:SetAllTrueTypeInformation(information)
            end
        end 
    */
    action SetAllTrueTypeInformation(TrueTypeFileInformation information)
        scalerType = information:GetScalerType()
        numberOfTables = information:GetNumberOfTables()
        searchRange = information:GetSearchRange()
        entrySelector = information:GetEntrySelector()
        rangeShift = information:GetRangeShift()
        glyphOutlineTablePosition = information:GetGlyphOutlineTablePosition()
        characterMapTablePosition = information:GetCharacterMapTablePosition()
        glyphDataLocationTablePosition = information:GetGlyphDataLocationTablePosition()
        kerningTablePosition = information:GetKerningSubtablePosition()
        kerningValuesTablePosition = information:GetKerningValuesTablePosition()
        characterMapFormat = information:GetCharacterMapFormat()
        horizontalHeaderTablePosition = information:GetHorizontalHeaderTablePosition()
        unitsPerEm = information:GetUnitsPerEm()
        xMinimum = information:GetXMinimum()
        yMinimum = information:GetYMinimum()
        xMaximum = information:GetXMaximum()
        yMaximum = information:GetYMaximum()
        maximumAscent = information:GetMaximumAscent()
        maximumDescent = information:GetMaximumDescent()
        lineGap = information:GetLineGap()
        lowestRecommendedPixelsPerEm = information:GetLowestRecommendedPixelsPerEm()
        fontDirectionHint = information:GetFontDirectionHint()
        indexToLocationTableFormat = information:GetIndexToLocationTableFormat()
    end
end