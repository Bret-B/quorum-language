package Libraries.Game

use Libraries.Containers.Array
use Libraries.System.DateTime
use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.GraphicsManager
use Libraries.Game.Graphics.Painter

/*
    This is an internal class used by the Game class to manage several resources
    that must be unique. It is responsible for initial set up, execution of the
    main loop, and exiting a game. Most users will never use this class directly.
*/
class Application 

    Game game = undefined
    GameDisplay display = undefined
    integer loglevel = 1 //LOG_INFO
    GameStateManager manager
    GraphicsManager glmanager = undefined
    boolean running = true
 
    on create
        manager:SetApplication(me)
    end

    /*
        The Setup action is used for initial set up of the Game's resources, and
        will begin the game's main loop. This is automatically used by the Game
        class via the Game:StartGame() action.
    */
    action Setup(Game game, ApplicationConfiguration config, GameDisplay disp)
        //load natives?
        if config:title = ""
            config:title = "Game"
        end

        display = disp
        manager:SetGameDisplay(disp)
        me:game = game
        
        //Initialize the game graphics for the rest of the library.
        GraphicsManager temp
        manager:SetGameGraphics(temp)

        glmanager = manager:GetGameGraphics()
        /*
                Gdx.audio = audio;
		Gdx.files = files;
		Gdx.input = input;
		Gdx.net = net;
        */

        // This has moved into GameDisplay:SetupDisplay().
        //display:SetVSync(config:vSyncEnabled)

        Painter tempBatch
        
        // Necessary to use temporary variable to get around chaining bug
        Game tempGame = game
        tempGame:batch = tempBatch
    end

    /*
        This action tells the game to close at the end of the next iteration of
        the MainLoop. It is called automatically by the Game class's Exit action.
    */
    blueprint action Exit

    /*
        This action queries OpenGL to see if any errors have ocurred in the
        graphics pipeline, and is used for debugging only.
    */
    system action CheckForErrors

end