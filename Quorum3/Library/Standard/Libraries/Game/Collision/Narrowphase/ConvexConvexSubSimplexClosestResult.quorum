package Libraries.Game.Collision.Narrowphase

use Libraries.Compute.Vector3
use Libraries.Containers.Array

class ConvexConvexSubSimplexClosestResult
    Vector3 closestPointOnSimplex

    boolean usedVertexA = false
    boolean usedVertexB = false
    boolean usedVertexC = false
    boolean usedVertexD = false

    Array<number> barycentricCoordinates
    boolean degenerate = false

    on create
        barycentricCoordinates:SetSize(4)
    end

    action UsedVerticesReset
        usedVertexA = false
        usedVertexB = false
        usedVertexC = false
        usedVertexD = false
    end

    action Reset
        degenerate = false
        SetBarycentricCoordinates(0, 0, 0, 0)
        UsedVerticesReset()
    end

    action IsValid returns boolean
        boolean valid = barycentricCoordinates:Get(0) >= 0 and
                        barycentricCoordinates:Get(1) >= 0 and
                        barycentricCoordinates:Get(2) >= 0 and
                        barycentricCoordinates:Get(3) >= 0

        return valid
    end

    action SetBarycentricCoordinates(number a, number b, number c, number d)
        barycentricCoordinates:Set(0, a)
        barycentricCoordinates:Set(1, b)
        barycentricCoordinates:Set(2, c)
        barycentricCoordinates:Set(3, d)
    end

    action GetClosestPointOnSimplex returns Vector3
        return closestPointOnSimplex
    end

    action SetClosestPointOnSimplex(Vector3 point)
        closestPointOnSimplex = point
    end

    action UsedVertexA returns boolean
        return usedVertexA
    end

    action SetUsedVertexA(boolean flag)
        usedVertexA = flag
    end

    action UsedVertexB returns boolean
        return usedVertexB
    end

    action SetUsedVertexB(boolean flag)
        usedVertexB = flag
    end

    action UsedVertexC returns boolean
        return usedVertexC
    end

    action SetUsedVertexC(boolean flag)
        usedVertexC = flag
    end

    action UsedVertexD returns boolean
        return usedVertexD
    end

    action SetUsedVertexD(boolean flag)
        usedVertexD = flag
    end

    action GetBarycentricCoordinates returns Array<number>
        return barycentricCoordinates
    end

    action Degenerate returns boolean
        return degenerate
    end

    action SetDegenerate(boolean flag)
        degenerate = flag
    end
end