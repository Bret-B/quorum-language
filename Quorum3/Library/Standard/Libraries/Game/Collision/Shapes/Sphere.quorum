package Libraries.Game.Collision.Shapes

use Libraries.Compute.Vector3
use Libraries.Game.BoundingBox
use Libraries.Compute.Math
use Libraries.Game.Collision.PhysicsPosition3D

class Sphere is CollisionShape3D
    on create
        parent:CollisionShape3D:SetType(parent:CollisionShape3D:SPHERE)
        parent:CollisionShape3D:localScaling:Set(1, 1, 1)
    end

    action Set(number radius)
        parent:CollisionShape3D:implicitShapeDimensions:SetX(radius)
        parent:CollisionShape3D:collisionMargin = radius
    end

    action SetRadius(number radius)
        Set(radius)
    end

    action LocalGetSupportingVertexWithoutMargin(Vector3 vector) returns Vector3
        Vector3 out
        out:Set(0, 0, 0)
        return out
    end

    action ComputeBoundingBox(BoundingBox boundingBox, PhysicsPosition3D transform)
        Vector3 center = transform:GetOrigin()
        Vector3 extent
        extent:Set(GetMargin(), GetMargin(), GetMargin())
        Vector3 boundingBoxMinimum
        Vector3 boundingBoxMaximum
        boundingBoxMinimum:Set(center)
        boundingBoxMinimum:Subtract(extent)
        boundingBoxMaximum:Set(center)
        boundingBoxMaximum:Add(extent)
        boundingBox:Set(boundingBoxMinimum, boundingBoxMaximum)
    end

    action CalculateLocalInertia(number mass, Vector3 inertia)
        number elem = 0.4 * mass * GetMargin() * GetMargin()
        inertia:Set(elem, elem, elem)
    end

    action GetRadius returns number
        return parent:CollisionShape3D:implicitShapeDimensions:GetX() * parent:CollisionShape3D:localScaling:GetX()
    end
    
    action SetMargin(number margin)
        parent:CollisionShape3D:SetMargin(margin)
    end

    action GetMargin returns number
        return GetRadius()
    end

    action Copy returns CollisionShape3D
        Sphere sphere
        sphere:Set(me:GetRadius())
        sphere:parent:CollisionShape3D:localScaling:Set(parent:CollisionShape3D:localScaling)
        return sphere
    end

    action GetNumberPreferredPenetrationDirections returns integer
        return 0
    end

    action GetPreferredPenetrationDirection(integer index, Vector3 penetrationVector)
        
    end

    action GetChildCount returns integer
        return 1
    end
end