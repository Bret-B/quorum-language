use Libraries.Interface.Item3D
use Libraries.Compute.Math
use Libraries.Game.BoundingBox
use Libraries.Game.Collision.Item3DNode

package Libraries.Game.Collision

class DynamicBoundingVolumeTreeNode3D

    BoundingBox boundingBox
    DynamicBoundingVolumeTreeNode3D treeParent = undefined

    Item3DNode itemNode = undefined

    DynamicBoundingVolumeTreeNode3D leftChild = undefined
    DynamicBoundingVolumeTreeNode3D rightChild = undefined

    integer height = -1
    integer id = -1

    action SetID(integer id)
        me:id = id
    end
    
    action GetID returns integer
        return id
    end

    action SetItemNode(Item3DNode itemNode)
        me:itemNode = itemNode
    end

    action GetItemNode returns Item3DNode
        return itemNode
    end

    action GetHeight returns integer
        return height
    end

    action SetHeight(integer height)
        me:height = height
    end

    action GetBoundingBox returns BoundingBox
        return boundingBox
    end

    action SetBoundingBox(BoundingBox boundingBox)
        me:boundingBox = boundingBox
    end

    action GetParent returns DynamicBoundingVolumeTreeNode3D
        return treeParent
    end

    action SetParent(DynamicBoundingVolumeTreeNode3D treeParent)
        me:treeParent = treeParent
    end

    action GetLeftChild returns DynamicBoundingVolumeTreeNode3D
        return leftChild
    end

    action SetLeftChild(DynamicBoundingVolumeTreeNode3D leftChild)
        me:leftChild = leftChild
    end

    action GetRightChild returns DynamicBoundingVolumeTreeNode3D
        return rightChild
    end

    action SetRightChild(DynamicBoundingVolumeTreeNode3D rightChild)
        me:rightChild = rightChild
    end

    action IsLeaf returns boolean
        return leftChild = undefined
    end
end