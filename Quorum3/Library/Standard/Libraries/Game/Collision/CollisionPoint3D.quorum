package Libraries.Game.Collision

use Libraries.Compute.Vector3

class CollisionPoint3D 
    public Vector3 localPointA
    public Vector3 localPointB
    public Vector3 positionWorldOnB
    public Vector3 positionWorldOnA
    public Vector3 normalWorldOnB

    public number distance1 = 0
    public number combinedFriction = 0
    public number combinedRestitution = 0

    public integer partID0 = 0
    public integer partID1 = 0
    public integer index0 = 0
    public integer index1 = 0

    public number appliedImpulse = 0
    
    public boolean lateralFrictionInitialized = false
    public number appliedImpulseLateral1 = 0
    public number appliedImpulseLateral2 = 0
    public integer lifeTime = 0

    public Vector3 lateralFrictionDirection1
    public Vector3 lateralFrictionDirection2

    action Initialize(Vector3 pointA, Vector3 pointB, Vector3 normal, number distance)
        localPointA:Set(pointA)
        localPointB:Set(pointB)
        normalWorldOnB:Set(normal)
        distance1 = distance
    end

    action GetDistance returns number
        return distance1
    end

    action GetLifeTime returns integer
        return lifeTime
    end

    action Set(CollisionPoint3D point)
        localPointA:Set(point:localPointA)
        localPointB:Set(point:localPointB)
        positionWorldOnA:Set(point:positionWorldOnA)
        positionWorldOnB:Set(point:positionWorldOnB)
        normalWorldOnB:Set(point:normalWorldOnB)
        distance1 = point:distance1
        combinedFriction = point:combinedFriction
        combinedRestitution = point:combinedRestitution
        partID0 = point:partID0
        partID1 = point:partID1
        index0 = point:index0
        index1 = point:index1
        appliedImpulse = point:appliedImpulse
        lateralFrictionInitialized = point:lateralFrictionInitialized
        appliedImpulseLateral1 = point:appliedImpulseLateral1
        appliedImpulseLateral2 = point:appliedImpulseLateral2
        lifeTime = point:lifeTime
        lateralFrictionDirection1:Set(point:lateralFrictionDirection1)
        lateralFrictionDirection2:Set(point:lateralFrictionDirection2)
    end

    action GetPositionWorldOnA(Vector3 out) returns Vector3
        out:Set(positionWorldOnA)
        return out
    end

    action GetPositionWorldOnB(Vector3 out) returns Vector3
        out:Set(positionWorldOnB)
        return out
    end

    action SetDistance(number distance)
        distance1 = distance
    end

    action SetAppliedImpulse(number impulse)
        appliedImpulse = impulse
    end

    action SetLateralFrictionInitialized(boolean flag)
        lateralFrictionInitialized = flag
    end

    action SetAppliedImpulseLateral1(number impulse)
        appliedImpulseLateral1 = impulse
    end

    action SetAppliedImpulseLateral2(number impulse)
        appliedImpulseLateral2 = impulse
    end

    action SetLifeTime(integer lifeTime)
        me:lifeTime = lifeTime
    end
end