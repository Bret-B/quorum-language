/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.quorum.execution;

import org.quorum.steps.*;

/**
 * This class represents a general visitor for all op-codes on the system.
 * 
 * @author Andreas Stefik
 */
public interface ExecutionStepVisitor {
    public void visit(AlertStep step);
    public void visit(AlwaysEndStep step);
    public void visit(AssignIntegerObjectToNumberAutoBoxLocalStep step);
    public void visit(AssignIntegerObjectToNumberAutoBoxStep step);
    public void visit(AssignObjectAutoBoxLocalStep step);
    public void visit(AssignObjectAutoBoxStep step);
    public void visit(AssignmentBooleanLocalStep step);
    public void visit(AssignmentBooleanStep step);
    public void visit(AssignmentCustomLocalStep step);
    public void visit(AssignmentCustomStep step);
    public void visit(AssignmentIntegerLocalStep step);
    public void visit(AssignmentIntegerStep step);
    public void visit(AssignmentNumberIntegerLocalStep step);
    public void visit(AssignmentNumberIntegerStep step);
    public void visit(AssignmentNumberLocalStep step);
    public void visit(AssignmentNumberStep step);
    public void visit(AssignmentTextLocalStep step);
    public void visit(AssignmentTextStep step);
    public void visit(AutoBoxCreateStep step);
    public void visit(BeginCheckScopeStep step);
    public void visit(BeginScopeStep step);
    public void visit(BinaryAddBooleanTextStep step);
    public void visit(BinaryAddIntegerNumberStep step);
    public void visit(BinaryAddIntegerTextStep step);
    public void visit(BinaryAddNumberIntegerStep step);
    public void visit(BinaryAddNumberStep step);
    public void visit(BinaryAddNumberTextStep step);
    public void visit(BinaryAddStep step);
    public void visit(BinaryAddTextBooleanStep step);
    public void visit(BinaryAddTextIntegerStep step);
    public void visit(BinaryAddTextNumberStep step);
    public void visit(BinaryAndStep step);
    public void visit(BinaryConcatenateStep step);
    public void visit(BinaryDivideIntegerNumberStep step);
    public void visit(BinaryDivideNumberIntegerStep step);
    public void visit(BinaryDivideNumberStep step);
    public void visit(BinaryDivideStep step);
    public void visit(BinaryEqualsBooleanStep step);
    public void visit(BinaryEqualsCustomCustomStep step);
    public void visit(BinaryEqualsCustomNullStep step);
    public void visit(BinaryEqualsIntegerNumberStep step);
    public void visit(BinaryEqualsNullCustomStep step);
    public void visit(BinaryEqualsNumberIntegerStep step);
    public void visit(BinaryEqualsNumberStep step);
    public void visit(BinaryEqualsStep step);
    public void visit(BinaryEqualsStringStep step);
    public void visit(BinaryGreaterEqualsIntegerNumberStep step);
    public void visit(BinaryGreaterEqualsNumberIntegerStep step);
    public void visit(BinaryGreaterEqualsNumberStep step);
    public void visit(BinaryGreaterEqualsStep step);
    public void visit(BinaryGreaterEqualsStringStep step);
    public void visit(BinaryGreaterThanIntegerNumberStep step);
    public void visit(BinaryGreaterThanNumberIntegerStep step);
    public void visit(BinaryGreaterThanNumberStep step);
    public void visit(BinaryGreaterThanStep step);
    public void visit(BinaryGreaterThanStringStep step);
    public void visit(BinaryIsACustomCustomStep step);
    public void visit(BinaryLessEqualsIntegerNumberStep step);
    public void visit(BinaryLessEqualsNumberIntegerStep step);
    public void visit(BinaryLessEqualsNumberStep step);
    public void visit(BinaryLessEqualsStep step);
    public void visit(BinaryLessEqualsStringStep step);
    public void visit(BinaryLessThanIntegerNumberStep step);
    public void visit(BinaryLessThanNumberIntegerStep step);
    public void visit(BinaryLessThanNumberStep step);
    public void visit(BinaryLessThanStep step);
    public void visit(BinaryLessThanStringStep step);
    public void visit(BinaryModIntegerNumberStep step);
    public void visit(BinaryModNumberIntegerStep step);
    public void visit(BinaryModNumberStep step);
    public void visit(BinaryModStep step);
    public void visit(BinaryMultiplyIntegerNumberStep step);
    public void visit(BinaryMultiplyNumberIntegerStep step);
    public void visit(BinaryMultiplyNumberStep step);
    public void visit(BinaryMultiplyStep step);
    public void visit(BinaryNotEqualsBooleanStep step);
    public void visit(BinaryNotEqualsCustomCustomStep step);
    public void visit(BinaryNotEqualsCustomNullStep step);
    public void visit(BinaryNotEqualsIntegerNumberStep step);
    public void visit(BinaryNotEqualsNullCustomStep step);
    public void visit(BinaryNotEqualsNumberIntegerStep step);
    public void visit(BinaryNotEqualsNumberStep step);
    public void visit(BinaryNotEqualsStep step);
    public void visit(BinaryNotEqualsStringStep step);
    public void visit(BinaryOrStep step);
    public void visit(BinarySubtractIntegerNumberStep step);
    public void visit(BinarySubtractNumberIntegerStep step);
    public void visit(BinarySubtractNumberStep step);
    public void visit(BinarySubtractStep step);
    public void visit(BooleanAutoBoxStep step);
    public void visit(CallStep step);
    public void visit(ConditionalJumpCheckStep step);
    public void visit(ConditionalJumpIfStep step);
    public void visit(ConditionalJumpLoopStep step);
    public void visit(CreateObjectStep step);
    public void visit(DataStackPopStep step);
    public void visit(EndScopeStep step);
    public void visit(InputStep step);
    public void visit(IntegerAutoBoxStep step);
    public void visit(JumpStep step);
    public void visit(MeVariableMoveStep step);
    public void visit(MoveRegistersStep step);
    public void visit(MoveStep step);
    public void visit(NullIntermediateStep step);
    public void visit(NullExecutionStep step);
    public void visit(NumberAutoBoxStep step);
    public void visit(ObjectCastStep step);
    public void visit(ObjectInitParentStep step);
    public void visit(ObjectInitPopStep step);
    public void visit(ParentVariableMoveStep step);
    public void visit(PrintStep step);
    public void visit(PushStep step);
    public void visit(ReturnStep step);
    public void visit(SimpleAlertStep step);
    public void visit(SpeakStep step);
    public void visit(TextAutoBoxStep step);
    public void visit(ThisMoveStep step);
    public void visit(UnaryBooleanBooleanCastStep step);
    public void visit(UnaryBooleanIntegerCastStep step);
    public void visit(UnaryBooleanNumberCastStep step);
    public void visit(UnaryBooleanTextCastStep step);
    public void visit(UnaryIntegerBooleanCastStep step);
    public void visit(UnaryIntegerIntegerCastStep step);
    public void visit(UnaryIntegerNumberCastStep step);
    public void visit(UnaryIntegerTextCastStep step);
    public void visit(UnaryNotStep step);
    public void visit(UnaryNumberBooleanCastStep step);
    public void visit(UnaryNumberIntegerCastStep step);
    public void visit(UnaryNumberNumberCastStep step);
    public void visit(UnaryNumberTextCastStep step);
    public void visit(UnaryTextBooleanCastStep step);
    public void visit(UnaryTextIntegerCastStep step);
    public void visit(UnaryTextNumberCastStep step);
    public void visit(UnaryTextTextCastStep step);
    public void visit(VariableInObjectMoveStep step);
    public void visit(VariableMoveStep step);
}
