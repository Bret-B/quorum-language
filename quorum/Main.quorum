use Libraries.System.File
use Libraries.System.FileReader
use Libraries.System.Blueprints.FileReaderBlueprint
use Libraries.System.Blueprints.FileWriterBlueprint
use Libraries.System.Blueprints.FileRandomAccessBlueprint
use Libraries.Containers.Blueprints.Indexed
use Libraries.Language.Errors.InputOutputError
use Libraries.Language.Errors.FileNotFoundError

use Libraries.Containers.Array
class Main
    action Main
        print "====== BEGIN FileRandomAccess TESTS ======"
        File fra
        fra:SetPath("/Users/jeff/readMe.txt")
        FileRandomAccessBlueprint ra = fra:OpenForRandomAccess()
        print ra:Read(1)
        print ra:Read(4)
        print ra:ReadLine()
        print ra:Read()
        fra:Close()
        
        ra = fra:OpenForRandomAccess()
        ra:Write("abcde")
        ra:WriteLine("oh hello")
        fra:Close()

        /*ra = fra:OpenForRandomAccess()
        Indexed<text> lines = ra:ReadLines()
        print lines:Get(0)
        print lines:Get(1)
        print lines:Get(2)
        fra:Close()*/

        print ""
        print ""
        print "====== BEGIN FileWriter TESTS ======"
        // Create new file.
        File fw
        fw:SetPath("/Users/jeff/writeMe.txt")
        FileWriterBlueprint writer0 = fw:OpenForWrite()
        writer0:Write("abc")
        writer0:WriteLine("d")
        writer0:WriteLine("e")
        writer0:PushToDisk()
        fw:Close()

        // Append to the file we just made.
        writer0 = fw:OpenForWriteAppend()
        writer0:WriteLine("i just added this line.")
        writer0:Write("zzz")
        fw:Close()

        // Append to a file that doesn't exist.
        fw:SetPath("/Users/jeff/writeMe2.txt")
        writer0 = fw:OpenForWriteAppend()
        writer0:Write("this is a")
        writer0:Write(" new file and i'm")
        writer0:WriteLine("opening it in append mode.")
        writer0:WriteLine("blah")
        writer0:WriteLine("")
        writer0:Write("")
        fw:Close()

        print ""
        print ""
        print "====== BEGIN FileReader TESTS ======"
        // Open a file, read all of its contents.
        File f
        f:SetPath("/Users/jeff/readMe.txt")
        FileReaderBlueprint reader0 = f:OpenForRead()
        print "All file contents:"
        print reader0:Read() // read all contents.
        print "End file contents."
        f:Close()
        print ""
        
        // Read one line at a time.
        reader0 = f:OpenForRead()
        print "All file contents:"
        print reader0:ReadLine()
        print reader0:ReadLine()
        print reader0:ReadLine()
        print "End file contents."
        f:Close()
        print ""
        
        // Mix up line reading and byte reading.
        reader0 = f:OpenForRead()
        print "All file contents:"
        print reader0:Read(2)
        print reader0:Read(3)
        print reader0:ReadLine()
        print reader0:ReadLine()
        print reader0:Read(1000) // read well beyond EOF. shouldn't throw an exception.
        print "End file contents."
        f:Close()
        print ""

        // Read some bytes, then just read the rest.
        reader0 = f:OpenForRead()
        print "All file contents:"
        print reader0:Read(9)
        print reader0:Read()
        print "End file contents."
        f:Close()
        print ""
        print ""
        
        // Finally, test ReadLines().
        /*reader0 = f:OpenForRead()
        lines = reader0:ReadLines()
        print "All file contents:"
        print lines:Get(0)
        print lines:Get(1)
        print lines:Get(2)
        print "End file contents."
        f:Close()*/

        print "====== BEGIN FILE TESTS ======"
        // Check for current dir.
        File f1
        print f1:GetPath()

        // Set the path and then get it.
        File f2
        f2:SetPath("/Users/jeff")
        print f2:GetPath()

        // Check some stats on a file.
        File f3
        f3:SetPath("/Users/") // one directory above everyone's home dir on OS X
        print f3:GetPath()
        print f3:IsFile()
        print f3:IsDirectory()
        print f3:Exists()
        print f3:IsHidden()
        print f3:GetFreeDiskSpace()
        print f3:GetTotalDiskSpace()
        print f3:GetFileName()
        print f3:GetFileSize()
        print "The extension is " + f3:GetFileExtension()
        
        // Some other stats
        File f4
        f4:SetPath("/Users/jeff/i_dont_exist.txt")
        print f4:IsFile()
        print f4:Exists()
        File p = f4:GetParentDirectory()
        print "f4's parent is " + p:GetPath()
        print "f4's extension is " + f4:GetFileExtension()

        // Some edge cases -- parent dir for a file that doesn't exist?
        File f5
        f5:SetPath("/ksdjfksldfja/kf")
        File f6 = f5:GetParentDirectory()

        // ... or what if there isn't a parent?!
        File f7
        f7:SetPath("/")
        File f8 = f7:GetParentDirectory()
        if f8 = undefined
            print "f7 has no parent. this is correct."
        end

        // Test file renaming.
        File f9
        f9:SetPath("/Users/jeff/rename.txt")
        f9:Move("/Users/jeff/renamedit.txt")
        print f9:GetPath()
    end
end