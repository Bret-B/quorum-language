package Libraries.Language.Types

use Libraries.Language.Object
use Libraries.Language.Support.CompareResult

/*
The Integer class is the object representation of the primitive type integer. 


Attribute: Example

class Main
   action Main
      integer age = 15
      Integer result = test(age)
   end
   action test(Integer int) returns Integer
        return int
   end
end
*/
class Integer is a Object
    //The value this Integer class represents
    private integer value = 0
    public constant integer maximumValue = 2147483647
    public constant integer minimumValue = -2147483647 - 1
    /*
        This action sets the value of the integer object.

        Attribute: Parameter i The integer value.

        Attribute: Example

        Integer age
        age:SetValue(15)
    */ 
    action SetValue(integer i)
        value = i
    end

    /*
        This action gets the value from the integer object.

        Attribute: Returns The value of the object.

        Attribute: Example

        Integer age
        integer result = age:GetValue()
    */ 
    action GetValue returns integer
        return value
    end

    /*
        This action gets the value from the Integer object and casts it to
        a number.

        Attribute: Returns The value of the object converted to a number.

        Attribute: Example

        Integer age
        number result = age:GetNumberValue()
    */ 
    action GetNumberValue returns number
        return cast(number, value)
    end

    /*
        This action gets the value from the integer object and casts it to
        a text value.

        Attribute: Returns The value of the object converted to text.

        Attribute: Example

        Integer age
        text result = age:GetTextValue()
    */ 
    action GetTextValue returns text
        return cast(text, value)
    end

    /*
        This action gets the value from the intger object and casts it to
        an boolean.

        Attribute: Returns The value of the object converted to an boolean.

        Attribute: Example

        Integer age
        boolean result = age:GetBooleanValue()
    */ 
    action GetBooleanValue returns boolean
        return cast(boolean, value)
    end

    /*
        This action compares two object values and returns a CompareResult.
        The compare result is either larger if this hash code is larger than
        the object passed as a parameter, smaller, or equal.

        Attribute: Parameter object The object to compare to.
        Attribute: Returns The Comprare result, Smaller, Equal, or Larger. 

        Attribute: Example
        use Libraries.Language.Support.CompareResult
        Integer o
        Integer t
        CompareResult result = o:Compare(t)
    */ 
    action Compare(Object object) returns CompareResult
        CompareResult result

        integer thisOne = me:value
        Integer b = cast(Integer, object)

        integer other = b:GetValue()

        if thisOne = other
            result:result = result:EQUAL
        elseif thisOne < other
            result:result = result:SMALLER
        else
            result:result = result:LARGER
        end
        return result
    end

    /*
        This action determines if two objects are equal based on their
        values.

        Attribute: Parameter object The to be compared.

        Attribute: Returns True if the values are equal and false if they
        are not equal. 

        Attribute: Example

        Integer o
        Integer t
        boolean result = o:Equals(t)
    */ 
    action Equals(Object object) returns boolean
        integer myValue = GetValue()

        Integer t = undefined
        t = cast(Integer, object)
        integer otherValue = t:GetValue()

        return myValue = otherValue
    end
end